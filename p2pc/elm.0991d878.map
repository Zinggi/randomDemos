{"version":3,"sources":["dist/elm.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","F7","g","F8","h","F9","i","A2","A3","A4","A5","A6","console","warn","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_Utils_Tuple2","length","_JsArray_unsafeGet","index","array","_JsArray_unsafeSet","value","_JsArray_push","_JsArray_foldr","acc","_JsArray_slice","from","to","slice","_JsArray_appendN","n","dest","source","destLen","itemsToCopy","tag","log","_Debug_toString","_Debug_toAnsiString","ansi","_Debug_internalColor","_Debug_ctorColor","_Debug_numberColor","string","String","_Debug_charColor","_Debug_addSlashes","_Debug_stringColor","$","output","k","push","join","_Debug_fadeColor","elm$core$Set$toList","elm$core$Dict$toList","elm$core$Array$toList","str","c0","parenless","indexOf","DataView","byteLength","File","name","key","field","isChar","s","replace","_Debug_crash","identifier","fact1","fact2","fact3","fact4","Error","document","location","href","portName","moduleName","region","message","_Debug_regionToString","start","line","end","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","_Utils_equal","_Utils_cmp","ord","valueOf","_Utils_lt","_Utils_compare","elm$core$Basics$LT","elm$core$Basics$GT","elm$core$Basics$EQ","_Utils_Tuple0","_Utils_Tuple3","_Utils_chr","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil_UNUSED","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","_List_toArray","_List_map2","_Basics_modBy","zs","ws","vs","sort","Math","pow","modulus","answer","PI","E","cos","sin","tan","acos","asin","atan","atan2","_Basics_ceiling","ceil","_Basics_floor","floor","_Basics_log","round","sqrt","isNaN","_Basics_and","_Bitwise_or","_Bitwise_xor","_Bitwise_shiftLeftBy","_String_cons","chr","len","word","charCodeAt","_String_map","_String_filter","isGood","char","state","_String_foldl","_String_foldr","_String_split","sep","split","_String_join","strs","_String_slice","_String_any","_String_all","_String_contains","sub","_String_indexes","lastIndexOf","subLen","is","_String_fromNumber","number","_Json_decodePrim","decoder","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_decodeInt","_Json_decodeValue","_Json_wrap","_Json_decodeString","_Json_decodeField","_Json_mapMany","decoders","_Json_andThen","callback","_Json_map1","d1","_Json_map2","d2","_Json_run","d3","d4","d5","d6","d7","d8","_Json_runHelp","JSON","parse","elm$core$Result$Err","elm$json$Json$Decode$Failure","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","errors","temp","elm$json$Json$Decode$OneOf","toElmValue","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Json_encode","indentLevel","stringify","_Json_addField","object","_Scheduler_succeed","_Scheduler_binding","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","impl","flagDecoder","debugMetadata","args","_Platform_initialize","init","update","subscriptions","stepperBuilder","error","undefined","elm$json$Json$Decode$errorToString","managers","model","stepper","sendToApp","ports","_Platform_setupEffects","_Platform_effectManagers","manager","_Platform_instantiateManager","viewMetadata","_Platform_dispatchEffects","info","router","onEffects","onSelfMsg","cmdMap","subMap","loop","j","_Platform_sendToApp","_Platform_leaf","home","l","tagger","bag","o","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","taggers","effect","_Platform_toEffect","applyTaggers","q","p","_Platform_insert","newEffect","effects","list","m","_Platform_checkPortName","_Platform_outgoingPortMap","_Platform_setupOutgoingPort","subs","time","converter","r","id","setTimeout","clearTimeout","cmdList","currentSubs","subscribe","unsubscribe","splice","_Platform_incomingPortMap","_VirtualDom_divertHrefToApp","finalTagger","_Platform_setupIncomingPort","subList","send","incomingValue","_VirtualDom_doc","_VirtualDom_appendChild","parent","child","appendChild","virtualNode","node","parentNode","replaceChild","_VirtualDom_render","_VirtualDom_text","_VirtualDom_nodeNS","_VirtualDom_node","namespace","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_keyedNodeNS","_VirtualDom_thunk","refs","thunk","A7","A8","_VirtualDom_lazy","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","attr","_VirtualDom_mapHandler","elm$virtual_dom$VirtualDom$toHandlerInt","elm$json$Json$Decode$map2","_VirtualDom_mapEventTuple","_VirtualDom_mapEventRecord","elm$json$Json$Decode$succeed","elm$json$Json$Decode$map","_VirtualDom_passiveSupported","tuple","record","stopPropagation","preventDefault","facts","entry","subFacts","_VirtualDom_addClass","newClass","classes","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","oldHandler","removeEventListener","_VirtualDom_makeCallback","passive","window","Object","defineProperty","get","initialHandler","event","currentEventNode","_VirtualDom_equalEvents","_VirtualDom_diff","patches","_VirtualDom_diffHelp","_VirtualDom_pushPatch","data","patch","t","u","xType","yType","_VirtualDom_dekey","keyedNode","keyedKids","same","xRefs","yRefs","subPatches","xSubNode","xTaggers","yTaggers","nesting","ySubNode","_VirtualDom_pairwiseRefEqual","as","bs","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","xIndex","localPatches","changes","inserts","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","z","A","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","_VirtualDom_applyPatchReorder","frag","_VirtualDom_applyPatchReorderEndInsertsHelp","createDocumentFragment","insert","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","tagName","toLowerCase","_Browser_element","initialModel","view","currNode","_Browser_makeAnimator","nextNode","_Browser_requestAnimationFrame","divertHrefToApp","setup","title","bodyNode","body","doc","cancelAnimationFrame","requestAnimationFrame","draw","updateIfNeeded","nextModel","isSync","elm$core$Task$perform","elm$core$Basics$never","history","go","url","pushState","replaceState","_Browser_go","_Browser_fakeNode","_Browser_window","eventName","sendToSelf","elm$core$Maybe$Just","elm$core$Maybe$Nothing","_Browser_withNode","doStuff","getElementById","elm$browser$Browser$Dom$NotFound","functionName","_Browser_withWindow","scroll","scrollLeft","scrollTop","author$project$Main$JsPort","fen","components","epSquare_","sideToMove_","castleRights","board","whiteKingSquare","blackKingSquare","author$project$Main$Init","elm$core$Elm$JsArray$foldr","elm$core$Array$foldr","baseCase","_n0","tree","tail","helper","subTree","values","elm$core$List$cons","elm$core$Dict$foldr","left","right","$temp$func","$temp$acc","dict","elm$core$Dict$keys","keyList","elm$core$Basics$identity","romstad$elm_chess$Game$Game","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Array$Leaf","elm$core$Array$SubTree","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Basics$eq","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","_JsArray_length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","elm$core$Array$fromListHelp","jsArray","remainingItems","elm$core$Array$fromList","elm$core$Maybe$withDefault","_default","maybe","elm$core$Array$bitMask","elm$core$Elm$JsArray$unsafeGet","elm$core$Elm$JsArray$unsafeSet","elm$core$Array$setHelp","pos","newSub","newLeaf","elm$core$Array$tailIndex","elm$core$Array$set","startShift","elm$core$List$repeatHelp","elm$core$List$repeat","elm$core$Bitwise$or","romstad$elm_chess$Internal$Piece$Piece","romstad$elm_chess$Internal$PieceColor$unwrap","color","color_","romstad$elm_chess$Internal$PieceType$unwrap","kind","kind_","romstad$elm_chess$Internal$Piece$make","romstad$elm_chess$Internal$PieceColor$PieceColor","romstad$elm_chess$Internal$PieceColor$empty","romstad$elm_chess$Internal$PieceType$PieceType","romstad$elm_chess$Internal$PieceType$none","romstad$elm_chess$Internal$Piece$empty","romstad$elm_chess$Internal$PieceColor$outside","romstad$elm_chess$Internal$Piece$outside","elm$core$List$foldrHelper","fn","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$append","elm$core$List$map","elm$core$List$concatMap","elm$core$List$concat","lists","romstad$elm_chess$Internal$Square$Square","romstad$elm_chess$Internal$SquareFile$unwrap","file","file_","romstad$elm_chess$Internal$SquareRank$unwrap","rank","rank_","romstad$elm_chess$Internal$Square$make","elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","romstad$elm_chess$Internal$SquareFile$SquareFile","romstad$elm_chess$Internal$SquareFile$all","romstad$elm_chess$Internal$BoardDimensions$fileMin","romstad$elm_chess$Internal$SquareRank$SquareRank","romstad$elm_chess$Internal$SquareRank$all","romstad$elm_chess$Internal$BoardDimensions$rankMin","romstad$elm_chess$Internal$Square$all","romstad$elm_chess$Internal$Square$unwrap","square","square_","romstad$elm_chess$Internal$Board$empty","romstad$elm_chess$Internal$CastleRights$CastleRights","romstad$elm_chess$Internal$CastleRights$empty","romstad$elm_chess$Internal$PieceColor$white","romstad$elm_chess$Internal$Position$Position","romstad$elm_chess$Internal$Position$empty","epSquare","gamePly","lastMove","rule50Counter","sideToMove","elm$core$Array$getHelp","elm$core$Array$get","elm$core$List$filter","elm$core$List$head","elm$core$String$split","elm$core$String$foldr","elm$core$String$toList","romstad$elm_chess$Internal$Board$ReadFenState","fileIndex","rankIndex","elm$core$Char$toCode","_Char_toCode","code","elm$core$Char$isDigit","_char","romstad$elm_chess$Internal$Board$putPiece","piece","elm$core$Basics$modBy","romstad$elm_chess$Internal$Square$expand","romstad$elm_chess$Internal$Board$readFenPiece","elm$core$Char$isUpper","elm$core$Maybe$map","romstad$elm_chess$Internal$PieceColor$black","elm$core$Char$toUpper","_Char_toUpper","toUpperCase","romstad$elm_chess$Internal$PieceType$bishop","romstad$elm_chess$Internal$PieceType$king","romstad$elm_chess$Internal$PieceType$knight","romstad$elm_chess$Internal$PieceType$pawn","romstad$elm_chess$Internal$PieceType$queen","romstad$elm_chess$Internal$PieceType$rook","romstad$elm_chess$Internal$PieceType$fromChar","ch","romstad$elm_chess$Internal$Board$processFenChar","romstad$elm_chess$Internal$Piece$fromChar","romstad$elm_chess$Internal$Board$pieceOn","romstad$elm_chess$Internal$CastleRights$fromChar","romstad$elm_chess$Internal$Piece$blackKing","romstad$elm_chess$Internal$Piece$whiteKing","elm$core$Maybe$andThen","maybeValue","romstad$elm_chess$Internal$PieceColor$fromChar","elm$core$String$length","_String_length","elm$core$String$slice","elm$core$String$dropLeft","romstad$elm_chess$Internal$SquareFile$fromChar","f_","romstad$elm_chess$Internal$SquareRank$fromChar","romstad$elm_chess$Internal$Square$fromString","romstad$elm_chess$Internal$SquareRank$fromString","romstad$elm_chess$Internal$SquareFile$fromString","romstad$elm_chess$Internal$Position$initial","romstad$elm_chess$Internal$CastleRights$fromString","romstad$elm_chess$Internal$BoardDimensions$rankCount","romstad$elm_chess$Internal$Board$fromFen","romstad$elm_chess$Internal$Game$empty","currentMoveIndex","currentPosition","positions","tags","romstad$elm_chess$Game$empty","author$project$Main$initModel","candidateMoves","game","gameState","isBlack","myAnswer","myOffer","otherOffer","selectedSquare","author$project$Main$output","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fromIndex","leaf","tailLen","elm$core$Char$isLower","elm$core$Char$isAlpha","elm$core$Char$isAlphaNum","elm$core$List$length","elm$core$List$map2","elm$core$List$indexedMap","elm$core$String$all","elm$core$String$fromInt","elm$core$String$join","chunks","elm$core$String$uncons","_String_uncons","elm$json$Json$Decode$indent","elm$json$Json$Encode$encode","elm$json$Json$Decode$errorOneOf","elm$json$Json$Decode$errorToStringHelp","context","errorToStringHelp","err","isSimple","_n1","_n2","rest","$temp$error","$temp$context","indexName","starter","introduction","json","elm$json$Json$Encode$int","elm$json$Json$Decode$value","author$project$Main$input","_Platform_incomingPort","author$project$Main$MyTurn","author$project$Main$OtherTurn","author$project$Main$GotAnswer","author$project$Main$GotOffer","author$project$Main$GotMove","author$project$Main$GotRematch","author$project$Main$Ready","author$project$Main$Ready2","elm$json$Json$Decode$andThen","elm$json$Json$Decode$fail","_Json_fail","elm$json$Json$Decode$field","elm$json$Json$Decode$string","_Json_succeed","author$project$Main$msgDecoder","author$project$Main$portDecoder","elm$core$Basics$not","_Basics_not","bool","author$project$Main$rematch","elm$json$Json$Encode$object","pairs","obj","elm$json$Json$Encode$string","author$project$Main$send","elm$core$Platform$Cmd$batch","_Platform_batch","elm$core$Platform$Cmd$none","elm$core$Elm$JsArray$push","elm$core$Elm$JsArray$singleton","_JsArray_singleton","elm$core$Array$insertTailInTree","elm$core$Array$unsafeReplaceTail","newTail","originalTailLen","newTailLen","newArrayLen","overflow","newShift","newTree","elm$core$Array$push","elm$core$Elm$JsArray$appendN","elm$core$Elm$JsArray$slice","elm$core$Array$appendHelpBuilder","notAppended","appended","elm$core$List$drop","elm$core$Array$sliceLeft","skipNodes","leafNodes","nodesToInsert","head","initialBuilder","elm$core$Array$fetchNewTail","treeEnd","elm$core$Array$hoistTree","oldShift","elm$core$Array$sliceTree","endIdx","lastPos","elm$core$Array$sliceRight","elm$core$Array$translateIndex","posIndex","elm$core$Array$slice","correctTo","correctFrom","romstad$elm_chess$Internal$Game$position","romstad$elm_chess$Internal$Board$removePiece","romstad$elm_chess$Internal$Board$movePiece","romstad$elm_chess$Internal$Move$unwrap","move","move_","romstad$elm_chess$Internal$Move$from","romstad$elm_chess$Internal$Move$isCastle","romstad$elm_chess$Internal$Move$to","romstad$elm_chess$Internal$Move$isKingsideCastle","romstad$elm_chess$Internal$Move$isQueensideCastle","romstad$elm_chess$Internal$Move$promotion","romstad$elm_chess$Internal$Piece$unwrap","piece_","romstad$elm_chess$Internal$Piece$color","romstad$elm_chess$Internal$SquareDelta$unwrap","delta","delta_","romstad$elm_chess$Internal$Square$add","romstad$elm_chess$Internal$Square$file","romstad$elm_chess$Internal$Square$rank","romstad$elm_chess$Internal$SquareDelta$SquareDelta","romstad$elm_chess$Internal$SquareDelta$e","romstad$elm_chess$Internal$SquareDelta$multiply","romstad$elm_chess$Internal$SquareDelta$negate","romstad$elm_chess$Internal$SquareDelta$w","romstad$elm_chess$Internal$Board$doMove","us","romstad$elm_chess$Internal$Move$isEp","toFile","fromRank","romstad$elm_chess$Internal$CastleRights$unwrap","rights","rights_","romstad$elm_chess$Internal$CastleRights$disableKingsideCastling","romstad$elm_chess$Internal$CastleRights$disableQueensideCastling","romstad$elm_chess$Internal$CastleRights$disableAllCastling","romstad$elm_chess$Internal$SquareFile$a","romstad$elm_chess$Internal$SquareRank$one","romstad$elm_chess$Internal$Square$a1","romstad$elm_chess$Internal$SquareRank$eight","romstad$elm_chess$Internal$Square$a8","romstad$elm_chess$Internal$SquareFile$e","romstad$elm_chess$Internal$Square$e1","romstad$elm_chess$Internal$Square$e8","romstad$elm_chess$Internal$SquareFile$h","romstad$elm_chess$Internal$Square$h1","romstad$elm_chess$Internal$Square$h8","romstad$elm_chess$Internal$CastleRights$doMove","romstad$elm_chess$Internal$Piece$blackPawn","romstad$elm_chess$Internal$Piece$kind","romstad$elm_chess$Internal$Piece$whitePawn","elm$core$Basics$composeR","elm$core$Bitwise$xor","romstad$elm_chess$Internal$PieceColor$opposite","romstad$elm_chess$Internal$Position$unwrap","pos_","romstad$elm_chess$Internal$Position$pieceOn","romstad$elm_chess$Internal$Square$subtract","square0","square1","romstad$elm_chess$Internal$SquareDelta$n","romstad$elm_chess$Internal$SquareDelta$add","delta0","delta1","romstad$elm_chess$Internal$SquareDelta$nn","romstad$elm_chess$Internal$SquareDelta$s","romstad$elm_chess$Internal$SquareDelta$ss","romstad$elm_chess$Internal$Position$doMove","position","romstad$elm_chess$Internal$Game$addMove","romstad$elm_chess$Game$addMove","romstad$elm_chess$Game$position","elm$core$String$toUpper","_String_toUpper","elm$core$String$cons","elm$core$String$fromChar","romstad$elm_chess$Internal$PieceType$toChar","romstad$elm_chess$Internal$PieceType$toString","elm$core$Char$fromCode","_Char_fromCode","fromCharCode","romstad$elm_chess$Internal$SquareFile$toString","romstad$elm_chess$Internal$SquareRank$toString","romstad$elm_chess$Internal$Square$toString","romstad$elm_chess$Internal$Notation$pawnMoveToSan","promotion","promotion_","elm$core$Basics$composeL","elm$core$List$any","isOkay","elm$core$List$all","romstad$elm_chess$Internal$Notation$differentFileFrom","m1","m2","romstad$elm_chess$Internal$Notation$differentRankFrom","romstad$elm_chess$Internal$Position$kingSquare","romstad$elm_chess$Internal$Board$lineIsClear","lineIsClearInternal","s0","s1","elm$core$Array$repeat","romstad$elm_chess$Internal$Piece$blackBishop","romstad$elm_chess$Internal$Piece$blackKnight","romstad$elm_chess$Internal$Piece$blackQueen","romstad$elm_chess$Internal$Piece$blackRook","romstad$elm_chess$Internal$Piece$whiteBishop","romstad$elm_chess$Internal$Piece$whiteKnight","romstad$elm_chess$Internal$Piece$whiteQueen","romstad$elm_chess$Internal$Piece$whiteRook","romstad$elm_chess$Internal$SquareDelta$ne","romstad$elm_chess$Internal$SquareDelta$nee","romstad$elm_chess$Internal$SquareDelta$nne","romstad$elm_chess$Internal$SquareDelta$nnw","romstad$elm_chess$Internal$SquareDelta$nw","romstad$elm_chess$Internal$SquareDelta$nww","romstad$elm_chess$Internal$SquareDelta$se","romstad$elm_chess$Internal$SquareDelta$see","romstad$elm_chess$Internal$SquareDelta$sse","romstad$elm_chess$Internal$SquareDelta$ssw","romstad$elm_chess$Internal$SquareDelta$sw","romstad$elm_chess$Internal$SquareDelta$sww","romstad$elm_chess$Internal$Piece$attackDirections","romstad$elm_chess$Internal$Piece$isSlider","romstad$elm_chess$Internal$Square$isOutside","romstad$elm_chess$Internal$SquareFile$isOutside","romstad$elm_chess$Internal$Square$squaresInDirection","startSquare","squaresInDirectionInternal","$temp$square","romstad$elm_chess$Internal$Square$deltasInDirection","romstad$elm_chess$Internal$SquareDelta$max","romstad$elm_chess$Internal$BoardDimensions$squareMax","romstad$elm_chess$Internal$Piece$attackDeltas","deltasByDirection","sq","deltas","deltaMax","d0","romstad$elm_chess$Internal$Piece$attackDelta","romstad$elm_chess$Internal$Board$pieceAttacksSquare","romstad$elm_chess$Internal$Board$sideAttacksSquare","side","romstad$elm_chess$Internal$Position$sideAttacksSquare","romstad$elm_chess$Internal$Position$isInCheck","kingSquare_","romstad$elm_chess$Internal$Position$sideToMove","romstad$elm_chess$Internal$Position$pseudoMoveIsLegal","romstad$elm_chess$Internal$Board$isEmpty","romstad$elm_chess$Internal$Position$isEmpty","romstad$elm_chess$Internal$Move$Move","romstad$elm_chess$Internal$Square$compress","romstad$elm_chess$Internal$Move$make","from_","to_","romstad$elm_chess$Internal$Move$makePromotion","romstad$elm_chess$Internal$Square$isRankTwo","romstad$elm_chess$Internal$BoardDimensions$rankMax","romstad$elm_chess$Internal$Position$pawnCapturePseudoMovesTo","them","ourPawn","ds","romstad$elm_chess$Internal$Move$makeEp","romstad$elm_chess$Internal$Position$epSquare","romstad$elm_chess$Internal$Position$pawnEpCapturePseudoMoves","romstad$elm_chess$Internal$Position$pawnPushPseudoMovesTo","from2","romstad$elm_chess$Internal$Position$pawnPseudoMovesTo","romstad$elm_chess$Internal$Board$scan","scanInternal","romstad$elm_chess$Internal$Position$scan","romstad$elm_chess$Internal$Position$piecePseudoMovesTo","pieceType","ourPiece","romstad$elm_chess$Internal$Position$pseudoMovesTo","capturedPiece","romstad$elm_chess$Internal$Position$movesTo","romstad$elm_chess$Internal$Notation$disambiguation","moves","elm$core$Char$toLower","_Char_toLower","romstad$elm_chess$Internal$Piece$toString","romstad$elm_chess$Internal$Notation$pieceMoveToSan","romstad$elm_chess$Internal$Position$isCheck","romstad$elm_chess$Internal$Position$moveGivesCheck","romstad$elm_chess$Internal$Position$slidePseudoMovesFrom","slidePseudoMovesFromInternal","$temp$to","$temp$result","romstad$elm_chess$Internal$Position$bishopPseudoMovesFrom","romstad$elm_chess$Internal$Move$makeCastle","romstad$elm_chess$Internal$CastleRights$canCastleKingside","romstad$elm_chess$Internal$Position$canCastleKingside","romstad$elm_chess$Internal$CastleRights$canCastleQueenside","romstad$elm_chess$Internal$Position$canCastleQueenside","romstad$elm_chess$Internal$Position$kingCastlePseudoMovesFrom","f1","g1","c1","b1","romstad$elm_chess$Internal$Position$kingPseudoMovesFrom","romstad$elm_chess$Internal$Position$knightPseudoMovesFrom","romstad$elm_chess$Internal$Position$colorOn","romstad$elm_chess$Internal$Position$pawnCaptures","toSqs","romstad$elm_chess$Internal$Position$pawnEpCaptures","romstad$elm_chess$Internal$Position$pawnPushes","doublePush","romstad$elm_chess$Internal$Position$pawnPseudoMovesFrom","romstad$elm_chess$Internal$Position$queenPseudoMovesFrom","romstad$elm_chess$Internal$Position$rookPseudoMovesFrom","romstad$elm_chess$Internal$Position$pseudoMovesFrom","romstad$elm_chess$Internal$Position$movesFrom","romstad$elm_chess$Internal$Position$moves","romstad$elm_chess$Internal$Position$isCheckmate","romstad$elm_chess$Internal$Position$moveGivesCheckmate","romstad$elm_chess$Notation$toSan","author$project$Main$doMove","newGame","newState","cmd","romstad$elm_chess$Move$to","romstad$elm_chess$Position$movesFrom","author$project$Main$squarePressed","newMoves","elm$json$Json$Decode$decodeValue","elm$core$String$filter","elm$core$String$left","romstad$elm_chess$Internal$Notation$isImportantCharacter","elm$core$List$maybeCons","mx","elm$core$List$filterMap","elm$core$String$dropRight","elm$core$String$right","romstad$elm_chess$Internal$Notation$pawnMatch","fromFile","romstad$elm_chess$Internal$Notation$findPawnMove","candidates","romstad$elm_chess$Internal$PieceType$fromString","romstad$elm_chess$Internal$Notation$pawnMoveFromSan","romstad$elm_chess$Internal$Notation$match","romstad$elm_chess$Internal$Notation$findPieceMove","disambig","dis","files","ranks","romstad$elm_chess$Internal$Notation$pieceMoveFromSan","romstad$elm_chess$Notation$fromSan","romstad$elm_chess$Internal$Notation$kingsideCastlingFromSan","romstad$elm_chess$Internal$Notation$queensideCastlingFromSan","author$project$Main$update","val","offer","author$project$Main$Rematch","elm$core$String$fromFloat","author$project$Main$px","elm$core$String$toLower","_String_toLower","romstad$elm_chess$Piece$color","romstad$elm_chess$Piece$kind","romstad$elm_chess$PieceColor$toString","romstad$elm_chess$PieceType$toString","author$project$Main$pieceImgUrl","elm$html$Html$div","elm$html$Html$text","elm$html$Html$Attributes$style","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$html$Html$Events$onClick","author$project$Main$square","isSelected","isPossibleMove","sqSize","col","row","romstad$elm_chess$Square$file","romstad$elm_chess$Square$rank","romstad$elm_chess$SquareFile$toIndex","romstad$elm_chess$SquareRank$toIndex","author$project$Main$squareToCoordinates","isRotated","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Set$Set_elm_builtin","elm$core$Set$empty","elm$core$Dict$Black","elm$core$Dict$RBNode_elm_builtin","elm$core$Basics$compare","elm$core$Dict$Red","elm$core$Dict$balance","rK","rV","rLeft","rRight","_n3","lK","lV","lLeft","lRight","_n5","_n6","llK","llV","llLeft","llRight","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","elm$core$Set$insert","elm$core$Dict$get","targetKey","elm$core$Dict$member","elm$core$Set$member","elm$html$Html$b","elm$html$Html$button","romstad$elm_chess$PieceColor$black","romstad$elm_chess$Position$isCheckmate","romstad$elm_chess$Position$pieceOn","romstad$elm_chess$Position$sideToMove","romstad$elm_chess$Square$all","romstad$elm_chess$Square$toInt","author$project$Main$board","possibleMoves","possibleSquares","txt","author$project$Main$SetOtherOffer","elm$html$Html$input","elm$json$Json$Encode$bool","elm$html$Html$Attributes$readonly","elm$html$Html$Attributes$boolProperty","elm$html$Html$Attributes$value","elm$html$Html$Attributes$stringProperty","elm$html$Html$Events$alwaysStop","elm$html$Html$Events$stopPropagationOn","elm$html$Html$Events$targetValue","fields","author$project$Main$connectUi","offerOrAnswer","elm$core$Task$Perform","elm$core$Task$succeed","elm$core$Task$init","elm$core$Task$andThen","elm$core$Task$map","taskA","elm$core$Task$map2","taskB","elm$core$Platform$sendToApp","elm$core$Task$spawnCmd","elm$core$Task$onEffects","commands","tasks","elm$core$Task$onSelfMsg","elm$core$Task$cmdMap","elm$core$Task$command","exports","toMessage","elm$core$String$indexes","elm$core$String$isEmpty","elm$core$String$contains","elm$core$String$toInt","_String_toInt","total","code0","elm$url$Url$Url","protocol","host","port_","path","query","fragment","elm$url$Url$chompBeforePath","params","elm$url$Url$chompBeforeQuery","elm$url$Url$chompBeforeFragment","author$project$Main$main","flags","_Platform_mergeExportsDebug"],"mappings":"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","file":"elm.0991d878.map","sourceRoot":"..","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\nconsole.warn('Compiled in DEV mode. Follow the advice at https://elm-lang.org/0.19.0/optimize for better performance and smaller assets.');\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash_UNUSED(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.start.line === region.end.line)\n\t{\n\t\treturn 'on line ' + region.start.line;\n\t}\n\treturn 'on lines ' + region.start.line + ' through ' + region.end.line;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**_UNUSED/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**_UNUSED/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0_UNUSED = 0;\nvar _Utils_Tuple0 = { $: '#0' };\n\nfunction _Utils_Tuple2_UNUSED(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr_UNUSED(c) { return c; }\nfunction _Utils_chr(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil_UNUSED = { $: 0 };\nvar _List_Nil = { $: '[]' };\n\nfunction _List_Cons_UNUSED(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap(value) { return value.a; }\n\nfunction _Json_wrap_UNUSED(value) { return value; }\nfunction _Json_unwrap_UNUSED(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**_UNUSED/\n\tvar node = args['node'];\n\t//*/\n\t/**/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tmessage: func(record.message),\n\t\tstopPropagation: record.stopPropagation,\n\t\tpreventDefault: record.preventDefault\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.message;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.stopPropagation;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.preventDefault) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.view;\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.setup && impl.setup(sendToApp)\n\t\t\tvar view = impl.view;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.body);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.title) && (_VirtualDom_doc.title = title = doc.title);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.onUrlChange;\n\tvar onUrlRequest = impl.onUrlRequest;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tsetup: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.protocol === next.protocol\n\t\t\t\t\t\t\t&& curr.host === next.host\n\t\t\t\t\t\t\t&& curr.port_.a === next.port_.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tinit: function(flags)\n\t\t{\n\t\t\treturn A3(impl.init, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tview: impl.view,\n\t\tupdate: impl.update,\n\t\tsubscriptions: impl.subscriptions\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { hidden: 'hidden', change: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { hidden: 'mozHidden', change: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { hidden: 'msHidden', change: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { hidden: 'webkitHidden', change: 'webkitvisibilitychange' }\n\t\t: { hidden: 'hidden', change: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\tscene: _Browser_getScene(),\n\t\tviewport: {\n\t\t\tx: _Browser_window.pageXOffset,\n\t\t\ty: _Browser_window.pageYOffset,\n\t\t\twidth: _Browser_doc.documentElement.clientWidth,\n\t\t\theight: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\twidth: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\theight: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\tscene: {\n\t\t\t\twidth: node.scrollWidth,\n\t\t\t\theight: node.scrollHeight\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t\tx: node.scrollLeft,\n\t\t\t\ty: node.scrollTop,\n\t\t\t\twidth: node.clientWidth,\n\t\t\t\theight: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\tscene: _Browser_getScene(),\n\t\t\tviewport: {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\twidth: _Browser_doc.documentElement.clientWidth,\n\t\t\t\theight: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\telement: {\n\t\t\t\tx: x + rect.left,\n\t\t\t\ty: y + rect.top,\n\t\t\t\twidth: rect.width,\n\t\t\t\theight: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$Main$JsPort = function (a) {\n\treturn {$: 'JsPort', a: a};\n};\nvar author$project$Main$Init = {$: 'Init'};\nvar elm$core$Basics$False = {$: 'False'};\nvar elm$core$Maybe$Nothing = {$: 'Nothing'};\nvar elm$core$Basics$EQ = {$: 'EQ'};\nvar elm$core$Basics$LT = {$: 'LT'};\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (node.$ === 'SubTree') {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$GT = {$: 'GT'};\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0.a;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar romstad$elm_chess$Game$Game = function (a) {\n\treturn {$: 'Game', a: a};\n};\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'Array_elm_builtin', a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 'Leaf', a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 'SubTree', a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.nodeListSize) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.tail),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.tail);\n\t\t} else {\n\t\t\tvar treeLen = builder.nodeListSize * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.nodeList) : builder.nodeList;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.tail) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.tail);\n\t\t}\n\t});\nvar elm$core$Basics$True = {$: 'True'};\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _n0.a;\n\t\t\tvar remainingItems = _n0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\telm$core$Elm$JsArray$length(jsArray),\n\t\t\t\telm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{nodeList: nodeList, nodeListSize: nodeListSize, tail: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\telm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn elm$core$Array$empty;\n\t} else {\n\t\treturn A3(elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar romstad$elm_chess$Internal$Game$UnknownResult = {$: 'UnknownResult'};\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (maybe.$ === 'Just') {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$core$Array$bitMask = 4294967295 >>> (32 - elm$core$Array$shiftStep);\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;\nvar elm$core$Array$setHelp = F4(\n\tfunction (shift, index, value, tree) {\n\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\tif (_n0.$ === 'SubTree') {\n\t\t\tvar subTree = _n0.a;\n\t\t\tvar newSub = A4(elm$core$Array$setHelp, shift - elm$core$Array$shiftStep, index, value, subTree);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\ttree);\n\t\t} else {\n\t\t\tvar values = _n0.a;\n\t\t\tvar newLeaf = A3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, values);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$Leaf(newLeaf),\n\t\t\t\ttree);\n\t\t}\n\t});\nvar elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Array$set = F3(\n\tfunction (index, value, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\ttree,\n\t\t\tA3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, tail)) : A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA4(elm$core$Array$setHelp, startShift, index, value, tree),\n\t\t\ttail));\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$List$repeatHelp = F3(\n\tfunction (result, n, value) {\n\t\trepeatHelp:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tvar $temp$result = A2(elm$core$List$cons, value, result),\n\t\t\t\t\t$temp$n = n - 1,\n\t\t\t\t\t$temp$value = value;\n\t\t\t\tresult = $temp$result;\n\t\t\t\tn = $temp$n;\n\t\t\t\tvalue = $temp$value;\n\t\t\t\tcontinue repeatHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$repeat = F2(\n\tfunction (n, value) {\n\t\treturn A3(elm$core$List$repeatHelp, _List_Nil, n, value);\n\t});\nvar romstad$elm_chess$Internal$BoardDimensions$fileCount = 8;\nvar romstad$elm_chess$Internal$BoardDimensions$extendedFileCount = (2 * romstad$elm_chess$Internal$BoardDimensions$fileCount) - 1;\nvar romstad$elm_chess$Internal$BoardDimensions$rankCount = 8;\nvar romstad$elm_chess$Internal$BoardDimensions$extendedBoardSize = (((romstad$elm_chess$Internal$BoardDimensions$rankCount + 3) * romstad$elm_chess$Internal$BoardDimensions$extendedFileCount) + romstad$elm_chess$Internal$BoardDimensions$fileCount) + 2;\nvar elm$core$Bitwise$or = _Bitwise_or;\nvar romstad$elm_chess$Internal$Piece$Piece = function (a) {\n\treturn {$: 'Piece', a: a};\n};\nvar romstad$elm_chess$Internal$PieceColor$unwrap = function (color) {\n\tvar color_ = color.a;\n\treturn color_;\n};\nvar romstad$elm_chess$Internal$PieceType$unwrap = function (kind) {\n\tvar kind_ = kind.a;\n\treturn kind_;\n};\nvar romstad$elm_chess$Internal$Piece$make = F2(\n\tfunction (color_, kind_) {\n\t\treturn romstad$elm_chess$Internal$Piece$Piece(\n\t\t\t(romstad$elm_chess$Internal$PieceColor$unwrap(color_) << 3) | romstad$elm_chess$Internal$PieceType$unwrap(kind_));\n\t});\nvar romstad$elm_chess$Internal$PieceColor$PieceColor = function (a) {\n\treturn {$: 'PieceColor', a: a};\n};\nvar romstad$elm_chess$Internal$PieceColor$empty = romstad$elm_chess$Internal$PieceColor$PieceColor(2);\nvar romstad$elm_chess$Internal$PieceType$PieceType = function (a) {\n\treturn {$: 'PieceType', a: a};\n};\nvar romstad$elm_chess$Internal$PieceType$none = romstad$elm_chess$Internal$PieceType$PieceType(0);\nvar romstad$elm_chess$Internal$Piece$empty = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$empty, romstad$elm_chess$Internal$PieceType$none);\nvar romstad$elm_chess$Internal$PieceColor$outside = romstad$elm_chess$Internal$PieceColor$PieceColor(3);\nvar romstad$elm_chess$Internal$Piece$outside = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$outside, romstad$elm_chess$Internal$PieceType$none);\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn elm$core$List$concat(\n\t\t\tA2(elm$core$List$map, f, list));\n\t});\nvar romstad$elm_chess$Internal$Square$Square = function (a) {\n\treturn {$: 'Square', a: a};\n};\nvar romstad$elm_chess$Internal$SquareFile$unwrap = function (file) {\n\tvar file_ = file.a;\n\treturn file_;\n};\nvar romstad$elm_chess$Internal$SquareRank$unwrap = function (rank) {\n\tvar rank_ = rank.a;\n\treturn rank_;\n};\nvar romstad$elm_chess$Internal$Square$make = F2(\n\tfunction (file_, rank_) {\n\t\treturn romstad$elm_chess$Internal$Square$Square(\n\t\t\tromstad$elm_chess$Internal$SquareFile$unwrap(file_) + (romstad$elm_chess$Internal$SquareRank$unwrap(rank_) * romstad$elm_chess$Internal$BoardDimensions$extendedFileCount));\n\t});\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar romstad$elm_chess$Internal$BoardDimensions$fileMin = 1;\nvar romstad$elm_chess$Internal$BoardDimensions$fileMax = (romstad$elm_chess$Internal$BoardDimensions$fileMin + romstad$elm_chess$Internal$BoardDimensions$fileCount) - 1;\nvar romstad$elm_chess$Internal$SquareFile$SquareFile = function (a) {\n\treturn {$: 'SquareFile', a: a};\n};\nvar romstad$elm_chess$Internal$SquareFile$all = A2(\n\telm$core$List$map,\n\tromstad$elm_chess$Internal$SquareFile$SquareFile,\n\tA2(elm$core$List$range, romstad$elm_chess$Internal$BoardDimensions$fileMin, romstad$elm_chess$Internal$BoardDimensions$fileMax));\nvar romstad$elm_chess$Internal$BoardDimensions$rankMin = 2;\nvar romstad$elm_chess$Internal$BoardDimensions$rankMax = (romstad$elm_chess$Internal$BoardDimensions$rankMin + romstad$elm_chess$Internal$BoardDimensions$rankCount) - 1;\nvar romstad$elm_chess$Internal$SquareRank$SquareRank = function (a) {\n\treturn {$: 'SquareRank', a: a};\n};\nvar romstad$elm_chess$Internal$SquareRank$all = A2(\n\telm$core$List$map,\n\tromstad$elm_chess$Internal$SquareRank$SquareRank,\n\tA2(elm$core$List$range, romstad$elm_chess$Internal$BoardDimensions$rankMin, romstad$elm_chess$Internal$BoardDimensions$rankMax));\nvar romstad$elm_chess$Internal$Square$all = A2(\n\telm$core$List$concatMap,\n\tfunction (f) {\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tromstad$elm_chess$Internal$Square$make(f),\n\t\t\tromstad$elm_chess$Internal$SquareRank$all);\n\t},\n\tromstad$elm_chess$Internal$SquareFile$all);\nvar romstad$elm_chess$Internal$Square$unwrap = function (square) {\n\tvar square_ = square.a;\n\treturn square_;\n};\nvar romstad$elm_chess$Internal$Board$empty = A3(\n\telm$core$List$foldl,\n\tF2(\n\t\tfunction (s, b) {\n\t\t\treturn A3(\n\t\t\t\telm$core$Array$set,\n\t\t\t\tromstad$elm_chess$Internal$Square$unwrap(s),\n\t\t\t\tromstad$elm_chess$Internal$Piece$empty,\n\t\t\t\tb);\n\t\t}),\n\telm$core$Array$fromList(\n\t\tA2(elm$core$List$repeat, romstad$elm_chess$Internal$BoardDimensions$extendedBoardSize, romstad$elm_chess$Internal$Piece$outside)),\n\tromstad$elm_chess$Internal$Square$all);\nvar romstad$elm_chess$Internal$CastleRights$CastleRights = function (a) {\n\treturn {$: 'CastleRights', a: a};\n};\nvar romstad$elm_chess$Internal$CastleRights$empty = romstad$elm_chess$Internal$CastleRights$CastleRights(0);\nvar romstad$elm_chess$Internal$PieceColor$white = romstad$elm_chess$Internal$PieceColor$PieceColor(0);\nvar romstad$elm_chess$Internal$Position$Position = function (a) {\n\treturn {$: 'Position', a: a};\n};\nvar romstad$elm_chess$Internal$Position$empty = romstad$elm_chess$Internal$Position$Position(\n\t{blackKingSquare: elm$core$Maybe$Nothing, board: romstad$elm_chess$Internal$Board$empty, castleRights: romstad$elm_chess$Internal$CastleRights$empty, epSquare: elm$core$Maybe$Nothing, gamePly: 0, lastMove: elm$core$Maybe$Nothing, parent: elm$core$Maybe$Nothing, rule50Counter: 0, sideToMove: romstad$elm_chess$Internal$PieceColor$white, whiteKingSquare: elm$core$Maybe$Nothing});\nvar elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (_n0.$ === 'SubTree') {\n\t\t\t\tvar subTree = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 'Just', a: a};\n};\nvar elm$core$Array$get = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? elm$core$Maybe$Just(\n\t\t\tA2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, tail)) : elm$core$Maybe$Just(\n\t\t\tA3(elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$core$String$foldr = _String_foldr;\nvar elm$core$String$toList = function (string) {\n\treturn A3(elm$core$String$foldr, elm$core$List$cons, _List_Nil, string);\n};\nvar romstad$elm_chess$Internal$Board$ReadFenState = F3(\n\tfunction (board, fileIndex, rankIndex) {\n\t\treturn {board: board, fileIndex: fileIndex, rankIndex: rankIndex};\n\t});\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar romstad$elm_chess$Internal$Board$putPiece = F2(\n\tfunction (piece, square) {\n\t\treturn A2(\n\t\t\telm$core$Array$set,\n\t\t\tromstad$elm_chess$Internal$Square$unwrap(square),\n\t\t\tpiece);\n\t});\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$modBy = _Basics_modBy;\nvar romstad$elm_chess$Internal$Square$expand = function (i) {\n\tvar r = (i / romstad$elm_chess$Internal$BoardDimensions$fileCount) | 0;\n\tvar f = A2(elm$core$Basics$modBy, romstad$elm_chess$Internal$BoardDimensions$fileCount, i);\n\treturn romstad$elm_chess$Internal$Square$Square((f + romstad$elm_chess$Internal$BoardDimensions$fileMin) + ((r + romstad$elm_chess$Internal$BoardDimensions$rankMin) * romstad$elm_chess$Internal$BoardDimensions$extendedFileCount));\n};\nvar romstad$elm_chess$Internal$Board$readFenPiece = F2(\n\tfunction (piece, state) {\n\t\treturn A3(\n\t\t\tromstad$elm_chess$Internal$Board$putPiece,\n\t\t\tpiece,\n\t\t\tromstad$elm_chess$Internal$Square$expand(state.fileIndex + (8 * state.rankIndex)),\n\t\t\tstate.board);\n\t});\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (maybe.$ === 'Just') {\n\t\t\tvar value = maybe.a;\n\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$PieceColor$black = romstad$elm_chess$Internal$PieceColor$PieceColor(1);\nvar elm$core$Char$toUpper = _Char_toUpper;\nvar romstad$elm_chess$Internal$PieceType$bishop = romstad$elm_chess$Internal$PieceType$PieceType(3);\nvar romstad$elm_chess$Internal$PieceType$king = romstad$elm_chess$Internal$PieceType$PieceType(6);\nvar romstad$elm_chess$Internal$PieceType$knight = romstad$elm_chess$Internal$PieceType$PieceType(2);\nvar romstad$elm_chess$Internal$PieceType$pawn = romstad$elm_chess$Internal$PieceType$PieceType(1);\nvar romstad$elm_chess$Internal$PieceType$queen = romstad$elm_chess$Internal$PieceType$PieceType(5);\nvar romstad$elm_chess$Internal$PieceType$rook = romstad$elm_chess$Internal$PieceType$PieceType(4);\nvar romstad$elm_chess$Internal$PieceType$fromChar = function (_char) {\n\tvar ch = elm$core$Char$toUpper(_char);\n\treturn _Utils_eq(\n\t\tch,\n\t\t_Utils_chr('P')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$pawn) : (_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('N')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$knight) : (_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('B')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$bishop) : (_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('R')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$rook) : (_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('Q')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$queen) : (_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('K')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$king) : elm$core$Maybe$Nothing)))));\n};\nvar romstad$elm_chess$Internal$Piece$fromChar = function (_char) {\n\treturn A2(\n\t\telm$core$Maybe$map,\n\t\tromstad$elm_chess$Internal$Piece$make(\n\t\t\telm$core$Char$isUpper(_char) ? romstad$elm_chess$Internal$PieceColor$white : romstad$elm_chess$Internal$PieceColor$black),\n\t\tromstad$elm_chess$Internal$PieceType$fromChar(_char));\n};\nvar romstad$elm_chess$Internal$Board$processFenChar = F2(\n\tfunction (_char, state) {\n\t\tvar _n0 = romstad$elm_chess$Internal$Piece$fromChar(_char);\n\t\tif (_n0.$ === 'Just') {\n\t\t\tvar piece = _n0.a;\n\t\t\treturn _Utils_update(\n\t\t\t\tstate,\n\t\t\t\t{\n\t\t\t\t\tboard: A2(romstad$elm_chess$Internal$Board$readFenPiece, piece, state),\n\t\t\t\t\tfileIndex: state.fileIndex + 1\n\t\t\t\t});\n\t\t} else {\n\t\t\treturn elm$core$Char$isDigit(_char) ? _Utils_update(\n\t\t\t\tstate,\n\t\t\t\t{\n\t\t\t\t\tfileIndex: (state.fileIndex + elm$core$Char$toCode(_char)) - elm$core$Char$toCode(\n\t\t\t\t\t\t_Utils_chr('0'))\n\t\t\t\t}) : (_Utils_eq(\n\t\t\t\t_char,\n\t\t\t\t_Utils_chr('/')) ? _Utils_update(\n\t\t\t\tstate,\n\t\t\t\t{fileIndex: 0, rankIndex: state.rankIndex - 1}) : state);\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Board$fromFen = function (fen) {\n\treturn function ($) {\n\t\treturn $.board;\n\t}(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\tromstad$elm_chess$Internal$Board$processFenChar,\n\t\t\tA3(romstad$elm_chess$Internal$Board$ReadFenState, romstad$elm_chess$Internal$Board$empty, 0, romstad$elm_chess$Internal$BoardDimensions$rankCount - 1),\n\t\t\telm$core$String$toList(fen)));\n};\nvar romstad$elm_chess$Internal$Board$pieceOn = F2(\n\tfunction (square, board) {\n\t\treturn A2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\tromstad$elm_chess$Internal$Piece$outside,\n\t\t\tA2(\n\t\t\t\telm$core$Array$get,\n\t\t\t\tromstad$elm_chess$Internal$Square$unwrap(square),\n\t\t\t\tboard));\n\t});\nvar romstad$elm_chess$Internal$CastleRights$fromChar = function (_char) {\n\treturn _Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('K')) ? 1 : (_Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('Q')) ? 2 : (_Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('k')) ? 4 : (_Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('q')) ? 8 : 0)));\n};\nvar romstad$elm_chess$Internal$CastleRights$fromString = function (string) {\n\treturn romstad$elm_chess$Internal$CastleRights$CastleRights(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\telm$core$Bitwise$or,\n\t\t\t0,\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tromstad$elm_chess$Internal$CastleRights$fromChar,\n\t\t\t\telm$core$String$toList(string))));\n};\nvar romstad$elm_chess$Internal$Piece$blackKing = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$king);\nvar romstad$elm_chess$Internal$Piece$whiteKing = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$king);\nvar elm$core$Maybe$andThen = F2(\n\tfunction (callback, maybeValue) {\n\t\tif (maybeValue.$ === 'Just') {\n\t\t\tvar value = maybeValue.a;\n\t\t\treturn callback(value);\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$PieceColor$fromChar = function (_char) {\n\treturn _Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('w')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceColor$white) : (_Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('b')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceColor$black) : elm$core$Maybe$Nothing);\n};\nvar romstad$elm_chess$Internal$PieceColor$fromString = function (string) {\n\treturn A2(\n\t\telm$core$Maybe$andThen,\n\t\tromstad$elm_chess$Internal$PieceColor$fromChar,\n\t\telm$core$List$head(\n\t\t\telm$core$String$toList(string)));\n};\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar romstad$elm_chess$Internal$SquareFile$fromChar = function (_char) {\n\tvar f_ = elm$core$Char$toCode(_char) - elm$core$Char$toCode(\n\t\t_Utils_chr('a'));\n\treturn ((f_ >= 0) && (_Utils_cmp(f_, romstad$elm_chess$Internal$BoardDimensions$fileCount) < 0)) ? elm$core$Maybe$Just(\n\t\tromstad$elm_chess$Internal$SquareFile$SquareFile(f_ + romstad$elm_chess$Internal$BoardDimensions$fileMin)) : elm$core$Maybe$Nothing;\n};\nvar romstad$elm_chess$Internal$SquareFile$fromString = function (string) {\n\treturn A2(\n\t\telm$core$Maybe$andThen,\n\t\tromstad$elm_chess$Internal$SquareFile$fromChar,\n\t\telm$core$List$head(\n\t\t\telm$core$String$toList(string)));\n};\nvar romstad$elm_chess$Internal$SquareRank$fromChar = function (_char) {\n\tvar r = elm$core$Char$toCode(_char) - elm$core$Char$toCode(\n\t\t_Utils_chr('1'));\n\treturn ((r >= 0) && (_Utils_cmp(r, romstad$elm_chess$Internal$BoardDimensions$rankCount) < 0)) ? elm$core$Maybe$Just(\n\t\tromstad$elm_chess$Internal$SquareRank$SquareRank(r + romstad$elm_chess$Internal$BoardDimensions$rankMin)) : elm$core$Maybe$Nothing;\n};\nvar romstad$elm_chess$Internal$SquareRank$fromString = function (string) {\n\treturn A2(\n\t\telm$core$Maybe$andThen,\n\t\tromstad$elm_chess$Internal$SquareRank$fromChar,\n\t\telm$core$List$head(\n\t\t\telm$core$String$toList(string)));\n};\nvar romstad$elm_chess$Internal$Square$fromString = function (string) {\n\tvar r = romstad$elm_chess$Internal$SquareRank$fromString(\n\t\tA2(elm$core$String$dropLeft, 1, string));\n\tvar f = romstad$elm_chess$Internal$SquareFile$fromString(string);\n\tif (f.$ === 'Just') {\n\t\tvar f_ = f.a;\n\t\treturn A2(\n\t\t\telm$core$Maybe$map,\n\t\t\tromstad$elm_chess$Internal$Square$make(f_),\n\t\t\tr);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar romstad$elm_chess$Internal$Position$fromFen = function (fen) {\n\tvar components = elm$core$Array$fromList(\n\t\tA2(elm$core$String$split, ' ', fen));\n\tvar epSquare_ = romstad$elm_chess$Internal$Square$fromString(\n\t\tA2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\t'-',\n\t\t\tA2(elm$core$Array$get, 3, components)));\n\tvar sideToMove_ = romstad$elm_chess$Internal$PieceColor$fromString(\n\t\tA2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\t'w',\n\t\t\tA2(elm$core$Array$get, 1, components)));\n\tvar castleRights = romstad$elm_chess$Internal$CastleRights$fromString(\n\t\tA2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\t'-',\n\t\t\tA2(elm$core$Array$get, 2, components)));\n\tvar board = romstad$elm_chess$Internal$Board$fromFen(\n\t\tA2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\t'',\n\t\t\tA2(elm$core$Array$get, 0, components)));\n\tvar whiteKingSquare = elm$core$List$head(\n\t\tA2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (s) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, s, board),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$whiteKing);\n\t\t\t},\n\t\t\tromstad$elm_chess$Internal$Square$all));\n\tvar blackKingSquare = elm$core$List$head(\n\t\tA2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (s) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, s, board),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$blackKing);\n\t\t\t},\n\t\t\tromstad$elm_chess$Internal$Square$all));\n\treturn elm$core$Maybe$Just(\n\t\tromstad$elm_chess$Internal$Position$Position(\n\t\t\t{\n\t\t\t\tblackKingSquare: blackKingSquare,\n\t\t\t\tboard: board,\n\t\t\t\tcastleRights: castleRights,\n\t\t\t\tepSquare: epSquare_,\n\t\t\t\tgamePly: 0,\n\t\t\t\tlastMove: elm$core$Maybe$Nothing,\n\t\t\t\tparent: elm$core$Maybe$Nothing,\n\t\t\t\trule50Counter: 0,\n\t\t\t\tsideToMove: A2(elm$core$Maybe$withDefault, romstad$elm_chess$Internal$PieceColor$white, sideToMove_),\n\t\t\t\twhiteKingSquare: whiteKingSquare\n\t\t\t}));\n};\nvar romstad$elm_chess$Internal$Position$initial = A2(\n\telm$core$Maybe$withDefault,\n\tromstad$elm_chess$Internal$Position$empty,\n\tromstad$elm_chess$Internal$Position$fromFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'));\nvar romstad$elm_chess$Internal$Game$empty = {\n\tcurrentMoveIndex: 0,\n\tcurrentPosition: romstad$elm_chess$Internal$Position$initial,\n\tpositions: elm$core$Array$fromList(\n\t\t_List_fromArray(\n\t\t\t[romstad$elm_chess$Internal$Position$initial])),\n\tresult: romstad$elm_chess$Internal$Game$UnknownResult,\n\ttags: _List_Nil\n};\nvar romstad$elm_chess$Game$empty = romstad$elm_chess$Game$Game(romstad$elm_chess$Internal$Game$empty);\nvar author$project$Main$initModel = {candidateMoves: _List_Nil, error: elm$core$Maybe$Nothing, game: romstad$elm_chess$Game$empty, gameState: author$project$Main$Init, isBlack: false, myAnswer: elm$core$Maybe$Nothing, myOffer: elm$core$Maybe$Nothing, otherOffer: '', selectedSquare: elm$core$Maybe$Nothing};\nvar author$project$Main$output = _Platform_outgoingPort('output', elm$core$Basics$identity);\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{nodeList: nodeList, nodeListSize: (len / elm$core$Array$branchFactor) | 0, tail: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 'Err', a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 'Ok', a: a};\n};\nvar elm$core$Result$isOk = function (result) {\n\tif (result.$ === 'Ok') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Failure', a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Field', a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Index', a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 'OneOf', a: a};\n};\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 'Field':\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 'Nothing') {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 'Index':\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 'OneOf':\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$json$Json$Encode$int = _Json_wrap;\nvar author$project$Main$init = function (flags) {\n\treturn _Utils_Tuple2(\n\t\tauthor$project$Main$initModel,\n\t\tauthor$project$Main$output(\n\t\t\telm$json$Json$Encode$int(57)));\n};\nvar elm$json$Json$Decode$value = _Json_decodeValue;\nvar author$project$Main$input = _Platform_incomingPort('input', elm$json$Json$Decode$value);\nvar author$project$Main$MyTurn = {$: 'MyTurn'};\nvar author$project$Main$OtherTurn = {$: 'OtherTurn'};\nvar author$project$Main$GotAnswer = function (a) {\n\treturn {$: 'GotAnswer', a: a};\n};\nvar author$project$Main$GotOffer = function (a) {\n\treturn {$: 'GotOffer', a: a};\n};\nvar author$project$Main$GotMove = function (a) {\n\treturn {$: 'GotMove', a: a};\n};\nvar author$project$Main$GotRematch = {$: 'GotRematch'};\nvar author$project$Main$Ready = {$: 'Ready'};\nvar author$project$Main$Ready2 = {$: 'Ready2'};\nvar elm$json$Json$Decode$andThen = _Json_andThen;\nvar elm$json$Json$Decode$fail = _Json_fail;\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar author$project$Main$msgDecoder = A2(\n\telm$json$Json$Decode$andThen,\n\tfunction (t) {\n\t\tswitch (t) {\n\t\t\tcase 'Ready':\n\t\t\t\treturn elm$json$Json$Decode$succeed(author$project$Main$Ready);\n\t\t\tcase 'Ready2':\n\t\t\t\treturn elm$json$Json$Decode$succeed(author$project$Main$Ready2);\n\t\t\tcase 'GotMove':\n\t\t\t\treturn A2(\n\t\t\t\t\telm$json$Json$Decode$map,\n\t\t\t\t\tauthor$project$Main$GotMove,\n\t\t\t\t\tA2(elm$json$Json$Decode$field, 'move', elm$json$Json$Decode$string));\n\t\t\tcase 'Rematch':\n\t\t\t\treturn elm$json$Json$Decode$succeed(author$project$Main$GotRematch);\n\t\t\tdefault:\n\t\t\t\treturn elm$json$Json$Decode$fail('Unknown object');\n\t\t}\n\t},\n\tA2(elm$json$Json$Decode$field, 'type', elm$json$Json$Decode$string));\nvar author$project$Main$portDecoder = A2(\n\telm$json$Json$Decode$andThen,\n\tfunction (t) {\n\t\tswitch (t) {\n\t\t\tcase 'GotOffer':\n\t\t\t\treturn A2(\n\t\t\t\t\telm$json$Json$Decode$map,\n\t\t\t\t\tauthor$project$Main$GotOffer,\n\t\t\t\t\tA2(elm$json$Json$Decode$field, 'offer', elm$json$Json$Decode$string));\n\t\t\tcase 'GotAnswer':\n\t\t\t\treturn A2(\n\t\t\t\t\telm$json$Json$Decode$map,\n\t\t\t\t\tauthor$project$Main$GotAnswer,\n\t\t\t\t\tA2(elm$json$Json$Decode$field, 'answer', elm$json$Json$Decode$string));\n\t\t\tcase 'GotMsg':\n\t\t\t\treturn A2(elm$json$Json$Decode$field, 'data', author$project$Main$msgDecoder);\n\t\t\tdefault:\n\t\t\t\treturn elm$json$Json$Decode$fail('Unknown object');\n\t\t}\n\t},\n\tA2(elm$json$Json$Decode$field, 'type', elm$json$Json$Decode$string));\nvar elm$core$Basics$not = _Basics_not;\nvar author$project$Main$rematch = function (model) {\n\treturn _Utils_update(\n\t\tmodel,\n\t\t{\n\t\t\tcandidateMoves: _List_Nil,\n\t\t\tgame: romstad$elm_chess$Game$empty,\n\t\t\tgameState: model.isBlack ? author$project$Main$MyTurn : author$project$Main$OtherTurn,\n\t\t\tisBlack: !model.isBlack,\n\t\t\tselectedSquare: elm$core$Maybe$Nothing\n\t\t});\n};\nvar elm$json$Json$Encode$object = function (pairs) {\n\treturn _Json_wrap(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n0, obj) {\n\t\t\t\t\tvar k = _n0.a;\n\t\t\t\t\tvar v = _n0.b;\n\t\t\t\t\treturn A3(_Json_addField, k, v, obj);\n\t\t\t\t}),\n\t\t\t_Json_emptyObject(_Utils_Tuple0),\n\t\t\tpairs));\n};\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar author$project$Main$send = function (msg) {\n\treturn author$project$Main$output(\n\t\telm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'type',\n\t\t\t\t\telm$json$Json$Encode$string('Send')),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'data',\n\t\t\t\t\telm$json$Json$Encode$object(msg))\n\t\t\t\t])));\n};\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar elm$core$Elm$JsArray$push = _JsArray_push;\nvar elm$core$Elm$JsArray$singleton = _JsArray_singleton;\nvar elm$core$Array$insertTailInTree = F4(\n\tfunction (shift, index, tail, tree) {\n\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\tif (_Utils_cmp(\n\t\t\tpos,\n\t\t\telm$core$Elm$JsArray$length(tree)) > -1) {\n\t\t\tif (shift === 5) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Elm$JsArray$push,\n\t\t\t\t\telm$core$Array$Leaf(tail),\n\t\t\t\t\ttree);\n\t\t\t} else {\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, shift - elm$core$Array$shiftStep, index, tail, elm$core$Elm$JsArray$empty));\n\t\t\t\treturn A2(elm$core$Elm$JsArray$push, newSub, tree);\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (value.$ === 'SubTree') {\n\t\t\t\tvar subTree = value.a;\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, shift - elm$core$Array$shiftStep, index, tail, subTree));\n\t\t\t\treturn A3(elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);\n\t\t\t} else {\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(\n\t\t\t\t\t\telm$core$Array$insertTailInTree,\n\t\t\t\t\t\tshift - elm$core$Array$shiftStep,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\ttail,\n\t\t\t\t\t\telm$core$Elm$JsArray$singleton(value)));\n\t\t\t\treturn A3(elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$unsafeReplaceTail = F2(\n\tfunction (newTail, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar originalTailLen = elm$core$Elm$JsArray$length(tail);\n\t\tvar newTailLen = elm$core$Elm$JsArray$length(newTail);\n\t\tvar newArrayLen = len + (newTailLen - originalTailLen);\n\t\tif (_Utils_eq(newTailLen, elm$core$Array$branchFactor)) {\n\t\t\tvar overflow = _Utils_cmp(newArrayLen >>> elm$core$Array$shiftStep, 1 << startShift) > 0;\n\t\t\tif (overflow) {\n\t\t\t\tvar newShift = startShift + elm$core$Array$shiftStep;\n\t\t\t\tvar newTree = A4(\n\t\t\t\t\telm$core$Array$insertTailInTree,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tlen,\n\t\t\t\t\tnewTail,\n\t\t\t\t\telm$core$Elm$JsArray$singleton(\n\t\t\t\t\t\telm$core$Array$SubTree(tree)));\n\t\t\t\treturn A4(elm$core$Array$Array_elm_builtin, newArrayLen, newShift, newTree, elm$core$Elm$JsArray$empty);\n\t\t\t} else {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tnewArrayLen,\n\t\t\t\t\tstartShift,\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, startShift, len, newTail, tree),\n\t\t\t\t\telm$core$Elm$JsArray$empty);\n\t\t\t}\n\t\t} else {\n\t\t\treturn A4(elm$core$Array$Array_elm_builtin, newArrayLen, startShift, tree, newTail);\n\t\t}\n\t});\nvar elm$core$Array$push = F2(\n\tfunction (a, array) {\n\t\tvar tail = array.d;\n\t\treturn A2(\n\t\t\telm$core$Array$unsafeReplaceTail,\n\t\t\tA2(elm$core$Elm$JsArray$push, a, tail),\n\t\t\tarray);\n\t});\nvar elm$core$Elm$JsArray$appendN = _JsArray_appendN;\nvar elm$core$Elm$JsArray$slice = _JsArray_slice;\nvar elm$core$Array$appendHelpBuilder = F2(\n\tfunction (tail, builder) {\n\t\tvar tailLen = elm$core$Elm$JsArray$length(tail);\n\t\tvar notAppended = (elm$core$Array$branchFactor - elm$core$Elm$JsArray$length(builder.tail)) - tailLen;\n\t\tvar appended = A3(elm$core$Elm$JsArray$appendN, elm$core$Array$branchFactor, builder.tail, tail);\n\t\treturn (notAppended < 0) ? {\n\t\t\tnodeList: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.nodeList),\n\t\t\tnodeListSize: builder.nodeListSize + 1,\n\t\t\ttail: A3(elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)\n\t\t} : ((!notAppended) ? {\n\t\t\tnodeList: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.nodeList),\n\t\t\tnodeListSize: builder.nodeListSize + 1,\n\t\t\ttail: elm$core$Elm$JsArray$empty\n\t\t} : {nodeList: builder.nodeList, nodeListSize: builder.nodeListSize, tail: appended});\n\t});\nvar elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceLeft = F2(\n\tfunction (from, array) {\n\t\tvar len = array.a;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (!from) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tfrom,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tlen - from,\n\t\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\tfrom - elm$core$Array$tailIndex(len),\n\t\t\t\t\t\telm$core$Elm$JsArray$length(tail),\n\t\t\t\t\t\ttail));\n\t\t\t} else {\n\t\t\t\tvar skipNodes = (from / elm$core$Array$branchFactor) | 0;\n\t\t\t\tvar helper = F2(\n\t\t\t\t\tfunction (node, acc) {\n\t\t\t\t\t\tif (node.$ === 'SubTree') {\n\t\t\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\t\treturn A2(elm$core$List$cons, leaf, acc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar leafNodes = A3(\n\t\t\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\t\t\thelper,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[tail]),\n\t\t\t\t\ttree);\n\t\t\t\tvar nodesToInsert = A2(elm$core$List$drop, skipNodes, leafNodes);\n\t\t\t\tif (!nodesToInsert.b) {\n\t\t\t\t\treturn elm$core$Array$empty;\n\t\t\t\t} else {\n\t\t\t\t\tvar head = nodesToInsert.a;\n\t\t\t\t\tvar rest = nodesToInsert.b;\n\t\t\t\t\tvar firstSlice = from - (skipNodes * elm$core$Array$branchFactor);\n\t\t\t\t\tvar initialBuilder = {\n\t\t\t\t\t\tnodeList: _List_Nil,\n\t\t\t\t\t\tnodeListSize: 0,\n\t\t\t\t\t\ttail: A3(\n\t\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\t\tfirstSlice,\n\t\t\t\t\t\t\telm$core$Elm$JsArray$length(head),\n\t\t\t\t\t\t\thead)\n\t\t\t\t\t};\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tA3(elm$core$List$foldl, elm$core$Array$appendHelpBuilder, initialBuilder, rest));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fetchNewTail = F4(\n\tfunction (shift, end, treeEnd, tree) {\n\t\tfetchNewTail:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (treeEnd >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (_n0.$ === 'SubTree') {\n\t\t\t\tvar sub = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$end = end,\n\t\t\t\t\t$temp$treeEnd = treeEnd,\n\t\t\t\t\t$temp$tree = sub;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tend = $temp$end;\n\t\t\t\ttreeEnd = $temp$treeEnd;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue fetchNewTail;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$hoistTree = F3(\n\tfunction (oldShift, newShift, tree) {\n\t\thoistTree:\n\t\twhile (true) {\n\t\t\tif ((_Utils_cmp(oldShift, newShift) < 1) || (!elm$core$Elm$JsArray$length(tree))) {\n\t\t\t\treturn tree;\n\t\t\t} else {\n\t\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, 0, tree);\n\t\t\t\tif (_n0.$ === 'SubTree') {\n\t\t\t\t\tvar sub = _n0.a;\n\t\t\t\t\tvar $temp$oldShift = oldShift - elm$core$Array$shiftStep,\n\t\t\t\t\t\t$temp$newShift = newShift,\n\t\t\t\t\t\t$temp$tree = sub;\n\t\t\t\t\toldShift = $temp$oldShift;\n\t\t\t\t\tnewShift = $temp$newShift;\n\t\t\t\t\ttree = $temp$tree;\n\t\t\t\t\tcontinue hoistTree;\n\t\t\t\t} else {\n\t\t\t\t\treturn tree;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceTree = F3(\n\tfunction (shift, endIdx, tree) {\n\t\tvar lastPos = elm$core$Array$bitMask & (endIdx >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, lastPos, tree);\n\t\tif (_n0.$ === 'SubTree') {\n\t\t\tvar sub = _n0.a;\n\t\t\tvar newSub = A3(elm$core$Array$sliceTree, shift - elm$core$Array$shiftStep, endIdx, sub);\n\t\t\treturn (!elm$core$Elm$JsArray$length(newSub)) ? A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree) : A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tlastPos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, lastPos + 1, tree));\n\t\t} else {\n\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree);\n\t\t}\n\t});\nvar elm$core$Array$sliceRight = F2(\n\tfunction (end, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (_Utils_eq(end, len)) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tend,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tstartShift,\n\t\t\t\t\ttree,\n\t\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, tail));\n\t\t\t} else {\n\t\t\t\tvar endIdx = elm$core$Array$tailIndex(end);\n\t\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Basics$logBase,\n\t\t\t\t\t\telm$core$Array$branchFactor,\n\t\t\t\t\t\tA2(elm$core$Basics$max, 1, endIdx - 1)));\n\t\t\t\tvar newShift = A2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep);\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Array$hoistTree,\n\t\t\t\t\t\tstartShift,\n\t\t\t\t\t\tnewShift,\n\t\t\t\t\t\tA3(elm$core$Array$sliceTree, startShift, endIdx, tree)),\n\t\t\t\t\tA4(elm$core$Array$fetchNewTail, startShift, end, endIdx, tree));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$translateIndex = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar posIndex = (index < 0) ? (len + index) : index;\n\t\treturn (posIndex < 0) ? 0 : ((_Utils_cmp(posIndex, len) > 0) ? len : posIndex);\n\t});\nvar elm$core$Array$slice = F3(\n\tfunction (from, to, array) {\n\t\tvar correctTo = A2(elm$core$Array$translateIndex, to, array);\n\t\tvar correctFrom = A2(elm$core$Array$translateIndex, from, array);\n\t\treturn (_Utils_cmp(correctFrom, correctTo) > 0) ? elm$core$Array$empty : A2(\n\t\t\telm$core$Array$sliceLeft,\n\t\t\tcorrectFrom,\n\t\t\tA2(elm$core$Array$sliceRight, correctTo, array));\n\t});\nvar romstad$elm_chess$Internal$Game$position = function (game) {\n\treturn game.currentPosition;\n};\nvar elm$core$Basics$neq = _Utils_notEqual;\nvar romstad$elm_chess$Internal$Board$removePiece = function (square) {\n\treturn A2(\n\t\telm$core$Array$set,\n\t\tromstad$elm_chess$Internal$Square$unwrap(square),\n\t\tromstad$elm_chess$Internal$Piece$empty);\n};\nvar romstad$elm_chess$Internal$Board$movePiece = F3(\n\tfunction (from, to, board) {\n\t\tvar piece = A2(romstad$elm_chess$Internal$Board$pieceOn, from, board);\n\t\treturn A3(\n\t\t\tromstad$elm_chess$Internal$Board$putPiece,\n\t\t\tpiece,\n\t\t\tto,\n\t\t\tA2(romstad$elm_chess$Internal$Board$removePiece, from, board));\n\t});\nvar elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;\nvar romstad$elm_chess$Internal$Move$unwrap = function (move) {\n\tvar move_ = move.a;\n\treturn move_;\n};\nvar romstad$elm_chess$Internal$Move$from = function (move) {\n\treturn romstad$elm_chess$Internal$Square$expand(\n\t\t(romstad$elm_chess$Internal$Move$unwrap(move) >> 6) & 63);\n};\nvar romstad$elm_chess$Internal$Move$isEp = function (move) {\n\treturn (1 << 16) & romstad$elm_chess$Internal$Move$unwrap(move);\n};\nvar romstad$elm_chess$Internal$Move$isCastle = function (move) {\n\treturn (1 << 15) & romstad$elm_chess$Internal$Move$unwrap(move);\n};\nvar romstad$elm_chess$Internal$Move$to = function (move) {\n\treturn romstad$elm_chess$Internal$Square$expand(\n\t\tromstad$elm_chess$Internal$Move$unwrap(move) & 63);\n};\nvar romstad$elm_chess$Internal$Move$isKingsideCastle = function (move) {\n\treturn romstad$elm_chess$Internal$Move$isCastle(move) && (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$Square$unwrap(\n\t\t\tromstad$elm_chess$Internal$Move$from(move)),\n\t\tromstad$elm_chess$Internal$Square$unwrap(\n\t\t\tromstad$elm_chess$Internal$Move$to(move))) < 0);\n};\nvar romstad$elm_chess$Internal$Move$isQueensideCastle = function (move) {\n\treturn romstad$elm_chess$Internal$Move$isCastle(move) && (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$Square$unwrap(\n\t\t\tromstad$elm_chess$Internal$Move$from(move)),\n\t\tromstad$elm_chess$Internal$Square$unwrap(\n\t\t\tromstad$elm_chess$Internal$Move$to(move))) > 0);\n};\nvar romstad$elm_chess$Internal$Move$promotion = function (move) {\n\tvar p = romstad$elm_chess$Internal$PieceType$PieceType(\n\t\t(romstad$elm_chess$Internal$Move$unwrap(move) >> 12) & 7);\n\treturn _Utils_eq(p, romstad$elm_chess$Internal$PieceType$none) ? elm$core$Maybe$Nothing : elm$core$Maybe$Just(p);\n};\nvar romstad$elm_chess$Internal$Piece$unwrap = function (piece) {\n\tvar piece_ = piece.a;\n\treturn piece_;\n};\nvar romstad$elm_chess$Internal$Piece$color = function (piece) {\n\treturn romstad$elm_chess$Internal$PieceColor$PieceColor(\n\t\tromstad$elm_chess$Internal$Piece$unwrap(piece) >> 3);\n};\nvar romstad$elm_chess$Internal$SquareDelta$unwrap = function (delta) {\n\tvar delta_ = delta.a;\n\treturn delta_;\n};\nvar romstad$elm_chess$Internal$Square$add = F2(\n\tfunction (square, delta_) {\n\t\treturn romstad$elm_chess$Internal$Square$Square(\n\t\t\tromstad$elm_chess$Internal$Square$unwrap(square) + romstad$elm_chess$Internal$SquareDelta$unwrap(delta_));\n\t});\nvar romstad$elm_chess$Internal$Square$file = function (square) {\n\treturn romstad$elm_chess$Internal$SquareFile$SquareFile(\n\t\tA2(\n\t\t\telm$core$Basics$modBy,\n\t\t\tromstad$elm_chess$Internal$BoardDimensions$extendedFileCount,\n\t\t\tromstad$elm_chess$Internal$Square$unwrap(square)));\n};\nvar romstad$elm_chess$Internal$Square$rank = function (square) {\n\treturn romstad$elm_chess$Internal$SquareRank$SquareRank(\n\t\t(romstad$elm_chess$Internal$Square$unwrap(square) / romstad$elm_chess$Internal$BoardDimensions$extendedFileCount) | 0);\n};\nvar romstad$elm_chess$Internal$SquareDelta$SquareDelta = function (a) {\n\treturn {$: 'SquareDelta', a: a};\n};\nvar romstad$elm_chess$Internal$SquareDelta$e = romstad$elm_chess$Internal$SquareDelta$SquareDelta(1);\nvar romstad$elm_chess$Internal$SquareDelta$multiply = F2(\n\tfunction (i, delta) {\n\t\treturn romstad$elm_chess$Internal$SquareDelta$SquareDelta(\n\t\t\ti * romstad$elm_chess$Internal$SquareDelta$unwrap(delta));\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar romstad$elm_chess$Internal$SquareDelta$negate = function (delta) {\n\treturn A2(romstad$elm_chess$Internal$SquareDelta$multiply, -1, delta);\n};\nvar romstad$elm_chess$Internal$SquareDelta$w = romstad$elm_chess$Internal$SquareDelta$negate(romstad$elm_chess$Internal$SquareDelta$e);\nvar romstad$elm_chess$Internal$Board$doMove = F2(\n\tfunction (move, board) {\n\t\tvar us = romstad$elm_chess$Internal$Piece$color(\n\t\t\tA2(\n\t\t\t\tromstad$elm_chess$Internal$Board$pieceOn,\n\t\t\t\tromstad$elm_chess$Internal$Move$from(move),\n\t\t\t\tboard));\n\t\tvar to = romstad$elm_chess$Internal$Move$to(move);\n\t\tvar from = romstad$elm_chess$Internal$Move$from(move);\n\t\tvar _n0 = romstad$elm_chess$Internal$Move$promotion(move);\n\t\tif (_n0.$ === 'Nothing') {\n\t\t\tif (romstad$elm_chess$Internal$Move$isKingsideCastle(move)) {\n\t\t\t\treturn A3(\n\t\t\t\t\tromstad$elm_chess$Internal$Board$movePiece,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, to, romstad$elm_chess$Internal$SquareDelta$e),\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, from, romstad$elm_chess$Internal$SquareDelta$e),\n\t\t\t\t\tA3(romstad$elm_chess$Internal$Board$movePiece, from, to, board));\n\t\t\t} else {\n\t\t\t\tif (romstad$elm_chess$Internal$Move$isQueensideCastle(move)) {\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Board$movePiece,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Square$add,\n\t\t\t\t\t\t\tto,\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$w)),\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, from, romstad$elm_chess$Internal$SquareDelta$w),\n\t\t\t\t\t\tA3(romstad$elm_chess$Internal$Board$movePiece, from, to, board));\n\t\t\t\t} else {\n\t\t\t\t\tif (romstad$elm_chess$Internal$Move$isEp(move)) {\n\t\t\t\t\t\tvar toFile = romstad$elm_chess$Internal$Square$file(to);\n\t\t\t\t\t\tvar fromRank = romstad$elm_chess$Internal$Square$rank(from);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Board$removePiece,\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$make, toFile, fromRank),\n\t\t\t\t\t\t\tA3(romstad$elm_chess$Internal$Board$movePiece, from, to, board));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn A3(romstad$elm_chess$Internal$Board$movePiece, from, to, board);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar kind = _n0.a;\n\t\t\treturn A3(\n\t\t\t\tromstad$elm_chess$Internal$Board$putPiece,\n\t\t\t\tA2(romstad$elm_chess$Internal$Piece$make, us, kind),\n\t\t\t\tto,\n\t\t\t\tA2(romstad$elm_chess$Internal$Board$removePiece, from, board));\n\t\t}\n\t});\nvar elm$core$Bitwise$complement = _Bitwise_complement;\nvar romstad$elm_chess$Internal$CastleRights$unwrap = function (rights) {\n\tvar rights_ = rights.a;\n\treturn rights_;\n};\nvar romstad$elm_chess$Internal$CastleRights$disableKingsideCastling = F2(\n\tfunction (color, rights) {\n\t\treturn romstad$elm_chess$Internal$CastleRights$CastleRights(\n\t\t\tromstad$elm_chess$Internal$CastleRights$unwrap(rights) & (~(1 << (2 * romstad$elm_chess$Internal$PieceColor$unwrap(color)))));\n\t});\nvar romstad$elm_chess$Internal$CastleRights$disableQueensideCastling = F2(\n\tfunction (color, rights) {\n\t\treturn romstad$elm_chess$Internal$CastleRights$CastleRights(\n\t\t\tromstad$elm_chess$Internal$CastleRights$unwrap(rights) & (~(1 << ((2 * romstad$elm_chess$Internal$PieceColor$unwrap(color)) + 1))));\n\t});\nvar romstad$elm_chess$Internal$CastleRights$disableAllCastling = F2(\n\tfunction (color, rights) {\n\t\treturn A2(\n\t\t\tromstad$elm_chess$Internal$CastleRights$disableQueensideCastling,\n\t\t\tcolor,\n\t\t\tA2(romstad$elm_chess$Internal$CastleRights$disableKingsideCastling, color, rights));\n\t});\nvar romstad$elm_chess$Internal$SquareFile$a = romstad$elm_chess$Internal$SquareFile$SquareFile(romstad$elm_chess$Internal$BoardDimensions$fileMin);\nvar romstad$elm_chess$Internal$SquareRank$one = romstad$elm_chess$Internal$SquareRank$SquareRank(romstad$elm_chess$Internal$BoardDimensions$rankMin);\nvar romstad$elm_chess$Internal$Square$a1 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$a, romstad$elm_chess$Internal$SquareRank$one);\nvar romstad$elm_chess$Internal$SquareRank$eight = romstad$elm_chess$Internal$SquareRank$SquareRank(romstad$elm_chess$Internal$BoardDimensions$rankMin + 7);\nvar romstad$elm_chess$Internal$Square$a8 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$a, romstad$elm_chess$Internal$SquareRank$eight);\nvar romstad$elm_chess$Internal$SquareFile$e = romstad$elm_chess$Internal$SquareFile$SquareFile(romstad$elm_chess$Internal$BoardDimensions$fileMin + 4);\nvar romstad$elm_chess$Internal$Square$e1 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$e, romstad$elm_chess$Internal$SquareRank$one);\nvar romstad$elm_chess$Internal$Square$e8 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$e, romstad$elm_chess$Internal$SquareRank$eight);\nvar romstad$elm_chess$Internal$SquareFile$h = romstad$elm_chess$Internal$SquareFile$SquareFile(romstad$elm_chess$Internal$BoardDimensions$fileMin + 7);\nvar romstad$elm_chess$Internal$Square$h1 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$h, romstad$elm_chess$Internal$SquareRank$one);\nvar romstad$elm_chess$Internal$Square$h8 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$h, romstad$elm_chess$Internal$SquareRank$eight);\nvar romstad$elm_chess$Internal$CastleRights$doMove = F2(\n\tfunction (move, rights) {\n\t\tvar to = romstad$elm_chess$Internal$Move$to(move);\n\t\tvar from = romstad$elm_chess$Internal$Move$from(move);\n\t\treturn (_Utils_eq(from, romstad$elm_chess$Internal$Square$e8) ? romstad$elm_chess$Internal$CastleRights$disableAllCastling(romstad$elm_chess$Internal$PieceColor$black) : elm$core$Basics$identity)(\n\t\t\t(_Utils_eq(from, romstad$elm_chess$Internal$Square$e1) ? romstad$elm_chess$Internal$CastleRights$disableAllCastling(romstad$elm_chess$Internal$PieceColor$white) : elm$core$Basics$identity)(\n\t\t\t\t((_Utils_eq(from, romstad$elm_chess$Internal$Square$h8) || _Utils_eq(to, romstad$elm_chess$Internal$Square$h8)) ? romstad$elm_chess$Internal$CastleRights$disableKingsideCastling(romstad$elm_chess$Internal$PieceColor$black) : elm$core$Basics$identity)(\n\t\t\t\t\t((_Utils_eq(from, romstad$elm_chess$Internal$Square$h1) || _Utils_eq(to, romstad$elm_chess$Internal$Square$h1)) ? romstad$elm_chess$Internal$CastleRights$disableKingsideCastling(romstad$elm_chess$Internal$PieceColor$white) : elm$core$Basics$identity)(\n\t\t\t\t\t\t((_Utils_eq(from, romstad$elm_chess$Internal$Square$a8) || _Utils_eq(to, romstad$elm_chess$Internal$Square$a8)) ? romstad$elm_chess$Internal$CastleRights$disableQueensideCastling(romstad$elm_chess$Internal$PieceColor$black) : elm$core$Basics$identity)(\n\t\t\t\t\t\t\t((_Utils_eq(from, romstad$elm_chess$Internal$Square$a1) || _Utils_eq(to, romstad$elm_chess$Internal$Square$a1)) ? romstad$elm_chess$Internal$CastleRights$disableQueensideCastling(romstad$elm_chess$Internal$PieceColor$white) : elm$core$Basics$identity)(rights))))));\n\t});\nvar romstad$elm_chess$Internal$Piece$blackPawn = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$pawn);\nvar romstad$elm_chess$Internal$Piece$kind = function (piece) {\n\treturn romstad$elm_chess$Internal$PieceType$PieceType(\n\t\tromstad$elm_chess$Internal$Piece$unwrap(piece) & 7);\n};\nvar romstad$elm_chess$Internal$Piece$whitePawn = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$pawn);\nvar elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$core$Bitwise$xor = _Bitwise_xor;\nvar romstad$elm_chess$Internal$PieceColor$opposite = A2(\n\telm$core$Basics$composeR,\n\tromstad$elm_chess$Internal$PieceColor$unwrap,\n\tA2(\n\t\telm$core$Basics$composeR,\n\t\telm$core$Bitwise$xor(1),\n\t\tromstad$elm_chess$Internal$PieceColor$PieceColor));\nvar romstad$elm_chess$Internal$Position$unwrap = function (pos) {\n\tvar pos_ = pos.a;\n\treturn pos_;\n};\nvar romstad$elm_chess$Internal$Position$pieceOn = F2(\n\tfunction (square, pos) {\n\t\treturn A2(\n\t\t\tromstad$elm_chess$Internal$Board$pieceOn,\n\t\t\tsquare,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(pos).board);\n\t});\nvar romstad$elm_chess$Internal$Square$subtract = F2(\n\tfunction (square0, square1) {\n\t\treturn romstad$elm_chess$Internal$SquareDelta$SquareDelta(\n\t\t\tromstad$elm_chess$Internal$Square$unwrap(square0) - romstad$elm_chess$Internal$Square$unwrap(square1));\n\t});\nvar romstad$elm_chess$Internal$SquareDelta$n = romstad$elm_chess$Internal$SquareDelta$SquareDelta(romstad$elm_chess$Internal$BoardDimensions$extendedFileCount);\nvar romstad$elm_chess$Internal$SquareDelta$add = F2(\n\tfunction (delta0, delta1) {\n\t\treturn romstad$elm_chess$Internal$SquareDelta$SquareDelta(\n\t\t\tromstad$elm_chess$Internal$SquareDelta$unwrap(delta0) + romstad$elm_chess$Internal$SquareDelta$unwrap(delta1));\n\t});\nvar romstad$elm_chess$Internal$SquareDelta$nn = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$n);\nvar romstad$elm_chess$Internal$SquareDelta$s = romstad$elm_chess$Internal$SquareDelta$negate(romstad$elm_chess$Internal$SquareDelta$n);\nvar romstad$elm_chess$Internal$SquareDelta$ss = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$s);\nvar romstad$elm_chess$Internal$Position$doMove = F2(\n\tfunction (move, position) {\n\t\tvar to = romstad$elm_chess$Internal$Move$to(move);\n\t\tvar from = romstad$elm_chess$Internal$Move$from(move);\n\t\tvar piece = A2(romstad$elm_chess$Internal$Position$pieceOn, from, position);\n\t\tvar pos = position.a;\n\t\treturn romstad$elm_chess$Internal$Position$Position(\n\t\t\t{\n\t\t\t\tblackKingSquare: _Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackKing) ? elm$core$Maybe$Just(to) : pos.blackKingSquare,\n\t\t\t\tboard: A2(romstad$elm_chess$Internal$Board$doMove, move, pos.board),\n\t\t\t\tcastleRights: A2(romstad$elm_chess$Internal$CastleRights$doMove, move, pos.castleRights),\n\t\t\t\tepSquare: (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whitePawn) && _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$subtract, to, from),\n\t\t\t\t\tromstad$elm_chess$Internal$SquareDelta$nn)) ? elm$core$Maybe$Just(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, from, romstad$elm_chess$Internal$SquareDelta$n)) : ((_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackPawn) && _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$subtract, to, from),\n\t\t\t\t\tromstad$elm_chess$Internal$SquareDelta$ss)) ? elm$core$Maybe$Just(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, from, romstad$elm_chess$Internal$SquareDelta$s)) : elm$core$Maybe$Nothing),\n\t\t\t\tgamePly: pos.gamePly + 1,\n\t\t\t\tlastMove: elm$core$Maybe$Just(move),\n\t\t\t\tparent: elm$core$Maybe$Just(position),\n\t\t\t\trule50Counter: (_Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\t\t\tromstad$elm_chess$Internal$PieceType$pawn) || (!_Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, to, position),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$empty))) ? 0 : (pos.rule50Counter + 1),\n\t\t\t\tsideToMove: romstad$elm_chess$Internal$PieceColor$opposite(pos.sideToMove),\n\t\t\t\twhiteKingSquare: _Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteKing) ? elm$core$Maybe$Just(to) : pos.whiteKingSquare\n\t\t\t});\n\t});\nvar romstad$elm_chess$Internal$Game$addMove = F2(\n\tfunction (move, game) {\n\t\tvar pos = A2(\n\t\t\tromstad$elm_chess$Internal$Position$doMove,\n\t\t\tmove,\n\t\t\tromstad$elm_chess$Internal$Game$position(game));\n\t\treturn _Utils_update(\n\t\t\tgame,\n\t\t\t{\n\t\t\t\tcurrentMoveIndex: game.currentMoveIndex + 1,\n\t\t\t\tcurrentPosition: pos,\n\t\t\t\tpositions: A2(\n\t\t\t\t\telm$core$Array$push,\n\t\t\t\t\tpos,\n\t\t\t\t\tA3(elm$core$Array$slice, 0, 1 + game.currentMoveIndex, game.positions))\n\t\t\t});\n\t});\nvar romstad$elm_chess$Game$addMove = F2(\n\tfunction (move, game) {\n\t\tvar g = game.a;\n\t\treturn romstad$elm_chess$Game$Game(\n\t\t\tA2(romstad$elm_chess$Internal$Game$addMove, move, g));\n\t});\nvar romstad$elm_chess$Game$position = function (game) {\n\tvar g = game.a;\n\treturn romstad$elm_chess$Internal$Game$position(g);\n};\nvar elm$core$String$toUpper = _String_toUpper;\nvar elm$core$String$cons = _String_cons;\nvar elm$core$String$fromChar = function (_char) {\n\treturn A2(elm$core$String$cons, _char, '');\n};\nvar romstad$elm_chess$Internal$PieceType$toChar = function (kind) {\n\treturn _Utils_eq(kind, romstad$elm_chess$Internal$PieceType$pawn) ? _Utils_chr('P') : (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$knight) ? _Utils_chr('N') : (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$bishop) ? _Utils_chr('B') : (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$rook) ? _Utils_chr('R') : (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$queen) ? _Utils_chr('Q') : (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$king) ? _Utils_chr('K') : _Utils_chr('?'))))));\n};\nvar romstad$elm_chess$Internal$PieceType$toString = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$PieceType$toChar, elm$core$String$fromChar);\nvar elm$core$Char$fromCode = _Char_fromCode;\nvar romstad$elm_chess$Internal$SquareFile$toChar = function (file) {\n\treturn elm$core$Char$fromCode(\n\t\t(romstad$elm_chess$Internal$SquareFile$unwrap(file) - romstad$elm_chess$Internal$BoardDimensions$fileMin) + elm$core$Char$toCode(\n\t\t\t_Utils_chr('a')));\n};\nvar romstad$elm_chess$Internal$SquareFile$toString = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$SquareFile$toChar, elm$core$String$fromChar);\nvar romstad$elm_chess$Internal$SquareRank$toChar = function (rank) {\n\treturn elm$core$Char$fromCode(\n\t\t(romstad$elm_chess$Internal$SquareRank$unwrap(rank) - romstad$elm_chess$Internal$BoardDimensions$rankMin) + elm$core$Char$toCode(\n\t\t\t_Utils_chr('1')));\n};\nvar romstad$elm_chess$Internal$SquareRank$toString = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$SquareRank$toChar, elm$core$String$fromChar);\nvar romstad$elm_chess$Internal$Square$toString = function (square) {\n\treturn _Utils_ap(\n\t\tromstad$elm_chess$Internal$SquareFile$toString(\n\t\t\tromstad$elm_chess$Internal$Square$file(square)),\n\t\tromstad$elm_chess$Internal$SquareRank$toString(\n\t\t\tromstad$elm_chess$Internal$Square$rank(square)));\n};\nvar romstad$elm_chess$Internal$Notation$pawnMoveToSan = F2(\n\tfunction (move, position) {\n\t\tvar to = romstad$elm_chess$Internal$Move$to(move);\n\t\tvar promotion = romstad$elm_chess$Internal$Move$promotion(move);\n\t\tvar from = romstad$elm_chess$Internal$Move$from(move);\n\t\treturn _Utils_ap(\n\t\t\t(!_Utils_eq(\n\t\t\t\tromstad$elm_chess$Internal$Square$file(from),\n\t\t\t\tromstad$elm_chess$Internal$Square$file(to))) ? (romstad$elm_chess$Internal$SquareFile$toString(\n\t\t\t\tromstad$elm_chess$Internal$Square$file(from)) + 'x') : '',\n\t\t\t_Utils_ap(\n\t\t\t\tromstad$elm_chess$Internal$Square$toString(to),\n\t\t\t\tfunction () {\n\t\t\t\t\tif (promotion.$ === 'Nothing') {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar promotion_ = promotion.a;\n\t\t\t\t\t\treturn '=' + elm$core$String$toUpper(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$PieceType$toString(promotion_));\n\t\t\t\t\t}\n\t\t\t\t}()));\n\t});\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$all = F2(\n\tfunction (isOkay, list) {\n\t\treturn !A2(\n\t\t\telm$core$List$any,\n\t\t\tA2(elm$core$Basics$composeL, elm$core$Basics$not, isOkay),\n\t\t\tlist);\n\t});\nvar romstad$elm_chess$Internal$Notation$differentFileFrom = F2(\n\tfunction (m1, m2) {\n\t\treturn _Utils_eq(m1, m2) || (!_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(m1)),\n\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(m2))));\n\t});\nvar romstad$elm_chess$Internal$Notation$differentRankFrom = F2(\n\tfunction (m1, m2) {\n\t\treturn _Utils_eq(m1, m2) || (!_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Square$rank(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(m1)),\n\t\t\tromstad$elm_chess$Internal$Square$rank(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(m2))));\n\t});\nvar romstad$elm_chess$Internal$Position$kingSquare = F2(\n\tfunction (color, position) {\n\t\treturn _Utils_eq(color, romstad$elm_chess$Internal$PieceColor$white) ? romstad$elm_chess$Internal$Position$unwrap(position).whiteKingSquare : romstad$elm_chess$Internal$Position$unwrap(position).blackKingSquare;\n\t});\nvar romstad$elm_chess$Internal$Board$lineIsClear = F4(\n\tfunction (board, square0, square1, delta) {\n\t\tvar lineIsClearInternal = F2(\n\t\t\tfunction (s0, s1) {\n\t\t\t\treturn _Utils_eq(s0, square1) || (_Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, s0, board),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$empty) && A2(\n\t\t\t\t\tlineIsClearInternal,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, s0, delta),\n\t\t\t\t\ts1));\n\t\t\t});\n\t\treturn A2(\n\t\t\tlineIsClearInternal,\n\t\t\tA2(romstad$elm_chess$Internal$Square$add, square0, delta),\n\t\t\tsquare1);\n\t});\nvar elm$core$Array$repeat = F2(\n\tfunction (n, e) {\n\t\treturn A2(\n\t\t\telm$core$Array$initialize,\n\t\t\tn,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn e;\n\t\t\t});\n\t});\nvar romstad$elm_chess$Internal$Piece$blackBishop = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$bishop);\nvar romstad$elm_chess$Internal$Piece$blackKnight = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$knight);\nvar romstad$elm_chess$Internal$Piece$blackQueen = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$queen);\nvar romstad$elm_chess$Internal$Piece$blackRook = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$rook);\nvar romstad$elm_chess$Internal$Piece$whiteBishop = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$bishop);\nvar romstad$elm_chess$Internal$Piece$whiteKnight = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$knight);\nvar romstad$elm_chess$Internal$Piece$whiteQueen = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$queen);\nvar romstad$elm_chess$Internal$Piece$whiteRook = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$rook);\nvar romstad$elm_chess$Internal$SquareDelta$ne = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$e);\nvar romstad$elm_chess$Internal$SquareDelta$nee = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tromstad$elm_chess$Internal$SquareDelta$n,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$e));\nvar romstad$elm_chess$Internal$SquareDelta$nne = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$n),\n\tromstad$elm_chess$Internal$SquareDelta$e);\nvar romstad$elm_chess$Internal$SquareDelta$nnw = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$n),\n\tromstad$elm_chess$Internal$SquareDelta$w);\nvar romstad$elm_chess$Internal$SquareDelta$nw = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$w);\nvar romstad$elm_chess$Internal$SquareDelta$nww = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tromstad$elm_chess$Internal$SquareDelta$n,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$w));\nvar romstad$elm_chess$Internal$SquareDelta$se = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$e);\nvar romstad$elm_chess$Internal$SquareDelta$see = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tromstad$elm_chess$Internal$SquareDelta$s,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$e));\nvar romstad$elm_chess$Internal$SquareDelta$sse = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$s),\n\tromstad$elm_chess$Internal$SquareDelta$e);\nvar romstad$elm_chess$Internal$SquareDelta$ssw = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$s),\n\tromstad$elm_chess$Internal$SquareDelta$w);\nvar romstad$elm_chess$Internal$SquareDelta$sw = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w);\nvar romstad$elm_chess$Internal$SquareDelta$sww = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tromstad$elm_chess$Internal$SquareDelta$s,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$w));\nvar romstad$elm_chess$Internal$Piece$attackDirections = function (piece) {\n\treturn _Utils_eq(piece, romstad$elm_chess$Internal$Piece$whitePawn) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteKnight) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nnw, romstad$elm_chess$Internal$SquareDelta$nne, romstad$elm_chess$Internal$SquareDelta$nww, romstad$elm_chess$Internal$SquareDelta$nee, romstad$elm_chess$Internal$SquareDelta$ssw, romstad$elm_chess$Internal$SquareDelta$sse, romstad$elm_chess$Internal$SquareDelta$sww, romstad$elm_chess$Internal$SquareDelta$see]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteBishop) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteRook) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteQueen) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteKing) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackPawn) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackKnight) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nnw, romstad$elm_chess$Internal$SquareDelta$nne, romstad$elm_chess$Internal$SquareDelta$nww, romstad$elm_chess$Internal$SquareDelta$nee, romstad$elm_chess$Internal$SquareDelta$ssw, romstad$elm_chess$Internal$SquareDelta$sse, romstad$elm_chess$Internal$SquareDelta$sww, romstad$elm_chess$Internal$SquareDelta$see]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackBishop) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackRook) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackQueen) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackKing) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : _List_Nil)))))))))));\n};\nvar romstad$elm_chess$Internal$PieceType$isSlider = function (kind) {\n\treturn _Utils_eq(kind, romstad$elm_chess$Internal$PieceType$bishop) || (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$rook) || _Utils_eq(kind, romstad$elm_chess$Internal$PieceType$queen));\n};\nvar romstad$elm_chess$Internal$Piece$isSlider = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$Piece$kind, romstad$elm_chess$Internal$PieceType$isSlider);\nvar romstad$elm_chess$Internal$SquareFile$isOutside = function (file) {\n\treturn (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$SquareFile$unwrap(file),\n\t\tromstad$elm_chess$Internal$BoardDimensions$fileMin) < 0) || (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$SquareFile$unwrap(file),\n\t\tromstad$elm_chess$Internal$BoardDimensions$fileMax) > 0);\n};\nvar romstad$elm_chess$Internal$SquareRank$isOutside = function (rank) {\n\treturn (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$SquareRank$unwrap(rank),\n\t\tromstad$elm_chess$Internal$BoardDimensions$rankMin) < 0) || (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$SquareRank$unwrap(rank),\n\t\tromstad$elm_chess$Internal$BoardDimensions$rankMax) > 0);\n};\nvar romstad$elm_chess$Internal$Square$isOutside = function (square) {\n\treturn romstad$elm_chess$Internal$SquareFile$isOutside(\n\t\tromstad$elm_chess$Internal$Square$file(square)) || romstad$elm_chess$Internal$SquareRank$isOutside(\n\t\tromstad$elm_chess$Internal$Square$rank(square));\n};\nvar romstad$elm_chess$Internal$Square$squaresInDirection = F2(\n\tfunction (startSquare, delta_) {\n\t\tvar squaresInDirectionInternal = F2(\n\t\t\tfunction (square, acc) {\n\t\t\t\tsquaresInDirectionInternal:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (romstad$elm_chess$Internal$Square$isOutside(square)) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$square = A2(romstad$elm_chess$Internal$Square$add, square, delta_),\n\t\t\t\t\t\t\t$temp$acc = A2(elm$core$List$cons, square, acc);\n\t\t\t\t\t\tsquare = $temp$square;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tcontinue squaresInDirectionInternal;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\treturn elm$core$List$reverse(\n\t\t\tA2(\n\t\t\t\tsquaresInDirectionInternal,\n\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, startSquare, delta_),\n\t\t\t\t_List_Nil));\n\t});\nvar romstad$elm_chess$Internal$Square$deltasInDirection = F2(\n\tfunction (startSquare, delta_) {\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (s) {\n\t\t\t\treturn A2(romstad$elm_chess$Internal$Square$subtract, s, startSquare);\n\t\t\t},\n\t\t\tA2(romstad$elm_chess$Internal$Square$squaresInDirection, startSquare, delta_));\n\t});\nvar romstad$elm_chess$Internal$Square$possibleDeltasInDirection = function (delta_) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (sq, result) {\n\t\t\t\tvar deltas = A2(romstad$elm_chess$Internal$Square$deltasInDirection, sq, delta_);\n\t\t\t\treturn (_Utils_cmp(\n\t\t\t\t\telm$core$List$length(deltas),\n\t\t\t\t\telm$core$List$length(result)) > 0) ? deltas : result;\n\t\t\t}),\n\t\t_List_Nil,\n\t\tromstad$elm_chess$Internal$Square$all);\n};\nvar romstad$elm_chess$Internal$BoardDimensions$squareMax = romstad$elm_chess$Internal$BoardDimensions$fileMax + (romstad$elm_chess$Internal$BoardDimensions$rankMax * romstad$elm_chess$Internal$BoardDimensions$extendedFileCount);\nvar romstad$elm_chess$Internal$BoardDimensions$squareMin = romstad$elm_chess$Internal$BoardDimensions$fileMin + (romstad$elm_chess$Internal$BoardDimensions$rankMin * romstad$elm_chess$Internal$BoardDimensions$extendedFileCount);\nvar romstad$elm_chess$Internal$SquareDelta$max = romstad$elm_chess$Internal$SquareDelta$SquareDelta(romstad$elm_chess$Internal$BoardDimensions$squareMax - romstad$elm_chess$Internal$BoardDimensions$squareMin);\nvar romstad$elm_chess$Internal$Piece$computeAttackDeltas = function (piece) {\n\tvar deltasByDirection = A2(\n\t\telm$core$List$concatMap,\n\t\tfunction (d) {\n\t\t\treturn romstad$elm_chess$Internal$Piece$isSlider(piece) ? A2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (d2) {\n\t\t\t\t\treturn _Utils_Tuple2(d, d2);\n\t\t\t\t},\n\t\t\t\tromstad$elm_chess$Internal$Square$possibleDeltasInDirection(d)) : _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(d, d)\n\t\t\t\t]);\n\t\t},\n\t\tromstad$elm_chess$Internal$Piece$attackDirections(piece));\n\tvar deltaMax = romstad$elm_chess$Internal$SquareDelta$unwrap(romstad$elm_chess$Internal$SquareDelta$max);\n\treturn elm$core$Array$toList(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n0, result) {\n\t\t\t\t\tvar d0 = _n0.a;\n\t\t\t\t\tvar d = _n0.b;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\telm$core$Array$set,\n\t\t\t\t\t\tdeltaMax + romstad$elm_chess$Internal$SquareDelta$unwrap(d),\n\t\t\t\t\t\telm$core$Maybe$Just(d0),\n\t\t\t\t\t\tresult);\n\t\t\t\t}),\n\t\t\tA2(elm$core$Array$repeat, (2 * deltaMax) + 1, elm$core$Maybe$Nothing),\n\t\t\tdeltasByDirection));\n};\nvar romstad$elm_chess$Internal$Piece$attackDeltas = elm$core$Array$fromList(\n\tA2(\n\t\telm$core$List$concatMap,\n\t\tromstad$elm_chess$Internal$Piece$computeAttackDeltas,\n\t\tA2(\n\t\t\telm$core$List$map,\n\t\t\tromstad$elm_chess$Internal$Piece$Piece,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\tromstad$elm_chess$Internal$Piece$unwrap(romstad$elm_chess$Internal$Piece$blackKing)))));\nvar romstad$elm_chess$Internal$Piece$attackDelta = F3(\n\tfunction (piece, from, to) {\n\t\tvar deltaMax = romstad$elm_chess$Internal$SquareDelta$unwrap(romstad$elm_chess$Internal$SquareDelta$max);\n\t\treturn A2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\telm$core$Maybe$Nothing,\n\t\t\tA2(\n\t\t\t\telm$core$Array$get,\n\t\t\t\t(((romstad$elm_chess$Internal$Piece$unwrap(piece) * ((2 * deltaMax) + 1)) + romstad$elm_chess$Internal$Square$unwrap(to)) - romstad$elm_chess$Internal$Square$unwrap(from)) + deltaMax,\n\t\t\t\tromstad$elm_chess$Internal$Piece$attackDeltas));\n\t});\nvar romstad$elm_chess$Internal$Board$pieceAttacksSquare = F3(\n\tfunction (from, to, board) {\n\t\tvar piece = A2(romstad$elm_chess$Internal$Board$pieceOn, from, board);\n\t\tvar _n0 = A3(romstad$elm_chess$Internal$Piece$attackDelta, piece, from, to);\n\t\tif (_n0.$ === 'Nothing') {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tvar delta = _n0.a;\n\t\t\treturn romstad$elm_chess$Internal$Piece$isSlider(piece) ? A4(romstad$elm_chess$Internal$Board$lineIsClear, board, from, to, delta) : true;\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Board$sideAttacksSquare = F3(\n\tfunction (side, square, board) {\n\t\treturn A2(\n\t\t\telm$core$List$any,\n\t\t\tfunction (s) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$color(\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, s, board)),\n\t\t\t\t\tside) && A3(romstad$elm_chess$Internal$Board$pieceAttacksSquare, s, square, board);\n\t\t\t},\n\t\t\tromstad$elm_chess$Internal$Square$all);\n\t});\nvar romstad$elm_chess$Internal$Position$sideAttacksSquare = F3(\n\tfunction (side, square, position) {\n\t\treturn A3(\n\t\t\tromstad$elm_chess$Internal$Board$sideAttacksSquare,\n\t\t\tside,\n\t\t\tsquare,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(position).board);\n\t});\nvar romstad$elm_chess$Internal$Position$isInCheck = F2(\n\tfunction (side, position) {\n\t\tvar _n0 = A2(romstad$elm_chess$Internal$Position$kingSquare, side, position);\n\t\tif (_n0.$ === 'Nothing') {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tvar kingSquare_ = _n0.a;\n\t\t\treturn A3(\n\t\t\t\tromstad$elm_chess$Internal$Position$sideAttacksSquare,\n\t\t\t\tromstad$elm_chess$Internal$PieceColor$opposite(side),\n\t\t\t\tkingSquare_,\n\t\t\t\tposition);\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Position$sideToMove = function (position) {\n\treturn romstad$elm_chess$Internal$Position$unwrap(position).sideToMove;\n};\nvar romstad$elm_chess$Internal$Position$pseudoMoveIsLegal = F2(\n\tfunction (position, move) {\n\t\treturn !A2(\n\t\t\tromstad$elm_chess$Internal$Position$isInCheck,\n\t\t\tromstad$elm_chess$Internal$Position$sideToMove(position),\n\t\t\tA2(romstad$elm_chess$Internal$Position$doMove, move, position));\n\t});\nvar romstad$elm_chess$Internal$Board$isEmpty = F2(\n\tfunction (square, board) {\n\t\treturn _Utils_eq(\n\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, square, board),\n\t\t\tromstad$elm_chess$Internal$Piece$empty);\n\t});\nvar romstad$elm_chess$Internal$Position$isEmpty = F2(\n\tfunction (square, pos) {\n\t\treturn A2(\n\t\t\tromstad$elm_chess$Internal$Board$isEmpty,\n\t\t\tsquare,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(pos).board);\n\t});\nvar romstad$elm_chess$Internal$Move$Move = function (a) {\n\treturn {$: 'Move', a: a};\n};\nvar romstad$elm_chess$Internal$Square$compress = function (square) {\n\tvar r = (romstad$elm_chess$Internal$Square$unwrap(square) / romstad$elm_chess$Internal$BoardDimensions$extendedFileCount) | 0;\n\tvar f = A2(\n\t\telm$core$Basics$modBy,\n\t\tromstad$elm_chess$Internal$BoardDimensions$extendedFileCount,\n\t\tromstad$elm_chess$Internal$Square$unwrap(square));\n\treturn (f - romstad$elm_chess$Internal$BoardDimensions$fileMin) + (romstad$elm_chess$Internal$BoardDimensions$fileCount * (r - romstad$elm_chess$Internal$BoardDimensions$rankMin));\n};\nvar romstad$elm_chess$Internal$Move$make = F2(\n\tfunction (from_, to_) {\n\t\treturn romstad$elm_chess$Internal$Move$Move(\n\t\t\tromstad$elm_chess$Internal$Square$compress(to_) | (romstad$elm_chess$Internal$Square$compress(from_) << 6));\n\t});\nvar romstad$elm_chess$Internal$Move$makePromotion = F3(\n\tfunction (from_, to_, promotion_) {\n\t\treturn romstad$elm_chess$Internal$Move$Move(\n\t\t\t(romstad$elm_chess$Internal$Square$compress(to_) | (romstad$elm_chess$Internal$Square$compress(from_) << 6)) | (romstad$elm_chess$Internal$PieceType$unwrap(promotion_) << 12));\n\t});\nvar romstad$elm_chess$Internal$Square$isRankTwo = F2(\n\tfunction (square, color) {\n\t\treturn _Utils_eq(color, romstad$elm_chess$Internal$PieceColor$white) ? _Utils_eq(\n\t\t\tromstad$elm_chess$Internal$SquareRank$unwrap(\n\t\t\t\tromstad$elm_chess$Internal$Square$rank(square)),\n\t\t\tromstad$elm_chess$Internal$BoardDimensions$rankMin + 1) : _Utils_eq(\n\t\t\tromstad$elm_chess$Internal$SquareRank$unwrap(\n\t\t\t\tromstad$elm_chess$Internal$Square$rank(square)),\n\t\t\tromstad$elm_chess$Internal$BoardDimensions$rankMax - 1);\n\t});\nvar romstad$elm_chess$Internal$Position$pawnCapturePseudoMovesTo = F3(\n\tfunction (us, to, position) {\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\tvar ourPawn = A2(romstad$elm_chess$Internal$Piece$make, us, romstad$elm_chess$Internal$PieceType$pawn);\n\t\tvar ds = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? _List_fromArray(\n\t\t\t[romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]) : _List_fromArray(\n\t\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne]);\n\t\treturn A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tfunction (from) {\n\t\t\t\treturn A2(romstad$elm_chess$Internal$Square$isRankTwo, from, them) ? A2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$makePromotion, from, to),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[romstad$elm_chess$Internal$PieceType$queen, romstad$elm_chess$Internal$PieceType$rook, romstad$elm_chess$Internal$PieceType$bishop, romstad$elm_chess$Internal$PieceType$knight])) : _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$make, from, to)\n\t\t\t\t\t]);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, s, position),\n\t\t\t\t\t\tourPawn);\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$add(to),\n\t\t\t\t\tds)));\n\t});\nvar romstad$elm_chess$Internal$Move$makeEp = F2(\n\tfunction (from_, to_) {\n\t\treturn romstad$elm_chess$Internal$Move$Move(\n\t\t\t(romstad$elm_chess$Internal$Square$compress(to_) | (romstad$elm_chess$Internal$Square$compress(from_) << 6)) | (1 << 16));\n\t});\nvar romstad$elm_chess$Internal$Position$epSquare = function (position) {\n\treturn romstad$elm_chess$Internal$Position$unwrap(position).epSquare;\n};\nvar romstad$elm_chess$Internal$Position$pawnEpCapturePseudoMoves = F3(\n\tfunction (us, to, position) {\n\t\tvar _n0 = romstad$elm_chess$Internal$Position$epSquare(position);\n\t\tif (_n0.$ === 'Nothing') {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar epSquare_ = _n0.a;\n\t\t\tif (!_Utils_eq(epSquare_, to)) {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tvar ourPawn = A2(romstad$elm_chess$Internal$Piece$make, us, romstad$elm_chess$Internal$PieceType$pawn);\n\t\t\t\tvar ds = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? _List_fromArray(\n\t\t\t\t\t[romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]) : _List_fromArray(\n\t\t\t\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne]);\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tfunction (from) {\n\t\t\t\t\t\treturn A2(romstad$elm_chess$Internal$Move$makeEp, from, to);\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, s, position),\n\t\t\t\t\t\t\t\tourPawn);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Square$add(to),\n\t\t\t\t\t\t\tds)));\n\t\t\t}\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Position$pawnPushPseudoMovesTo = F3(\n\tfunction (us, to, position) {\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\tvar push = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? romstad$elm_chess$Internal$SquareDelta$s : romstad$elm_chess$Internal$SquareDelta$n;\n\t\tvar ourPawn = A2(romstad$elm_chess$Internal$Piece$make, us, romstad$elm_chess$Internal$PieceType$pawn);\n\t\tvar from = A2(romstad$elm_chess$Internal$Square$add, to, push);\n\t\tif (_Utils_eq(\n\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, from, position),\n\t\t\tourPawn)) {\n\t\t\treturn A2(romstad$elm_chess$Internal$Square$isRankTwo, from, them) ? A2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tA2(romstad$elm_chess$Internal$Move$makePromotion, from, to),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[romstad$elm_chess$Internal$PieceType$queen, romstad$elm_chess$Internal$PieceType$rook, romstad$elm_chess$Internal$PieceType$bishop, romstad$elm_chess$Internal$PieceType$knight])) : _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$make, from, to)\n\t\t\t\t]);\n\t\t} else {\n\t\t\tif (A2(romstad$elm_chess$Internal$Position$isEmpty, from, position)) {\n\t\t\t\tvar from2 = A2(romstad$elm_chess$Internal$Square$add, from, push);\n\t\t\t\treturn (A2(romstad$elm_chess$Internal$Square$isRankTwo, from2, us) && _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, from2, position),\n\t\t\t\t\tourPawn)) ? _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$make, from2, to)\n\t\t\t\t\t]) : _List_Nil;\n\t\t\t} else {\n\t\t\t\treturn _List_Nil;\n\t\t\t}\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Position$pawnPseudoMovesTo = F3(\n\tfunction (us, to, position) {\n\t\treturn _Utils_ap(\n\t\t\tA3(romstad$elm_chess$Internal$Position$pawnEpCapturePseudoMoves, us, to, position),\n\t\t\tA2(romstad$elm_chess$Internal$Position$isEmpty, to, position) ? A3(romstad$elm_chess$Internal$Position$pawnPushPseudoMovesTo, us, to, position) : A3(romstad$elm_chess$Internal$Position$pawnCapturePseudoMovesTo, us, to, position));\n\t});\nvar romstad$elm_chess$Internal$Board$scan = F3(\n\tfunction (board, square, delta) {\n\t\tvar scanInternal = function (s) {\n\t\t\tscanInternal:\n\t\t\twhile (true) {\n\t\t\t\tif (!_Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, s, board),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$empty)) {\n\t\t\t\t\treturn s;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$s = A2(romstad$elm_chess$Internal$Square$add, s, delta);\n\t\t\t\t\ts = $temp$s;\n\t\t\t\t\tcontinue scanInternal;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn scanInternal(\n\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, delta));\n\t});\nvar romstad$elm_chess$Internal$Position$scan = F3(\n\tfunction (position, square, delta) {\n\t\treturn A3(\n\t\t\tromstad$elm_chess$Internal$Board$scan,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(position).board,\n\t\t\tsquare,\n\t\t\tdelta);\n\t});\nvar romstad$elm_chess$Internal$Position$piecePseudoMovesTo = F4(\n\tfunction (us, pieceType, to, position) {\n\t\tvar ourPiece = A2(romstad$elm_chess$Internal$Piece$make, us, pieceType);\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (from) {\n\t\t\t\treturn A2(romstad$elm_chess$Internal$Move$make, from, to);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, s, position),\n\t\t\t\t\t\tourPiece);\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$isSlider(ourPiece) ? A2(romstad$elm_chess$Internal$Position$scan, position, to) : romstad$elm_chess$Internal$Square$add(to),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(ourPiece))));\n\t});\nvar romstad$elm_chess$Internal$Position$pseudoMovesTo = F3(\n\tfunction (piece, square, position) {\n\t\tvar us = romstad$elm_chess$Internal$Position$sideToMove(position);\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\tvar capturedPiece = A2(romstad$elm_chess$Internal$Position$pieceOn, square, position);\n\t\treturn (!(_Utils_eq(capturedPiece, romstad$elm_chess$Internal$Piece$empty) || _Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$color(capturedPiece),\n\t\t\tthem))) ? _List_Nil : (_Utils_eq(piece, romstad$elm_chess$Internal$PieceType$pawn) ? A3(romstad$elm_chess$Internal$Position$pawnPseudoMovesTo, us, square, position) : A4(romstad$elm_chess$Internal$Position$piecePseudoMovesTo, us, piece, square, position));\n\t});\nvar romstad$elm_chess$Internal$Position$movesTo = F3(\n\tfunction (piece, square, position) {\n\t\treturn A2(\n\t\t\telm$core$List$filter,\n\t\t\tromstad$elm_chess$Internal$Position$pseudoMoveIsLegal(position),\n\t\t\tA3(romstad$elm_chess$Internal$Position$pseudoMovesTo, piece, square, position));\n\t});\nvar romstad$elm_chess$Internal$Notation$disambiguation = F3(\n\tfunction (piece, move, position) {\n\t\tvar moves = A3(\n\t\t\tromstad$elm_chess$Internal$Position$movesTo,\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$Move$to(move),\n\t\t\tposition);\n\t\treturn (elm$core$List$length(moves) <= 1) ? '' : (A2(\n\t\t\telm$core$List$all,\n\t\t\tromstad$elm_chess$Internal$Notation$differentFileFrom(move),\n\t\t\tmoves) ? romstad$elm_chess$Internal$SquareFile$toString(\n\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(move))) : (A2(\n\t\t\telm$core$List$all,\n\t\t\tromstad$elm_chess$Internal$Notation$differentRankFrom(move),\n\t\t\tmoves) ? romstad$elm_chess$Internal$SquareRank$toString(\n\t\t\tromstad$elm_chess$Internal$Square$rank(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(move))) : romstad$elm_chess$Internal$Square$toString(\n\t\t\tromstad$elm_chess$Internal$Move$from(move))));\n\t});\nvar elm$core$Char$toLower = _Char_toLower;\nvar romstad$elm_chess$Internal$Piece$toChar = function (piece) {\n\treturn _Utils_eq(\n\t\tromstad$elm_chess$Internal$Piece$color(piece),\n\t\tromstad$elm_chess$Internal$PieceColor$white) ? elm$core$Char$toUpper(\n\t\tromstad$elm_chess$Internal$PieceType$toChar(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece))) : elm$core$Char$toLower(\n\t\tromstad$elm_chess$Internal$PieceType$toChar(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece)));\n};\nvar romstad$elm_chess$Internal$Piece$toString = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$Piece$toChar, elm$core$String$fromChar);\nvar romstad$elm_chess$Internal$Notation$pieceMoveToSan = F2(\n\tfunction (move, position) {\n\t\tvar piece = A2(\n\t\t\tromstad$elm_chess$Internal$Position$pieceOn,\n\t\t\tromstad$elm_chess$Internal$Move$from(move),\n\t\t\tposition);\n\t\treturn _Utils_ap(\n\t\t\telm$core$String$toUpper(\n\t\t\t\tromstad$elm_chess$Internal$Piece$toString(piece)),\n\t\t\t_Utils_ap(\n\t\t\t\tA3(romstad$elm_chess$Internal$Notation$disambiguation, piece, move, position),\n\t\t\t\t_Utils_ap(\n\t\t\t\t\tA2(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Position$isEmpty,\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$to(move),\n\t\t\t\t\t\tposition) ? '' : 'x',\n\t\t\t\t\tromstad$elm_chess$Internal$Square$toString(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$to(move)))));\n\t});\nvar romstad$elm_chess$Internal$Position$isCheck = function (position) {\n\treturn A2(\n\t\tromstad$elm_chess$Internal$Position$isInCheck,\n\t\tromstad$elm_chess$Internal$Position$sideToMove(position),\n\t\tposition);\n};\nvar romstad$elm_chess$Internal$Position$moveGivesCheck = F2(\n\tfunction (move, position) {\n\t\treturn romstad$elm_chess$Internal$Position$isCheck(\n\t\t\tA2(romstad$elm_chess$Internal$Position$doMove, move, position));\n\t});\nvar romstad$elm_chess$Internal$Position$slidePseudoMovesFrom = F3(\n\tfunction (from, position, delta) {\n\t\tvar us = romstad$elm_chess$Internal$Position$sideToMove(position);\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\tvar slidePseudoMovesFromInternal = F2(\n\t\t\tfunction (to, result) {\n\t\t\t\tslidePseudoMovesFromInternal:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (A2(romstad$elm_chess$Internal$Position$isEmpty, to, position)) {\n\t\t\t\t\t\tvar $temp$to = A2(romstad$elm_chess$Internal$Square$add, to, delta),\n\t\t\t\t\t\t\t$temp$result = A2(\n\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$make, from, to),\n\t\t\t\t\t\t\tresult);\n\t\t\t\t\t\tto = $temp$to;\n\t\t\t\t\t\tresult = $temp$result;\n\t\t\t\t\t\tcontinue slidePseudoMovesFromInternal;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_Utils_eq(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Piece$color(\n\t\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, to, position)),\n\t\t\t\t\t\t\tthem)) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$make, from, to),\n\t\t\t\t\t\t\t\tresult);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(\n\t\t\tslidePseudoMovesFromInternal,\n\t\t\tA2(romstad$elm_chess$Internal$Square$add, from, delta),\n\t\t\t_List_Nil);\n\t});\nvar romstad$elm_chess$Internal$Position$bishopPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\treturn A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tA2(romstad$elm_chess$Internal$Position$slidePseudoMovesFrom, square, position),\n\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(romstad$elm_chess$Internal$Piece$whiteBishop));\n\t});\nvar romstad$elm_chess$Internal$Move$makeCastle = F2(\n\tfunction (from_, to_) {\n\t\treturn romstad$elm_chess$Internal$Move$Move(\n\t\t\t(romstad$elm_chess$Internal$Square$compress(to_) | (romstad$elm_chess$Internal$Square$compress(from_) << 6)) | (1 << 15));\n\t});\nvar romstad$elm_chess$Internal$CastleRights$canCastleKingside = F2(\n\tfunction (color, rights) {\n\t\treturn romstad$elm_chess$Internal$CastleRights$unwrap(rights) & (1 << (2 * romstad$elm_chess$Internal$PieceColor$unwrap(color)));\n\t});\nvar romstad$elm_chess$Internal$Position$canCastleKingside = F2(\n\tfunction (side, position) {\n\t\treturn A2(\n\t\t\tromstad$elm_chess$Internal$CastleRights$canCastleKingside,\n\t\t\tside,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(position).castleRights);\n\t});\nvar romstad$elm_chess$Internal$CastleRights$canCastleQueenside = F2(\n\tfunction (color, rights) {\n\t\treturn romstad$elm_chess$Internal$CastleRights$unwrap(rights) & (1 << ((2 * romstad$elm_chess$Internal$PieceColor$unwrap(color)) + 1));\n\t});\nvar romstad$elm_chess$Internal$Position$canCastleQueenside = F2(\n\tfunction (side, position) {\n\t\treturn A2(\n\t\t\tromstad$elm_chess$Internal$CastleRights$canCastleQueenside,\n\t\t\tside,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(position).castleRights);\n\t});\nvar romstad$elm_chess$Internal$Position$kingCastlePseudoMovesFrom = F4(\n\tfunction (us, them, square, position) {\n\t\treturn _Utils_ap(\n\t\t\tfunction () {\n\t\t\t\tif (A2(romstad$elm_chess$Internal$Position$canCastleKingside, us, position)) {\n\t\t\t\t\tvar f1 = A2(romstad$elm_chess$Internal$Square$add, square, romstad$elm_chess$Internal$SquareDelta$e);\n\t\t\t\t\tvar g1 = A2(romstad$elm_chess$Internal$Square$add, f1, romstad$elm_chess$Internal$SquareDelta$e);\n\t\t\t\t\treturn (A2(romstad$elm_chess$Internal$Position$isEmpty, f1, position) && (A2(romstad$elm_chess$Internal$Position$isEmpty, g1, position) && ((!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, square, position)) && ((!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, f1, position)) && (!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, g1, position)))))) ? _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$makeCastle, square, g1)\n\t\t\t\t\t\t]) : _List_Nil;\n\t\t\t\t} else {\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t}\n\t\t\t}(),\n\t\t\tfunction () {\n\t\t\t\tif (A2(romstad$elm_chess$Internal$Position$canCastleQueenside, us, position)) {\n\t\t\t\t\tvar d1 = A2(romstad$elm_chess$Internal$Square$add, square, romstad$elm_chess$Internal$SquareDelta$w);\n\t\t\t\t\tvar c1 = A2(romstad$elm_chess$Internal$Square$add, d1, romstad$elm_chess$Internal$SquareDelta$w);\n\t\t\t\t\tvar b1 = A2(romstad$elm_chess$Internal$Square$add, c1, romstad$elm_chess$Internal$SquareDelta$w);\n\t\t\t\t\treturn (A2(romstad$elm_chess$Internal$Position$isEmpty, d1, position) && (A2(romstad$elm_chess$Internal$Position$isEmpty, c1, position) && (A2(romstad$elm_chess$Internal$Position$isEmpty, b1, position) && ((!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, square, position)) && ((!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, d1, position)) && (!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, c1, position))))))) ? _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$makeCastle, square, c1)\n\t\t\t\t\t\t]) : _List_Nil;\n\t\t\t\t} else {\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t}\n\t\t\t}());\n\t});\nvar romstad$elm_chess$Internal$Position$kingPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\tvar us = romstad$elm_chess$Internal$Position$sideToMove(position);\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\treturn _Utils_ap(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (to) {\n\t\t\t\t\treturn A2(romstad$elm_chess$Internal$Move$make, square, to);\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\treturn A2(romstad$elm_chess$Internal$Position$isEmpty, s, position) || _Utils_eq(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Piece$color(\n\t\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, s, position)),\n\t\t\t\t\t\t\tthem);\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tromstad$elm_chess$Internal$Square$add(square),\n\t\t\t\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(romstad$elm_chess$Internal$Piece$whiteKing)))),\n\t\t\tA4(romstad$elm_chess$Internal$Position$kingCastlePseudoMovesFrom, us, them, square, position));\n\t});\nvar romstad$elm_chess$Internal$Position$knightPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(\n\t\t\tromstad$elm_chess$Internal$Position$sideToMove(position));\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (to) {\n\t\t\t\treturn A2(romstad$elm_chess$Internal$Move$make, square, to);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn A2(romstad$elm_chess$Internal$Position$isEmpty, s, position) || _Utils_eq(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Piece$color(\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, s, position)),\n\t\t\t\t\t\tthem);\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$add(square),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(romstad$elm_chess$Internal$Piece$whiteKnight))));\n\t});\nvar romstad$elm_chess$Internal$Position$colorOn = F2(\n\tfunction (square, pos) {\n\t\treturn romstad$elm_chess$Internal$Piece$color(\n\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, square, pos));\n\t});\nvar romstad$elm_chess$Internal$Position$pawnCaptures = F4(\n\tfunction (us, them, square, position) {\n\t\tvar ds = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? _List_fromArray(\n\t\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne]) : _List_fromArray(\n\t\t\t[romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]);\n\t\tvar toSqs = A2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (s) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$colorOn, s, position),\n\t\t\t\t\tthem);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tromstad$elm_chess$Internal$Square$add(square),\n\t\t\t\tds));\n\t\treturn A2(romstad$elm_chess$Internal$Square$isRankTwo, square, them) ? A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tfunction (to) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$makePromotion, square, to),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[romstad$elm_chess$Internal$PieceType$queen, romstad$elm_chess$Internal$PieceType$rook, romstad$elm_chess$Internal$PieceType$bishop, romstad$elm_chess$Internal$PieceType$knight]));\n\t\t\t},\n\t\t\ttoSqs) : A2(\n\t\t\telm$core$List$map,\n\t\t\tromstad$elm_chess$Internal$Move$make(square),\n\t\t\ttoSqs);\n\t});\nvar romstad$elm_chess$Internal$Position$pawnEpCaptures = F4(\n\tfunction (us, them, square, position) {\n\t\tvar _n0 = romstad$elm_chess$Internal$Position$epSquare(position);\n\t\tif (_n0.$ === 'Nothing') {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar epSquare_ = _n0.a;\n\t\t\tvar ds = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? _List_fromArray(\n\t\t\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne]) : _List_fromArray(\n\t\t\t\t[romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]);\n\t\t\treturn A2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tromstad$elm_chess$Internal$Move$makeEp(square),\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\telm$core$Basics$eq(epSquare_),\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tromstad$elm_chess$Internal$Square$add(square),\n\t\t\t\t\t\tds)));\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Position$pawnPushes = F4(\n\tfunction (us, them, square, position) {\n\t\tvar push = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? romstad$elm_chess$Internal$SquareDelta$n : romstad$elm_chess$Internal$SquareDelta$s;\n\t\tvar doublePush = A2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, push);\n\t\treturn (!A2(\n\t\t\tromstad$elm_chess$Internal$Position$isEmpty,\n\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, push),\n\t\t\tposition)) ? _List_Nil : (A2(romstad$elm_chess$Internal$Square$isRankTwo, square, them) ? A2(\n\t\t\telm$core$List$map,\n\t\t\tA2(\n\t\t\t\tromstad$elm_chess$Internal$Move$makePromotion,\n\t\t\t\tsquare,\n\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, push)),\n\t\t\t_List_fromArray(\n\t\t\t\t[romstad$elm_chess$Internal$PieceType$queen, romstad$elm_chess$Internal$PieceType$rook, romstad$elm_chess$Internal$PieceType$bishop, romstad$elm_chess$Internal$PieceType$knight])) : (A2(romstad$elm_chess$Internal$Square$isRankTwo, square, us) ? _Utils_ap(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\tromstad$elm_chess$Internal$Move$make,\n\t\t\t\t\tsquare,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, push))\n\t\t\t\t]),\n\t\t\t(!A2(\n\t\t\t\tromstad$elm_chess$Internal$Position$isEmpty,\n\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, doublePush),\n\t\t\t\tposition)) ? _List_Nil : _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\tromstad$elm_chess$Internal$Move$make,\n\t\t\t\t\tsquare,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, doublePush))\n\t\t\t\t])) : _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\tromstad$elm_chess$Internal$Move$make,\n\t\t\t\tsquare,\n\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, push))\n\t\t\t])));\n\t});\nvar romstad$elm_chess$Internal$Position$pawnPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\tvar us = romstad$elm_chess$Internal$Position$sideToMove(position);\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\treturn _Utils_ap(\n\t\t\tA4(romstad$elm_chess$Internal$Position$pawnPushes, us, them, square, position),\n\t\t\t_Utils_ap(\n\t\t\t\tA4(romstad$elm_chess$Internal$Position$pawnCaptures, us, them, square, position),\n\t\t\t\tA4(romstad$elm_chess$Internal$Position$pawnEpCaptures, us, them, square, position)));\n\t});\nvar romstad$elm_chess$Internal$Position$queenPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\treturn A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tA2(romstad$elm_chess$Internal$Position$slidePseudoMovesFrom, square, position),\n\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(romstad$elm_chess$Internal$Piece$whiteQueen));\n\t});\nvar romstad$elm_chess$Internal$Position$rookPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\treturn A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tA2(romstad$elm_chess$Internal$Position$slidePseudoMovesFrom, square, position),\n\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(romstad$elm_chess$Internal$Piece$whiteRook));\n\t});\nvar romstad$elm_chess$Internal$Position$pseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\tvar piece = A2(romstad$elm_chess$Internal$Position$pieceOn, square, position);\n\t\treturn (!_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$color(piece),\n\t\t\tromstad$elm_chess$Internal$Position$sideToMove(position))) ? _List_Nil : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$pawn) ? A2(romstad$elm_chess$Internal$Position$pawnPseudoMovesFrom, square, position) : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$knight) ? A2(romstad$elm_chess$Internal$Position$knightPseudoMovesFrom, square, position) : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$bishop) ? A2(romstad$elm_chess$Internal$Position$bishopPseudoMovesFrom, square, position) : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$rook) ? A2(romstad$elm_chess$Internal$Position$rookPseudoMovesFrom, square, position) : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$queen) ? A2(romstad$elm_chess$Internal$Position$queenPseudoMovesFrom, square, position) : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$king) ? A2(romstad$elm_chess$Internal$Position$kingPseudoMovesFrom, square, position) : _List_Nil))))));\n\t});\nvar romstad$elm_chess$Internal$Position$movesFrom = F2(\n\tfunction (square, position) {\n\t\treturn A2(\n\t\t\telm$core$List$filter,\n\t\t\tromstad$elm_chess$Internal$Position$pseudoMoveIsLegal(position),\n\t\t\tA2(romstad$elm_chess$Internal$Position$pseudoMovesFrom, square, position));\n\t});\nvar romstad$elm_chess$Internal$Position$moves = function (position) {\n\treturn A2(\n\t\telm$core$List$concatMap,\n\t\tfunction (s) {\n\t\t\treturn A2(romstad$elm_chess$Internal$Position$movesFrom, s, position);\n\t\t},\n\t\tromstad$elm_chess$Internal$Square$all);\n};\nvar romstad$elm_chess$Internal$Position$isCheckmate = function (position) {\n\treturn romstad$elm_chess$Internal$Position$isCheck(position) && (!elm$core$List$length(\n\t\tromstad$elm_chess$Internal$Position$moves(position)));\n};\nvar romstad$elm_chess$Internal$Position$moveGivesCheckmate = F2(\n\tfunction (move, position) {\n\t\treturn romstad$elm_chess$Internal$Position$isCheckmate(\n\t\t\tA2(romstad$elm_chess$Internal$Position$doMove, move, position));\n\t});\nvar romstad$elm_chess$Internal$Notation$toSan = F2(\n\tfunction (move, position) {\n\t\treturn _Utils_ap(\n\t\t\tfunction () {\n\t\t\t\tif (romstad$elm_chess$Internal$Move$isKingsideCastle(move)) {\n\t\t\t\t\treturn 'O-O';\n\t\t\t\t} else {\n\t\t\t\t\tif (romstad$elm_chess$Internal$Move$isQueensideCastle(move)) {\n\t\t\t\t\t\treturn 'O-O-O';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar piece = A2(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Position$pieceOn,\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move),\n\t\t\t\t\t\t\tposition);\n\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$PieceType$pawn) ? A2(romstad$elm_chess$Internal$Notation$pawnMoveToSan, move, position) : A2(romstad$elm_chess$Internal$Notation$pieceMoveToSan, move, position);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}(),\n\t\t\tA2(romstad$elm_chess$Internal$Position$moveGivesCheckmate, move, position) ? '#' : (A2(romstad$elm_chess$Internal$Position$moveGivesCheck, move, position) ? '+' : ''));\n\t});\nvar romstad$elm_chess$Notation$toSan = romstad$elm_chess$Internal$Notation$toSan;\nvar author$project$Main$doMove = F2(\n\tfunction (move, model) {\n\t\tvar _n0 = function () {\n\t\t\tvar _n1 = model.gameState;\n\t\t\tif (_n1.$ === 'MyTurn') {\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(romstad$elm_chess$Game$addMove, move, model.game),\n\t\t\t\t\tauthor$project$Main$OtherTurn,\n\t\t\t\t\tauthor$project$Main$send(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t'type',\n\t\t\t\t\t\t\t\telm$json$Json$Encode$string('GotMove')),\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t'move',\n\t\t\t\t\t\t\t\telm$json$Json$Encode$string(\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\tromstad$elm_chess$Notation$toSan,\n\t\t\t\t\t\t\t\t\t\tmove,\n\t\t\t\t\t\t\t\t\t\tromstad$elm_chess$Game$position(model.game))))\n\t\t\t\t\t\t\t])));\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple3(model.game, model.gameState, elm$core$Platform$Cmd$none);\n\t\t\t}\n\t\t}();\n\t\tvar newGame = _n0.a;\n\t\tvar newState = _n0.b;\n\t\tvar cmd = _n0.c;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{candidateMoves: _List_Nil, game: newGame, gameState: newState, selectedSquare: elm$core$Maybe$Nothing}),\n\t\t\tcmd);\n\t});\nvar romstad$elm_chess$Move$to = romstad$elm_chess$Internal$Move$to;\nvar romstad$elm_chess$Position$movesFrom = romstad$elm_chess$Internal$Position$movesFrom;\nvar author$project$Main$squarePressed = F2(\n\tfunction (s, model) {\n\t\tvar moves = A2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (m) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Move$to(m),\n\t\t\t\t\ts);\n\t\t\t},\n\t\t\tmodel.candidateMoves);\n\t\tvar _n0 = elm$core$List$head(moves);\n\t\tif (_n0.$ === 'Just') {\n\t\t\tvar m = _n0.a;\n\t\t\treturn A2(author$project$Main$doMove, m, model);\n\t\t} else {\n\t\t\tvar newMoves = A2(\n\t\t\t\tromstad$elm_chess$Position$movesFrom,\n\t\t\t\ts,\n\t\t\t\tromstad$elm_chess$Game$position(model.game));\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{\n\t\t\t\t\t\tcandidateMoves: newMoves,\n\t\t\t\t\t\tselectedSquare: (!elm$core$List$length(newMoves)) ? elm$core$Maybe$Nothing : elm$core$Maybe$Just(s)\n\t\t\t\t\t}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar elm$json$Json$Decode$decodeValue = _Json_run;\nvar elm$core$String$filter = _String_filter;\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar romstad$elm_chess$Internal$Notation$isImportantCharacter = function (ch) {\n\treturn (!_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('x'))) && ((!_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('='))) && ((!_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('+'))) && (!_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('#')))));\n};\nvar romstad$elm_chess$Internal$Notation$isPieceCharacter = function (ch) {\n\treturn (ch === 'N') || ((ch === 'B') || ((ch === 'R') || ((ch === 'Q') || (ch === 'K'))));\n};\nvar romstad$elm_chess$Internal$Notation$kingsideCastlingFromSan = function (position) {\n\treturn elm$core$List$head(\n\t\tA2(\n\t\t\telm$core$List$filter,\n\t\t\tromstad$elm_chess$Internal$Move$isKingsideCastle,\n\t\t\tromstad$elm_chess$Internal$Position$moves(position)));\n};\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (_n0.$ === 'Just') {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$String$dropRight = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(elm$core$String$slice, 0, -n, string);\n\t});\nvar elm$core$String$right = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(\n\t\t\telm$core$String$slice,\n\t\t\t-n,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar romstad$elm_chess$Internal$Notation$pawnMatch = F3(\n\tfunction (promotion, fromFile, move) {\n\t\tif (promotion.$ === 'Nothing') {\n\t\t\tif (fromFile.$ === 'Nothing') {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tvar file = fromFile.a;\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move)),\n\t\t\t\t\tfile);\n\t\t\t}\n\t\t} else {\n\t\t\tvar promotion_ = promotion.a;\n\t\t\tif (fromFile.$ === 'Nothing') {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Move$promotion(move),\n\t\t\t\t\telm$core$Maybe$Just(promotion_));\n\t\t\t} else {\n\t\t\t\tvar file = fromFile.a;\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Move$promotion(move),\n\t\t\t\t\telm$core$Maybe$Just(promotion_)) && _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move)),\n\t\t\t\t\tfile);\n\t\t\t}\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Notation$findPawnMove = F4(\n\tfunction (to, promotion, fromFile, position) {\n\t\tvar candidates = A2(\n\t\t\telm$core$List$filter,\n\t\t\tA2(romstad$elm_chess$Internal$Notation$pawnMatch, promotion, fromFile),\n\t\t\tA3(romstad$elm_chess$Internal$Position$movesTo, romstad$elm_chess$Internal$PieceType$pawn, to, position));\n\t\treturn (elm$core$List$length(candidates) === 1) ? elm$core$List$head(candidates) : elm$core$Maybe$Nothing;\n\t});\nvar romstad$elm_chess$Internal$PieceType$fromString = function (string) {\n\treturn A2(\n\t\telm$core$Maybe$andThen,\n\t\tromstad$elm_chess$Internal$PieceType$fromChar,\n\t\telm$core$List$head(\n\t\t\telm$core$String$toList(string)));\n};\nvar romstad$elm_chess$Internal$Notation$pawnMoveFromSan = F2(\n\tfunction (string, position) {\n\t\tvar promotion = romstad$elm_chess$Internal$PieceType$fromString(\n\t\t\tA2(elm$core$String$right, 1, string));\n\t\tvar str = _Utils_eq(promotion, elm$core$Maybe$Nothing) ? string : A2(elm$core$String$dropRight, 1, string);\n\t\tvar to = romstad$elm_chess$Internal$Square$fromString(\n\t\t\tA2(elm$core$String$right, 2, str));\n\t\tvar file = elm$core$List$head(\n\t\t\tA2(\n\t\t\t\telm$core$List$filterMap,\n\t\t\t\tromstad$elm_chess$Internal$SquareFile$fromChar,\n\t\t\t\telm$core$String$toList(\n\t\t\t\t\tA2(elm$core$String$dropRight, 2, str))));\n\t\tif (to.$ === 'Nothing') {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar to_ = to.a;\n\t\t\treturn A4(romstad$elm_chess$Internal$Notation$findPawnMove, to_, promotion, file, position);\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Notation$match = F5(\n\tfunction (kind, to, fromFile, fromRank, move) {\n\t\tif (fromFile.$ === 'Nothing') {\n\t\t\tif (fromRank.$ === 'Nothing') {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tvar rank = fromRank.a;\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\trank,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$rank(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move)));\n\t\t\t}\n\t\t} else {\n\t\t\tvar file = fromFile.a;\n\t\t\tif (fromRank.$ === 'Nothing') {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tfile,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move)));\n\t\t\t} else {\n\t\t\t\tvar rank = fromRank.a;\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tfile,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move))) && _Utils_eq(\n\t\t\t\t\trank,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$rank(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$to(move)));\n\t\t\t}\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Notation$findPieceMove = F4(\n\tfunction (kind, to, disambig, position) {\n\t\tvar dis = elm$core$String$toList(disambig);\n\t\tvar files = A2(elm$core$List$filterMap, romstad$elm_chess$Internal$SquareFile$fromChar, dis);\n\t\tvar ranks = A2(elm$core$List$filterMap, romstad$elm_chess$Internal$SquareRank$fromChar, dis);\n\t\tif ((elm$core$List$length(files) > 1) || (elm$core$List$length(ranks) > 1)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar rank = elm$core$List$head(ranks);\n\t\t\tvar file = elm$core$List$head(files);\n\t\t\tvar candidates = A2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tA4(romstad$elm_chess$Internal$Notation$match, kind, to, file, rank),\n\t\t\t\tA3(romstad$elm_chess$Internal$Position$movesTo, kind, to, position));\n\t\t\treturn (elm$core$List$length(candidates) === 1) ? elm$core$List$head(candidates) : elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Notation$pieceMoveFromSan = F2(\n\tfunction (str, position) {\n\t\tvar to = romstad$elm_chess$Internal$Square$fromString(\n\t\t\tA2(elm$core$String$right, 2, str));\n\t\tvar kind = romstad$elm_chess$Internal$PieceType$fromString(str);\n\t\tvar disambig = A2(\n\t\t\telm$core$String$dropRight,\n\t\t\t2,\n\t\t\tA2(elm$core$String$dropLeft, 1, str));\n\t\tif (kind.$ === 'Nothing') {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar kind_ = kind.a;\n\t\t\tif (to.$ === 'Nothing') {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar to_ = to.a;\n\t\t\t\treturn A4(romstad$elm_chess$Internal$Notation$findPieceMove, kind_, to_, disambig, position);\n\t\t\t}\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Notation$queensideCastlingFromSan = function (position) {\n\treturn elm$core$List$head(\n\t\tA2(\n\t\t\telm$core$List$filter,\n\t\t\tromstad$elm_chess$Internal$Move$isQueensideCastle,\n\t\t\tromstad$elm_chess$Internal$Position$moves(position)));\n};\nvar romstad$elm_chess$Internal$Notation$fromSan = F2(\n\tfunction (string, position) {\n\t\tvar str = A2(elm$core$String$filter, romstad$elm_chess$Internal$Notation$isImportantCharacter, string);\n\t\treturn (str === 'O-O') ? romstad$elm_chess$Internal$Notation$kingsideCastlingFromSan(position) : ((str === 'O-O-O') ? romstad$elm_chess$Internal$Notation$queensideCastlingFromSan(position) : (romstad$elm_chess$Internal$Notation$isPieceCharacter(\n\t\t\tA2(elm$core$String$left, 1, str)) ? A2(romstad$elm_chess$Internal$Notation$pieceMoveFromSan, str, position) : A2(romstad$elm_chess$Internal$Notation$pawnMoveFromSan, str, position)));\n\t});\nvar romstad$elm_chess$Notation$fromSan = romstad$elm_chess$Internal$Notation$fromSan;\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tupdate:\n\t\twhile (true) {\n\t\t\tswitch (msg.$) {\n\t\t\t\tcase 'JsPort':\n\t\t\t\t\tvar val = msg.a;\n\t\t\t\t\tvar _n1 = A2(elm$json$Json$Decode$decodeValue, author$project$Main$portDecoder, val);\n\t\t\t\t\tif (_n1.$ === 'Ok') {\n\t\t\t\t\t\tvar msg_ = _n1.a;\n\t\t\t\t\t\tvar $temp$msg = msg_,\n\t\t\t\t\t\t\t$temp$model = model;\n\t\t\t\t\t\tmsg = $temp$msg;\n\t\t\t\t\t\tmodel = $temp$model;\n\t\t\t\t\t\tcontinue update;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar err = _n1.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\terror: elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\telm$json$Json$Decode$errorToString(err))\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\t\t}\n\t\t\t\tcase 'SetOtherOffer':\n\t\t\t\t\tvar s = msg.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{otherOffer: s}),\n\t\t\t\t\t\tauthor$project$Main$output(\n\t\t\t\t\t\t\telm$json$Json$Encode$object(\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t'type',\n\t\t\t\t\t\t\t\t\t\telm$json$Json$Encode$string('Connect')),\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t'otherOffer',\n\t\t\t\t\t\t\t\t\t\telm$json$Json$Encode$string(s))\n\t\t\t\t\t\t\t\t\t]))));\n\t\t\t\tcase 'SquarePressed':\n\t\t\t\t\tvar sq = msg.a;\n\t\t\t\t\treturn A2(author$project$Main$squarePressed, sq, model);\n\t\t\t\tcase 'GotOffer':\n\t\t\t\t\tvar offer = msg.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmyOffer: elm$core$Maybe$Just(offer)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\tcase 'GotAnswer':\n\t\t\t\t\tvar answer = msg.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmyAnswer: elm$core$Maybe$Just(answer)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\tcase 'Ready':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{gameState: author$project$Main$MyTurn}),\n\t\t\t\t\t\tauthor$project$Main$send(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t'type',\n\t\t\t\t\t\t\t\t\telm$json$Json$Encode$string('Ready2'))\n\t\t\t\t\t\t\t\t])));\n\t\t\t\tcase 'Ready2':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{gameState: author$project$Main$OtherTurn, isBlack: true}),\n\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\tcase 'GotMove':\n\t\t\t\t\tvar m = msg.a;\n\t\t\t\t\tvar _n2 = A2(\n\t\t\t\t\t\tromstad$elm_chess$Notation$fromSan,\n\t\t\t\t\t\tm,\n\t\t\t\t\t\tromstad$elm_chess$Game$position(model.game));\n\t\t\t\t\tif (_n2.$ === 'Just') {\n\t\t\t\t\t\tvar move = _n2.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcandidateMoves: _List_Nil,\n\t\t\t\t\t\t\t\t\tgame: A2(romstad$elm_chess$Game$addMove, move, model.game),\n\t\t\t\t\t\t\t\t\tgameState: author$project$Main$MyTurn,\n\t\t\t\t\t\t\t\t\tselectedSquare: elm$core$Maybe$Nothing\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t\t\t\t}\n\t\t\t\tcase 'Rematch':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tauthor$project$Main$rematch(model),\n\t\t\t\t\t\tauthor$project$Main$send(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t'type',\n\t\t\t\t\t\t\t\t\telm$json$Json$Encode$string('Rematch'))\n\t\t\t\t\t\t\t\t])));\n\t\t\t\tdefault:\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tauthor$project$Main$rematch(model),\n\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t}\n\t\t}\n\t});\nvar author$project$Main$Rematch = {$: 'Rematch'};\nvar author$project$Main$SquarePressed = function (a) {\n\treturn {$: 'SquarePressed', a: a};\n};\nvar elm$core$String$fromFloat = _String_fromNumber;\nvar author$project$Main$px = function (f) {\n\treturn elm$core$String$fromFloat(f) + 'px';\n};\nvar elm$core$String$toLower = _String_toLower;\nvar romstad$elm_chess$Piece$color = romstad$elm_chess$Internal$Piece$color;\nvar romstad$elm_chess$Piece$kind = romstad$elm_chess$Internal$Piece$kind;\nvar romstad$elm_chess$Internal$PieceColor$toChar = function (color) {\n\treturn _Utils_eq(color, romstad$elm_chess$Internal$PieceColor$white) ? _Utils_chr('w') : (_Utils_eq(color, romstad$elm_chess$Internal$PieceColor$black) ? _Utils_chr('b') : _Utils_chr('-'));\n};\nvar romstad$elm_chess$Internal$PieceColor$toString = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$PieceColor$toChar, elm$core$String$fromChar);\nvar romstad$elm_chess$PieceColor$toString = romstad$elm_chess$Internal$PieceColor$toString;\nvar romstad$elm_chess$PieceType$toString = romstad$elm_chess$Internal$PieceType$toString;\nvar author$project$Main$pieceImgUrl = function (piece) {\n\treturn 'http://res.cloudinary.com/ds1kquy7j/image/upload/' + (romstad$elm_chess$PieceColor$toString(\n\t\tromstad$elm_chess$Piece$color(piece)) + (elm$core$String$toLower(\n\t\tromstad$elm_chess$PieceType$toString(\n\t\t\tromstad$elm_chess$Piece$kind(piece))) + '.png'));\n};\nvar author$project$Main$url = function (u) {\n\treturn 'url(' + (u + ')');\n};\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 'Normal':\n\t\t\treturn 0;\n\t\tcase 'MayStopPropagation':\n\t\t\treturn 1;\n\t\tcase 'MayPreventDefault':\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar elm$html$Html$Attributes$style = elm$virtual_dom$VirtualDom$style;\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 'Normal', a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar author$project$Main$square = F6(\n\tfunction (isSelected, isPossibleMove, _n0, piece, sqSize, msg) {\n\t\tvar col = _n0.a;\n\t\tvar row = _n0.b;\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Events$onClick(msg),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t'backgroundColor',\n\t\t\t\t\tisSelected ? 'rgb(133, 57, 146)' : ((!A2(elm$core$Basics$modBy, 2, col + row)) ? 'rgb(200, 200, 200)' : 'rgb(140, 140, 140)')),\n\t\t\t\t\tisPossibleMove ? A2(elm$html$Html$Attributes$style, 'filter', 'sepia(0.6)') : A2(elm$html$Html$Attributes$style, '', ''),\n\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'position', 'absolute'),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t'top',\n\t\t\t\t\tauthor$project$Main$px(row * sqSize)),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t'left',\n\t\t\t\t\tauthor$project$Main$px(col * sqSize)),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t'width',\n\t\t\t\t\tauthor$project$Main$px(sqSize)),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t'height',\n\t\t\t\t\tauthor$project$Main$px(sqSize))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tfunction () {\n\t\t\t\t\tif (piece.$ === 'Nothing') {\n\t\t\t\t\t\treturn elm$html$Html$text('');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar piece_ = piece.a;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\t\tauthor$project$Main$px(sqSize)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\t\t\tauthor$project$Main$px(sqSize)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'backgroundImage',\n\t\t\t\t\t\t\t\t\tauthor$project$Main$url(\n\t\t\t\t\t\t\t\t\t\tauthor$project$Main$pieceImgUrl(piece_))),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'backgroundSize',\n\t\t\t\t\t\t\t\t\tauthor$project$Main$px(sqSize) + (' ' + author$project$Main$px(sqSize)))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_Nil);\n\t\t\t\t\t}\n\t\t\t\t}()\n\t\t\t\t]));\n\t});\nvar romstad$elm_chess$Square$file = romstad$elm_chess$Internal$Square$file;\nvar romstad$elm_chess$Square$rank = romstad$elm_chess$Internal$Square$rank;\nvar romstad$elm_chess$Internal$SquareFile$toIndex = function (file) {\n\treturn romstad$elm_chess$Internal$SquareFile$unwrap(file) - romstad$elm_chess$Internal$BoardDimensions$fileMin;\n};\nvar romstad$elm_chess$SquareFile$toIndex = romstad$elm_chess$Internal$SquareFile$toIndex;\nvar romstad$elm_chess$Internal$SquareRank$toIndex = function (rank) {\n\treturn romstad$elm_chess$Internal$SquareRank$unwrap(rank) - romstad$elm_chess$Internal$BoardDimensions$rankMin;\n};\nvar romstad$elm_chess$SquareRank$toIndex = romstad$elm_chess$Internal$SquareRank$toIndex;\nvar author$project$Main$squareToCoordinates = F2(\n\tfunction (square_, isRotated) {\n\t\treturn _Utils_Tuple2(\n\t\t\tisRotated ? (7 - romstad$elm_chess$SquareFile$toIndex(\n\t\t\t\tromstad$elm_chess$Square$file(square_))) : romstad$elm_chess$SquareFile$toIndex(\n\t\t\t\tromstad$elm_chess$Square$file(square_)),\n\t\t\tisRotated ? romstad$elm_chess$SquareRank$toIndex(\n\t\t\t\tromstad$elm_chess$Square$rank(square_)) : (7 - romstad$elm_chess$SquareRank$toIndex(\n\t\t\t\tromstad$elm_chess$Square$rank(square_))));\n\t});\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: 'RBEmpty_elm_builtin'};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$core$Set$Set_elm_builtin = function (a) {\n\treturn {$: 'Set_elm_builtin', a: a};\n};\nvar elm$core$Set$empty = elm$core$Set$Set_elm_builtin(elm$core$Dict$empty);\nvar elm$core$Dict$Black = {$: 'Black'};\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: 'RBNode_elm_builtin', a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$Red = {$: 'Red'};\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Red')) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\telm$core$Dict$Red,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, elm$core$Dict$Black, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, elm$core$Dict$Black, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, elm$core$Dict$Red, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) && (left.d.$ === 'RBNode_elm_builtin')) && (left.d.a.$ === 'Red')) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\telm$core$Dict$Red,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, elm$core$Dict$Black, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, elm$core$Dict$Black, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, elm$core$Dict$Red, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1.$) {\n\t\t\t\tcase 'LT':\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 'EQ':\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === 'RBNode_elm_builtin') && (_n0.a.$ === 'Red')) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, elm$core$Dict$Black, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Set$insert = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0.a;\n\t\treturn elm$core$Set$Set_elm_builtin(\n\t\t\tA3(elm$core$Dict$insert, key, _Utils_Tuple0, dict));\n\t});\nvar elm$core$Set$fromList = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$Set$insert, elm$core$Set$empty, list);\n};\nvar elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _n1 = A2(elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_n1.$) {\n\t\t\t\t\tcase 'LT':\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 'EQ':\n\t\t\t\t\t\treturn elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$member = F2(\n\tfunction (key, dict) {\n\t\tvar _n0 = A2(elm$core$Dict$get, key, dict);\n\t\tif (_n0.$ === 'Just') {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar elm$core$Set$member = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0.a;\n\t\treturn A2(elm$core$Dict$member, key, dict);\n\t});\nvar elm$html$Html$b = _VirtualDom_node('b');\nvar elm$html$Html$button = _VirtualDom_node('button');\nvar romstad$elm_chess$PieceColor$black = romstad$elm_chess$Internal$PieceColor$black;\nvar romstad$elm_chess$Position$isCheckmate = romstad$elm_chess$Internal$Position$isCheckmate;\nvar romstad$elm_chess$Position$pieceOn = F2(\n\tfunction (square, pos) {\n\t\tvar p = A2(romstad$elm_chess$Internal$Position$pieceOn, square, pos);\n\t\treturn (_Utils_eq(p, romstad$elm_chess$Internal$Piece$empty) || _Utils_eq(p, romstad$elm_chess$Internal$Piece$outside)) ? elm$core$Maybe$Nothing : elm$core$Maybe$Just(p);\n\t});\nvar romstad$elm_chess$Position$sideToMove = romstad$elm_chess$Internal$Position$sideToMove;\nvar romstad$elm_chess$Square$all = romstad$elm_chess$Internal$Square$all;\nvar romstad$elm_chess$Square$toInt = romstad$elm_chess$Internal$Square$compress;\nvar author$project$Main$board = F5(\n\tfunction (possibleMoves, selectedSquare, isBlack, position, size) {\n\t\tvar possibleSquares = elm$core$Set$fromList(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tA2(elm$core$Basics$composeR, romstad$elm_chess$Move$to, romstad$elm_chess$Square$toInt),\n\t\t\t\tpossibleMoves));\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\tauthor$project$Main$px(size)),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\tauthor$project$Main$px(size)),\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'position', 'relative'),\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'marginLeft', 'auto'),\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'marginRight', 'auto')\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\t\treturn A6(\n\t\t\t\t\t\t\t\tauthor$project$Main$square,\n\t\t\t\t\t\t\t\t_Utils_eq(\n\t\t\t\t\t\t\t\t\telm$core$Maybe$Just(s),\n\t\t\t\t\t\t\t\t\tselectedSquare),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$Set$member,\n\t\t\t\t\t\t\t\t\tromstad$elm_chess$Square$toInt(s),\n\t\t\t\t\t\t\t\t\tpossibleSquares),\n\t\t\t\t\t\t\t\tA2(author$project$Main$squareToCoordinates, s, isBlack),\n\t\t\t\t\t\t\t\tA2(romstad$elm_chess$Position$pieceOn, s, position),\n\t\t\t\t\t\t\t\tsize / 8,\n\t\t\t\t\t\t\t\tauthor$project$Main$SquarePressed(s));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tromstad$elm_chess$Square$all)),\n\t\t\t\t\tfunction () {\n\t\t\t\t\tif (romstad$elm_chess$Position$isCheckmate(position)) {\n\t\t\t\t\t\tvar txt = (_Utils_eq(\n\t\t\t\t\t\t\tromstad$elm_chess$Position$sideToMove(position),\n\t\t\t\t\t\t\tromstad$elm_chess$PieceColor$black) && isBlack) ? 'You lose!' : 'You win!';\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$b,\n\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Checkmate! ' + txt)\n\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$Rematch)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Rematch')\n\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elm$html$Html$text('');\n\t\t\t\t\t}\n\t\t\t\t}()\n\t\t\t\t]));\n\t});\nvar author$project$Main$SetOtherOffer = function (a) {\n\treturn {$: 'SetOtherOffer', a: a};\n};\nvar elm$html$Html$input = _VirtualDom_node('input');\nvar elm$json$Json$Encode$bool = _Json_wrap;\nvar elm$html$Html$Attributes$boolProperty = F2(\n\tfunction (key, bool) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$bool(bool));\n\t});\nvar elm$html$Html$Attributes$readonly = elm$html$Html$Attributes$boolProperty('readOnly');\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$value = elm$html$Html$Attributes$stringProperty('value');\nvar elm$html$Html$Events$alwaysStop = function (x) {\n\treturn _Utils_Tuple2(x, true);\n};\nvar elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {\n\treturn {$: 'MayStopPropagation', a: a};\n};\nvar elm$html$Html$Events$stopPropagationOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$MayStopPropagation(decoder));\n\t});\nvar elm$json$Json$Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3(elm$core$List$foldr, elm$json$Json$Decode$field, decoder, fields);\n\t});\nvar elm$html$Html$Events$targetValue = A2(\n\telm$json$Json$Decode$at,\n\t_List_fromArray(\n\t\t['target', 'value']),\n\telm$json$Json$Decode$string);\nvar elm$html$Html$Events$onInput = function (tagger) {\n\treturn A2(\n\t\telm$html$Html$Events$stopPropagationOn,\n\t\t'input',\n\t\tA2(\n\t\t\telm$json$Json$Decode$map,\n\t\t\telm$html$Html$Events$alwaysStop,\n\t\t\tA2(elm$json$Json$Decode$map, tagger, elm$html$Html$Events$targetValue)));\n};\nvar author$project$Main$connectUi = function (model) {\n\tif (_Utils_eq(model.gameState, author$project$Main$Init)) {\n\t\tvar _n0 = function () {\n\t\t\tvar _n1 = model.myAnswer;\n\t\t\tif (_n1.$ === 'Just') {\n\t\t\t\tvar a = _n1.a;\n\t\t\t\treturn _Utils_Tuple2('Answer', a);\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t'Offer',\n\t\t\t\t\tA2(elm$core$Maybe$withDefault, '', model.myOffer));\n\t\t\t}\n\t\t}();\n\t\tvar kind = _n0.a;\n\t\tvar txt = _n0.b;\n\t\tvar offerOrAnswer = A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text(kind),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$input,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$Attributes$readonly(true),\n\t\t\t\t\t\t\telm$html$Html$Attributes$value(txt)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil)\n\t\t\t\t]));\n\t\tvar _n2 = (kind === 'Offer') ? _Utils_Tuple2(\n\t\t\tofferOrAnswer,\n\t\t\telm$html$Html$text('')) : _Utils_Tuple2(\n\t\t\telm$html$Html$text(''),\n\t\t\tofferOrAnswer);\n\t\tvar offer = _n2.a;\n\t\tvar answer = _n2.b;\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\toffer,\n\t\t\t\t\telm$html$Html$text('Paste other offer / answer here'),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$input,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$Attributes$value(model.otherOffer),\n\t\t\t\t\t\t\telm$html$Html$Events$onInput(author$project$Main$SetOtherOffer)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil),\n\t\t\t\t\tanswer\n\t\t\t\t]));\n\t} else {\n\t\treturn elm$html$Html$text('');\n\t}\n};\nvar author$project$Main$view = function (model) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tauthor$project$Main$connectUi(model),\n\t\t\t\tfunction () {\n\t\t\t\tvar _n0 = model.error;\n\t\t\t\tif (_n0.$ === 'Nothing') {\n\t\t\t\t\treturn elm$html$Html$text('');\n\t\t\t\t} else {\n\t\t\t\t\tvar e = _n0.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$b,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$text(e)\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]));\n\t\t\t\t}\n\t\t\t}(),\n\t\t\t\tfunction () {\n\t\t\t\tvar _n1 = model.gameState;\n\t\t\t\tswitch (_n1.$) {\n\t\t\t\t\tcase 'Init':\n\t\t\t\t\t\treturn elm$html$Html$text('');\n\t\t\t\t\tcase 'MyTurn':\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA5(\n\t\t\t\t\t\t\t\t\tauthor$project$Main$board,\n\t\t\t\t\t\t\t\t\tmodel.candidateMoves,\n\t\t\t\t\t\t\t\t\tmodel.selectedSquare,\n\t\t\t\t\t\t\t\t\tmodel.isBlack,\n\t\t\t\t\t\t\t\t\tromstad$elm_chess$Game$position(model.game),\n\t\t\t\t\t\t\t\t\t400.0),\n\t\t\t\t\t\t\t\t\telm$html$Html$text('Your turn, make a move')\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA5(\n\t\t\t\t\t\t\t\t\tauthor$project$Main$board,\n\t\t\t\t\t\t\t\t\tmodel.candidateMoves,\n\t\t\t\t\t\t\t\t\tmodel.selectedSquare,\n\t\t\t\t\t\t\t\t\tmodel.isBlack,\n\t\t\t\t\t\t\t\t\tromstad$elm_chess$Game$position(model.game),\n\t\t\t\t\t\t\t\t\t400.0),\n\t\t\t\t\t\t\t\t\telm$html$Html$text('Wait for other player to make a move')\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t}\n\t\t\t}()\n\t\t\t]));\n};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 'External', a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 'Internal', a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = function (a) {\n\treturn {$: 'NotFound', a: a};\n};\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0.a;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = function (a) {\n\treturn {$: 'Perform', a: a};\n};\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$core$Task$init = elm$core$Task$succeed(_Utils_Tuple0);\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0.a;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(_Utils_Tuple0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0.a;\n\t\treturn elm$core$Task$Perform(\n\t\t\tA2(elm$core$Task$map, tagger, task));\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\telm$core$Task$Perform(\n\t\t\t\tA2(elm$core$Task$map, toMessage, task)));\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = {$: 'Http'};\nvar elm$url$Url$Https = {$: 'Https'};\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {fragment: fragment, host: host, path: path, port_: port_, protocol: protocol, query: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 'Nothing') {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\telm$url$Url$Http,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\telm$url$Url$Https,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{\n\t\tinit: author$project$Main$init,\n\t\tsubscriptions: function (model) {\n\t\t\treturn author$project$Main$input(author$project$Main$JsPort);\n\t\t},\n\t\tupdate: author$project$Main$update,\n\t\tview: author$project$Main$view\n\t});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(_Utils_Tuple0))(0)}});}(this));"]}