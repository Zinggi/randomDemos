{"version":3,"sources":["dist/elm.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","F7","g","F8","h","F9","i","A2","A3","A4","A5","A6","console","warn","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_Utils_Tuple2","length","_JsArray_unsafeGet","index","array","_JsArray_unsafeSet","value","_JsArray_push","_JsArray_foldr","acc","_JsArray_slice","from","to","slice","_JsArray_appendN","n","dest","source","destLen","itemsToCopy","tag","log","_Debug_toString","_Debug_toAnsiString","ansi","_Debug_internalColor","_Debug_ctorColor","_Debug_numberColor","string","String","_Debug_charColor","_Debug_addSlashes","_Debug_stringColor","$","output","k","push","join","_Debug_fadeColor","elm$core$Set$toList","elm$core$Dict$toList","elm$core$Array$toList","str","c0","parenless","indexOf","DataView","byteLength","File","name","key","field","isChar","s","replace","_Debug_crash","identifier","fact1","fact2","fact3","fact4","Error","document","location","href","portName","moduleName","region","message","_Debug_regionToString","start","line","end","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","_Utils_equal","_Utils_cmp","ord","valueOf","elm$core$Basics$LT","elm$core$Basics$GT","elm$core$Basics$EQ","_Utils_lt","_Utils_Tuple0","_Utils_Tuple3","_Utils_chr","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil_UNUSED","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","_List_toArray","_List_map2","_Basics_modBy","zs","ws","vs","sort","Math","pow","modulus","answer","PI","E","cos","sin","tan","acos","asin","atan","atan2","_Basics_ceiling","ceil","_Basics_floor","floor","_Basics_log","round","sqrt","isNaN","_Basics_and","_Bitwise_or","_Bitwise_xor","_Bitwise_shiftLeftBy","_String_cons","chr","len","word","charCodeAt","_String_map","_String_filter","isGood","char","state","_String_foldl","_String_foldr","_String_split","sep","split","_String_join","strs","_String_slice","_String_any","_String_all","_String_contains","sub","_String_indexes","lastIndexOf","subLen","is","_String_fromNumber","number","_Json_decodePrim","decoder","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_decodeInt","_Json_decodeValue","_Json_wrap","_Json_decodeString","_Json_decodeField","_Json_mapMany","decoders","_Json_andThen","callback","_Json_map1","d1","_Json_map2","d2","_Json_run","d3","d4","d5","d6","d7","d8","_Json_runHelp","JSON","parse","elm$core$Result$Err","elm$json$Json$Decode$Failure","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","errors","temp","elm$json$Json$Decode$OneOf","toElmValue","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Json_encode","indentLevel","stringify","_Json_addField","object","_Scheduler_succeed","_Scheduler_binding","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","impl","flagDecoder","debugMetadata","args","_Platform_initialize","init","update","subscriptions","stepperBuilder","error","undefined","elm$json$Json$Decode$errorToString","managers","model","stepper","sendToApp","ports","_Platform_setupEffects","_Platform_effectManagers","manager","_Platform_instantiateManager","viewMetadata","_Platform_dispatchEffects","info","router","onEffects","onSelfMsg","cmdMap","subMap","loop","j","_Platform_sendToApp","_Platform_leaf","home","l","tagger","bag","o","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","taggers","effect","_Platform_toEffect","applyTaggers","q","p","_Platform_insert","newEffect","effects","list","m","_Platform_checkPortName","_Platform_outgoingPortMap","_Platform_setupOutgoingPort","subs","time","converter","r","id","setTimeout","clearTimeout","cmdList","currentSubs","subscribe","unsubscribe","splice","_Platform_incomingPortMap","_VirtualDom_divertHrefToApp","finalTagger","_Platform_setupIncomingPort","subList","send","incomingValue","_VirtualDom_doc","_VirtualDom_appendChild","parent","child","appendChild","virtualNode","node","parentNode","replaceChild","_VirtualDom_render","_VirtualDom_text","_VirtualDom_nodeNS","_VirtualDom_node","namespace","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_keyedNodeNS","_VirtualDom_thunk","refs","thunk","A7","A8","_VirtualDom_lazy","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","attr","_VirtualDom_mapHandler","elm$virtual_dom$VirtualDom$toHandlerInt","elm$json$Json$Decode$map2","_VirtualDom_mapEventTuple","_VirtualDom_mapEventRecord","elm$json$Json$Decode$succeed","elm$json$Json$Decode$map","_VirtualDom_passiveSupported","tuple","record","stopPropagation","preventDefault","facts","entry","subFacts","_VirtualDom_addClass","newClass","classes","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","oldHandler","removeEventListener","_VirtualDom_makeCallback","passive","window","Object","defineProperty","get","initialHandler","event","currentEventNode","_VirtualDom_equalEvents","_VirtualDom_diff","patches","_VirtualDom_diffHelp","_VirtualDom_pushPatch","data","patch","t","u","xType","yType","_VirtualDom_dekey","keyedNode","keyedKids","same","xRefs","yRefs","subPatches","xSubNode","xTaggers","yTaggers","nesting","ySubNode","_VirtualDom_pairwiseRefEqual","as","bs","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","xIndex","localPatches","changes","inserts","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","z","A","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","_VirtualDom_applyPatchReorder","frag","_VirtualDom_applyPatchReorderEndInsertsHelp","createDocumentFragment","insert","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","tagName","toLowerCase","_Browser_element","initialModel","view","currNode","_Browser_makeAnimator","nextNode","_Browser_requestAnimationFrame","divertHrefToApp","setup","title","bodyNode","body","doc","cancelAnimationFrame","requestAnimationFrame","draw","updateIfNeeded","nextModel","isSync","elm$core$Task$perform","elm$core$Basics$never","history","go","url","pushState","replaceState","_Browser_go","_Browser_fakeNode","_Browser_window","eventName","sendToSelf","elm$core$Maybe$Just","elm$core$Maybe$Nothing","_Browser_withNode","doStuff","getElementById","elm$browser$Browser$Dom$NotFound","functionName","_Browser_withWindow","scroll","scrollLeft","scrollTop","author$project$Main$JsPort","fen","components","epSquare_","sideToMove_","castleRights","board","whiteKingSquare","blackKingSquare","elm$core$Elm$JsArray$foldr","elm$core$Array$foldr","baseCase","_n0","tree","tail","helper","subTree","values","elm$core$List$cons","elm$core$Dict$foldr","left","right","$temp$func","$temp$acc","dict","elm$core$Dict$keys","keyList","elm$core$Basics$identity","romstad$elm_chess$Game$Game","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Array$Leaf","elm$core$Array$SubTree","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Basics$eq","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","_JsArray_length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","elm$core$Array$fromListHelp","jsArray","remainingItems","elm$core$Array$fromList","elm$core$Maybe$withDefault","_default","maybe","elm$core$Array$bitMask","elm$core$Elm$JsArray$unsafeGet","elm$core$Elm$JsArray$unsafeSet","elm$core$Array$setHelp","pos","newSub","newLeaf","elm$core$Array$tailIndex","elm$core$Array$set","startShift","elm$core$List$repeatHelp","elm$core$List$repeat","elm$core$Bitwise$or","romstad$elm_chess$Internal$Piece$Piece","romstad$elm_chess$Internal$PieceColor$unwrap","color","color_","romstad$elm_chess$Internal$PieceType$unwrap","kind","kind_","romstad$elm_chess$Internal$Piece$make","romstad$elm_chess$Internal$PieceColor$PieceColor","romstad$elm_chess$Internal$PieceColor$empty","romstad$elm_chess$Internal$PieceType$PieceType","romstad$elm_chess$Internal$PieceType$none","romstad$elm_chess$Internal$Piece$empty","romstad$elm_chess$Internal$PieceColor$outside","romstad$elm_chess$Internal$Piece$outside","elm$core$List$foldrHelper","fn","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$append","elm$core$List$map","elm$core$List$concatMap","elm$core$List$concat","lists","romstad$elm_chess$Internal$Square$Square","romstad$elm_chess$Internal$SquareFile$unwrap","file","file_","romstad$elm_chess$Internal$SquareRank$unwrap","rank","rank_","romstad$elm_chess$Internal$Square$make","elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","romstad$elm_chess$Internal$SquareFile$SquareFile","romstad$elm_chess$Internal$SquareFile$all","romstad$elm_chess$Internal$BoardDimensions$fileMin","romstad$elm_chess$Internal$SquareRank$SquareRank","romstad$elm_chess$Internal$SquareRank$all","romstad$elm_chess$Internal$BoardDimensions$rankMin","romstad$elm_chess$Internal$Square$all","romstad$elm_chess$Internal$Square$unwrap","square","square_","romstad$elm_chess$Internal$Board$empty","romstad$elm_chess$Internal$CastleRights$CastleRights","romstad$elm_chess$Internal$CastleRights$empty","romstad$elm_chess$Internal$PieceColor$white","romstad$elm_chess$Internal$Position$Position","romstad$elm_chess$Internal$Position$empty","epSquare","gamePly","lastMove","rule50Counter","sideToMove","elm$core$Array$getHelp","elm$core$Array$get","elm$core$List$filter","elm$core$List$head","elm$core$String$split","elm$core$String$foldr","elm$core$String$toList","romstad$elm_chess$Internal$Board$ReadFenState","fileIndex","rankIndex","elm$core$Char$toCode","_Char_toCode","code","elm$core$Char$isDigit","_char","romstad$elm_chess$Internal$Board$putPiece","piece","elm$core$Basics$modBy","romstad$elm_chess$Internal$Square$expand","romstad$elm_chess$Internal$Board$readFenPiece","elm$core$Char$isUpper","elm$core$Maybe$map","romstad$elm_chess$Internal$PieceColor$black","elm$core$Char$toUpper","_Char_toUpper","toUpperCase","romstad$elm_chess$Internal$PieceType$bishop","romstad$elm_chess$Internal$PieceType$king","romstad$elm_chess$Internal$PieceType$knight","romstad$elm_chess$Internal$PieceType$pawn","romstad$elm_chess$Internal$PieceType$queen","romstad$elm_chess$Internal$PieceType$rook","romstad$elm_chess$Internal$PieceType$fromChar","ch","romstad$elm_chess$Internal$Board$processFenChar","romstad$elm_chess$Internal$Piece$fromChar","romstad$elm_chess$Internal$Board$pieceOn","romstad$elm_chess$Internal$CastleRights$fromChar","romstad$elm_chess$Internal$Piece$blackKing","romstad$elm_chess$Internal$Piece$whiteKing","elm$core$Maybe$andThen","maybeValue","romstad$elm_chess$Internal$PieceColor$fromChar","elm$core$String$length","_String_length","elm$core$String$slice","elm$core$String$dropLeft","romstad$elm_chess$Internal$SquareFile$fromChar","f_","romstad$elm_chess$Internal$SquareRank$fromChar","romstad$elm_chess$Internal$Square$fromString","romstad$elm_chess$Internal$SquareRank$fromString","romstad$elm_chess$Internal$SquareFile$fromString","romstad$elm_chess$Internal$Position$initial","romstad$elm_chess$Internal$CastleRights$fromString","romstad$elm_chess$Internal$BoardDimensions$rankCount","romstad$elm_chess$Internal$Board$fromFen","romstad$elm_chess$Internal$Game$empty","currentMoveIndex","currentPosition","positions","tags","romstad$elm_chess$Game$empty","author$project$Main$initModel","candidateMoves","game","gameState","isBlack","myId","otherId","selectedSquare","author$project$Main$output","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fromIndex","leaf","tailLen","elm$core$Char$isLower","elm$core$Char$isAlpha","elm$core$Char$isAlphaNum","elm$core$List$length","elm$core$List$map2","elm$core$List$indexedMap","elm$core$String$all","elm$core$String$fromInt","elm$core$String$join","chunks","elm$core$String$uncons","_String_uncons","elm$json$Json$Decode$indent","elm$json$Json$Encode$encode","elm$json$Json$Decode$errorOneOf","elm$json$Json$Decode$errorToStringHelp","context","errorToStringHelp","err","isSimple","_n1","_n2","rest","$temp$error","$temp$context","indexName","starter","introduction","json","elm$json$Json$Encode$int","elm$json$Json$Decode$value","author$project$Main$input","_Platform_incomingPort","author$project$Main$MyTurn","author$project$Main$OtherTurn","author$project$Main$GotId","author$project$Main$GotMove","author$project$Main$GotRematch","author$project$Main$Ready","author$project$Main$Ready2","elm$json$Json$Decode$andThen","elm$json$Json$Decode$fail","_Json_fail","elm$json$Json$Decode$field","elm$json$Json$Decode$string","_Json_succeed","author$project$Main$msgDecoder","author$project$Main$portDecoder","elm$core$Basics$not","_Basics_not","bool","author$project$Main$rematch","elm$json$Json$Encode$object","pairs","obj","elm$json$Json$Encode$string","author$project$Main$send","elm$core$Platform$Cmd$batch","_Platform_batch","elm$core$Platform$Cmd$none","elm$core$Elm$JsArray$push","elm$core$Elm$JsArray$singleton","_JsArray_singleton","elm$core$Array$insertTailInTree","elm$core$Array$unsafeReplaceTail","newTail","originalTailLen","newTailLen","newArrayLen","overflow","newShift","newTree","elm$core$Array$push","elm$core$Elm$JsArray$appendN","elm$core$Elm$JsArray$slice","elm$core$Array$appendHelpBuilder","notAppended","appended","elm$core$List$drop","elm$core$Array$sliceLeft","skipNodes","leafNodes","nodesToInsert","head","initialBuilder","elm$core$Array$fetchNewTail","treeEnd","elm$core$Array$hoistTree","oldShift","elm$core$Array$sliceTree","endIdx","lastPos","elm$core$Array$sliceRight","elm$core$Array$translateIndex","posIndex","elm$core$Array$slice","correctTo","correctFrom","romstad$elm_chess$Internal$Game$position","romstad$elm_chess$Internal$Board$removePiece","romstad$elm_chess$Internal$Board$movePiece","romstad$elm_chess$Internal$Move$unwrap","move","move_","romstad$elm_chess$Internal$Move$from","romstad$elm_chess$Internal$Move$isCastle","romstad$elm_chess$Internal$Move$to","romstad$elm_chess$Internal$Move$isKingsideCastle","romstad$elm_chess$Internal$Move$isQueensideCastle","romstad$elm_chess$Internal$Move$promotion","romstad$elm_chess$Internal$Piece$unwrap","piece_","romstad$elm_chess$Internal$Piece$color","romstad$elm_chess$Internal$SquareDelta$unwrap","delta","delta_","romstad$elm_chess$Internal$Square$add","romstad$elm_chess$Internal$Square$file","romstad$elm_chess$Internal$Square$rank","romstad$elm_chess$Internal$SquareDelta$SquareDelta","romstad$elm_chess$Internal$SquareDelta$e","romstad$elm_chess$Internal$SquareDelta$multiply","romstad$elm_chess$Internal$SquareDelta$negate","romstad$elm_chess$Internal$SquareDelta$w","romstad$elm_chess$Internal$Board$doMove","us","romstad$elm_chess$Internal$Move$isEp","toFile","fromRank","romstad$elm_chess$Internal$CastleRights$unwrap","rights","rights_","romstad$elm_chess$Internal$CastleRights$disableKingsideCastling","romstad$elm_chess$Internal$CastleRights$disableQueensideCastling","romstad$elm_chess$Internal$CastleRights$disableAllCastling","romstad$elm_chess$Internal$SquareFile$a","romstad$elm_chess$Internal$SquareRank$one","romstad$elm_chess$Internal$Square$a1","romstad$elm_chess$Internal$SquareRank$eight","romstad$elm_chess$Internal$Square$a8","romstad$elm_chess$Internal$SquareFile$e","romstad$elm_chess$Internal$Square$e1","romstad$elm_chess$Internal$Square$e8","romstad$elm_chess$Internal$SquareFile$h","romstad$elm_chess$Internal$Square$h1","romstad$elm_chess$Internal$Square$h8","romstad$elm_chess$Internal$CastleRights$doMove","romstad$elm_chess$Internal$Piece$blackPawn","romstad$elm_chess$Internal$Piece$kind","romstad$elm_chess$Internal$Piece$whitePawn","elm$core$Basics$composeR","elm$core$Bitwise$xor","romstad$elm_chess$Internal$PieceColor$opposite","romstad$elm_chess$Internal$Position$unwrap","pos_","romstad$elm_chess$Internal$Position$pieceOn","romstad$elm_chess$Internal$Square$subtract","square0","square1","romstad$elm_chess$Internal$SquareDelta$n","romstad$elm_chess$Internal$SquareDelta$add","delta0","delta1","romstad$elm_chess$Internal$SquareDelta$nn","romstad$elm_chess$Internal$SquareDelta$s","romstad$elm_chess$Internal$SquareDelta$ss","romstad$elm_chess$Internal$Position$doMove","position","romstad$elm_chess$Internal$Game$addMove","romstad$elm_chess$Game$addMove","romstad$elm_chess$Game$position","elm$core$String$toUpper","_String_toUpper","elm$core$String$cons","elm$core$String$fromChar","romstad$elm_chess$Internal$PieceType$toChar","romstad$elm_chess$Internal$PieceType$toString","elm$core$Char$fromCode","_Char_fromCode","fromCharCode","romstad$elm_chess$Internal$SquareFile$toString","romstad$elm_chess$Internal$SquareRank$toString","romstad$elm_chess$Internal$Square$toString","romstad$elm_chess$Internal$Notation$pawnMoveToSan","promotion","promotion_","elm$core$Basics$composeL","elm$core$List$any","isOkay","elm$core$List$all","romstad$elm_chess$Internal$Notation$differentFileFrom","m1","m2","romstad$elm_chess$Internal$Notation$differentRankFrom","romstad$elm_chess$Internal$Position$kingSquare","romstad$elm_chess$Internal$Board$lineIsClear","lineIsClearInternal","s0","s1","elm$core$Array$repeat","romstad$elm_chess$Internal$Piece$blackBishop","romstad$elm_chess$Internal$Piece$blackKnight","romstad$elm_chess$Internal$Piece$blackQueen","romstad$elm_chess$Internal$Piece$blackRook","romstad$elm_chess$Internal$Piece$whiteBishop","romstad$elm_chess$Internal$Piece$whiteKnight","romstad$elm_chess$Internal$Piece$whiteQueen","romstad$elm_chess$Internal$Piece$whiteRook","romstad$elm_chess$Internal$SquareDelta$ne","romstad$elm_chess$Internal$SquareDelta$nee","romstad$elm_chess$Internal$SquareDelta$nne","romstad$elm_chess$Internal$SquareDelta$nnw","romstad$elm_chess$Internal$SquareDelta$nw","romstad$elm_chess$Internal$SquareDelta$nww","romstad$elm_chess$Internal$SquareDelta$se","romstad$elm_chess$Internal$SquareDelta$see","romstad$elm_chess$Internal$SquareDelta$sse","romstad$elm_chess$Internal$SquareDelta$ssw","romstad$elm_chess$Internal$SquareDelta$sw","romstad$elm_chess$Internal$SquareDelta$sww","romstad$elm_chess$Internal$Piece$attackDirections","romstad$elm_chess$Internal$Piece$isSlider","romstad$elm_chess$Internal$Square$isOutside","romstad$elm_chess$Internal$SquareFile$isOutside","romstad$elm_chess$Internal$Square$squaresInDirection","startSquare","squaresInDirectionInternal","$temp$square","romstad$elm_chess$Internal$Square$deltasInDirection","romstad$elm_chess$Internal$SquareDelta$max","romstad$elm_chess$Internal$BoardDimensions$squareMax","romstad$elm_chess$Internal$Piece$attackDeltas","deltasByDirection","sq","deltas","deltaMax","d0","romstad$elm_chess$Internal$Piece$attackDelta","romstad$elm_chess$Internal$Board$pieceAttacksSquare","romstad$elm_chess$Internal$Board$sideAttacksSquare","side","romstad$elm_chess$Internal$Position$sideAttacksSquare","romstad$elm_chess$Internal$Position$isInCheck","kingSquare_","romstad$elm_chess$Internal$Position$sideToMove","romstad$elm_chess$Internal$Position$pseudoMoveIsLegal","romstad$elm_chess$Internal$Board$isEmpty","romstad$elm_chess$Internal$Position$isEmpty","romstad$elm_chess$Internal$Move$Move","romstad$elm_chess$Internal$Square$compress","romstad$elm_chess$Internal$Move$make","from_","to_","romstad$elm_chess$Internal$Move$makePromotion","romstad$elm_chess$Internal$Square$isRankTwo","romstad$elm_chess$Internal$BoardDimensions$rankMax","romstad$elm_chess$Internal$Position$pawnCapturePseudoMovesTo","them","ourPawn","ds","romstad$elm_chess$Internal$Move$makeEp","romstad$elm_chess$Internal$Position$epSquare","romstad$elm_chess$Internal$Position$pawnEpCapturePseudoMoves","romstad$elm_chess$Internal$Position$pawnPushPseudoMovesTo","from2","romstad$elm_chess$Internal$Position$pawnPseudoMovesTo","romstad$elm_chess$Internal$Board$scan","scanInternal","romstad$elm_chess$Internal$Position$scan","romstad$elm_chess$Internal$Position$piecePseudoMovesTo","pieceType","ourPiece","romstad$elm_chess$Internal$Position$pseudoMovesTo","capturedPiece","romstad$elm_chess$Internal$Position$movesTo","romstad$elm_chess$Internal$Notation$disambiguation","moves","elm$core$Char$toLower","_Char_toLower","romstad$elm_chess$Internal$Piece$toString","romstad$elm_chess$Internal$Notation$pieceMoveToSan","romstad$elm_chess$Internal$Position$isCheck","romstad$elm_chess$Internal$Position$moveGivesCheck","romstad$elm_chess$Internal$Position$slidePseudoMovesFrom","slidePseudoMovesFromInternal","$temp$to","$temp$result","romstad$elm_chess$Internal$Position$bishopPseudoMovesFrom","romstad$elm_chess$Internal$Move$makeCastle","romstad$elm_chess$Internal$CastleRights$canCastleKingside","romstad$elm_chess$Internal$Position$canCastleKingside","romstad$elm_chess$Internal$CastleRights$canCastleQueenside","romstad$elm_chess$Internal$Position$canCastleQueenside","romstad$elm_chess$Internal$Position$kingCastlePseudoMovesFrom","f1","g1","c1","b1","romstad$elm_chess$Internal$Position$kingPseudoMovesFrom","romstad$elm_chess$Internal$Position$knightPseudoMovesFrom","romstad$elm_chess$Internal$Position$colorOn","romstad$elm_chess$Internal$Position$pawnCaptures","toSqs","romstad$elm_chess$Internal$Position$pawnEpCaptures","romstad$elm_chess$Internal$Position$pawnPushes","doublePush","romstad$elm_chess$Internal$Position$pawnPseudoMovesFrom","romstad$elm_chess$Internal$Position$queenPseudoMovesFrom","romstad$elm_chess$Internal$Position$rookPseudoMovesFrom","romstad$elm_chess$Internal$Position$pseudoMovesFrom","romstad$elm_chess$Internal$Position$movesFrom","romstad$elm_chess$Internal$Position$moves","romstad$elm_chess$Internal$Position$isCheckmate","romstad$elm_chess$Internal$Position$moveGivesCheckmate","romstad$elm_chess$Notation$toSan","author$project$Main$doMove","newGame","newState","cmd","romstad$elm_chess$Move$to","romstad$elm_chess$Position$movesFrom","author$project$Main$squarePressed","newMoves","elm$json$Json$Decode$decodeValue","elm$core$String$filter","elm$core$String$left","romstad$elm_chess$Internal$Notation$isImportantCharacter","elm$core$List$maybeCons","mx","elm$core$List$filterMap","elm$core$String$dropRight","elm$core$String$right","romstad$elm_chess$Internal$Notation$pawnMatch","fromFile","romstad$elm_chess$Internal$Notation$findPawnMove","candidates","romstad$elm_chess$Internal$PieceType$fromString","romstad$elm_chess$Internal$Notation$pawnMoveFromSan","romstad$elm_chess$Internal$Notation$match","romstad$elm_chess$Internal$Notation$findPieceMove","disambig","dis","files","ranks","romstad$elm_chess$Internal$Notation$pieceMoveFromSan","romstad$elm_chess$Notation$fromSan","romstad$elm_chess$Internal$Notation$kingsideCastlingFromSan","romstad$elm_chess$Internal$Notation$queensideCastlingFromSan","author$project$Main$update","val","author$project$Main$Connect","author$project$Main$SetOtherId","author$project$Main$Rematch","elm$core$String$fromFloat","author$project$Main$px","elm$core$String$toLower","_String_toLower","romstad$elm_chess$Piece$color","romstad$elm_chess$Piece$kind","romstad$elm_chess$PieceColor$toString","romstad$elm_chess$PieceType$toString","author$project$Main$pieceImgUrl","elm$html$Html$div","elm$html$Html$text","elm$html$Html$Attributes$style","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$html$Html$Events$onClick","author$project$Main$square","sqSize","col","row","romstad$elm_chess$Square$file","romstad$elm_chess$Square$rank","romstad$elm_chess$SquareFile$toIndex","romstad$elm_chess$SquareRank$toIndex","author$project$Main$squareToCoordinates","isRotated","elm$html$Html$b","elm$html$Html$button","romstad$elm_chess$PieceColor$black","romstad$elm_chess$Position$isCheckmate","romstad$elm_chess$Position$pieceOn","romstad$elm_chess$Position$sideToMove","romstad$elm_chess$Square$all","author$project$Main$board","txt","elm$html$Html$input","elm$json$Json$Encode$bool","elm$html$Html$Attributes$readonly","elm$html$Html$Attributes$boolProperty","elm$html$Html$Attributes$value","elm$html$Html$Attributes$stringProperty","elm$html$Html$Events$alwaysStop","elm$html$Html$Events$stopPropagationOn","elm$html$Html$Events$targetValue","fields","elm$core$Task$Perform","elm$core$Task$succeed","elm$core$Task$init","elm$core$Task$andThen","elm$core$Task$map","taskA","elm$core$Task$map2","taskB","elm$core$Platform$sendToApp","elm$core$Task$spawnCmd","elm$core$Task$onEffects","commands","tasks","elm$core$Task$onSelfMsg","elm$core$Task$cmdMap","elm$core$Task$command","exports","toMessage","elm$core$String$indexes","elm$core$String$isEmpty","elm$core$String$contains","elm$core$String$toInt","_String_toInt","total","code0","elm$url$Url$Url","protocol","host","port_","path","query","fragment","elm$url$Url$chompBeforePath","params","elm$url$Url$chompBeforeQuery","elm$url$Url$chompBeforeFragment","author$project$Main$main","flags","_Platform_mergeExportsDebug"],"mappings":";AAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,IAAC,SAASA,GACV,aAESC,SAAAA,EAAEC,EAAOC,EAAKC,GAGdA,OAFPA,EAAQC,EAAIH,EACZE,EAAQE,EAAIH,EACLC,EAGAG,SAAAA,EAAGJ,GACHF,OAAAA,EAAE,EAAGE,EAAK,SAASE,GAAY,OAAA,SAASG,GAAYL,OAAAA,EAAIE,EAAEG,MAE1DC,SAAAA,EAAGN,GACHF,OAAAA,EAAE,EAAGE,EAAK,SAASE,GACjB,OAAA,SAASG,GAAY,OAAA,SAASE,GAAYP,OAAAA,EAAIE,EAAGG,EAAGE,OAGtDC,SAAAA,EAAGR,GACHF,OAAAA,EAAE,EAAGE,EAAK,SAASE,GAAY,OAAA,SAASG,GAAY,OAAA,SAASE,GAC3D,OAAA,SAASE,GAAYT,OAAAA,EAAIE,EAAGG,EAAGE,EAAGE,QAGpCC,SAAAA,EAAGV,GACHF,OAAAA,EAAE,EAAGE,EAAK,SAASE,GAAY,OAAA,SAASG,GAAY,OAAA,SAASE,GAC3D,OAAA,SAASE,GAAY,OAAA,SAASE,GAAYX,OAAAA,EAAIE,EAAGG,EAAGE,EAAGE,EAAGE,SAG5DC,SAAAA,EAAGZ,GACHF,OAAAA,EAAE,EAAGE,EAAK,SAASE,GAAY,OAAA,SAASG,GAAY,OAAA,SAASE,GAC3D,OAAA,SAASE,GAAY,OAAA,SAASE,GAAY,OAAA,SAASR,GACnDH,OAAAA,EAAIE,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,UAGrBU,SAAAA,EAAGb,GACHF,OAAAA,EAAE,EAAGE,EAAK,SAASE,GAAY,OAAA,SAASG,GAAY,OAAA,SAASE,GAC3D,OAAA,SAASE,GAAY,OAAA,SAASE,GAAY,OAAA,SAASR,GACnD,OAAA,SAASW,GAAYd,OAAAA,EAAIE,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,WAG7CC,SAAAA,EAAGf,GACHF,OAAAA,EAAE,EAAGE,EAAK,SAASE,GAAY,OAAA,SAASG,GAAY,OAAA,SAASE,GAC3D,OAAA,SAASE,GAAY,OAAA,SAASE,GAAY,OAAA,SAASR,GACnD,OAAA,SAASW,GAAY,OAAA,SAASE,GAC9BhB,OAAAA,EAAIE,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,EAAGE,YAG3BC,SAAAA,EAAGjB,GACHF,OAAAA,EAAE,EAAGE,EAAK,SAASE,GAAY,OAAA,SAASG,GAAY,OAAA,SAASE,GAC3D,OAAA,SAASE,GAAY,OAAA,SAASE,GAAY,OAAA,SAASR,GACnD,OAAA,SAASW,GAAY,OAAA,SAASE,GAAY,OAAA,SAASE,GACnDlB,OAAAA,EAAIE,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,EAAGE,EAAGE,aAI9BC,SAAAA,EAAGnB,EAAKE,EAAGG,GACXL,OAAU,IAAVA,EAAIE,EAAUF,EAAIG,EAAED,EAAGG,GAAKL,EAAIE,EAAJF,CAAOK,GAEnCe,SAAAA,EAAGpB,EAAKE,EAAGG,EAAGE,GACdP,OAAU,IAAVA,EAAIE,EAAUF,EAAIG,EAAED,EAAGG,EAAGE,GAAKP,EAAIE,EAAJF,CAAOK,EAAPL,CAAUO,GAEzCc,SAAAA,EAAGrB,EAAKE,EAAGG,EAAGE,EAAGE,GACjBT,OAAU,IAAVA,EAAIE,EAAUF,EAAIG,EAAED,EAAGG,EAAGE,EAAGE,GAAKT,EAAIE,EAAJF,CAAOK,EAAPL,CAAUO,EAAVP,CAAaS,GAE/Ca,SAAAA,EAAGtB,EAAKE,EAAGG,EAAGE,EAAGE,EAAGE,GACpBX,OAAU,IAAVA,EAAIE,EAAUF,EAAIG,EAAED,EAAGG,EAAGE,EAAGE,EAAGE,GAAKX,EAAIE,EAAJF,CAAOK,EAAPL,CAAUO,EAAVP,CAAaS,EAAbT,CAAgBW,GAErDY,SAAAA,EAAGvB,EAAKE,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,GACvBH,OAAU,IAAVA,EAAIE,EAAUF,EAAIG,EAAED,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,GAAKH,EAAIE,EAAJF,CAAOK,EAAPL,CAAUO,EAAVP,CAAaS,EAAbT,CAAgBW,EAAhBX,CAAmBG,GAYpEqB,QAAQC,KAAK,8HAeTC,IAAAA,EAAsBpB,EAAG,SAASqB,EAAMC,EAAQC,GAI3C,IAFDC,IAAAA,EAAS,IAAIC,MAAMJ,GAEdT,EAAI,EAAGA,EAAIS,EAAMT,IAEtBY,EAAOZ,GAAKW,EAAKD,EAASV,GAGvBY,OAAAA,IAGPE,EAA8B5B,EAAG,SAAU6B,EAAKC,GAI3C,IAFDJ,IAAAA,EAAS,IAAIC,MAAME,GAEdf,EAAI,EAAGA,EAAIe,GAAOC,EAAG7B,EAAGa,IAE7BY,EAAOZ,GAAKgB,EAAGhC,EACfgC,EAAKA,EAAG7B,EAIL8B,OADPL,EAAOM,OAASlB,EACTiB,EAAcL,EAAQI,KAG7BG,EAAqBjC,EAAG,SAASkC,EAAOC,GAEjCA,OAAAA,EAAMD,KAGbE,EAAqBlC,EAAG,SAASgC,EAAOG,EAAOF,GAK1C,IAHDH,IAAAA,EAASG,EAAMH,OACfN,EAAS,IAAIC,MAAMK,GAEdlB,EAAI,EAAGA,EAAIkB,EAAQlB,IAExBY,EAAOZ,GAAKqB,EAAMrB,GAIfY,OADPA,EAAOQ,GAASG,EACTX,IAGPY,EAAgBtC,EAAG,SAASqC,EAAOF,GAK9B,IAHDH,IAAAA,EAASG,EAAMH,OACfN,EAAS,IAAIC,MAAMK,EAAS,GAEvBlB,EAAI,EAAGA,EAAIkB,EAAQlB,IAExBY,EAAOZ,GAAKqB,EAAMrB,GAIfY,OADPA,EAAOM,GAAUK,EACVX,IAePa,GAZiBrC,EAAG,SAASuB,EAAMe,EAAKL,GAInC,IAFDH,IAAAA,EAASG,EAAMH,OAEVlB,EAAI,EAAGA,EAAIkB,EAAQlB,IAExB0B,EAAMzB,EAAGU,EAAMU,EAAMrB,GAAI0B,GAGtBA,OAAAA,IAGUtC,EAAG,SAASuB,EAAMe,EAAKL,GAEnC,IAAA,IAAIrB,EAAIqB,EAAMH,OAAS,EAAGlB,GAAK,EAAGA,IAEnC0B,EAAMzB,EAAGU,EAAMU,EAAMrB,GAAI0B,GAGtBA,OAAAA,KA6BPC,GA1BezC,EAAG,SAASyB,EAAMU,GAK5B,IAHDH,IAAAA,EAASG,EAAMH,OACfN,EAAS,IAAIC,MAAMK,GAEdlB,EAAI,EAAGA,EAAIkB,EAAQlB,IAExBY,EAAOZ,GAAKW,EAAKU,EAAMrB,IAGpBY,OAAAA,IAGexB,EAAG,SAASuB,EAAMD,EAAQW,GAK3C,IAHDH,IAAAA,EAASG,EAAMH,OACfN,EAAS,IAAIC,MAAMK,GAEdlB,EAAI,EAAGA,EAAIkB,EAAQlB,IAExBY,EAAOZ,GAAKC,EAAGU,EAAMD,EAASV,EAAGqB,EAAMrB,IAGpCY,OAAAA,IAGUxB,EAAG,SAASwC,EAAMC,EAAIR,GAEhCA,OAAAA,EAAMS,MAAMF,EAAMC,MAGzBE,EAAmB3C,EAAG,SAAS4C,EAAGC,EAAMC,GAEpCC,IAAAA,EAAUF,EAAKf,OACfkB,EAAcJ,EAAIG,EAElBC,EAAcF,EAAOhB,SAErBkB,EAAcF,EAAOhB,QAMpB,IAHDT,IACAG,EAAS,IAAIC,MADNsB,EAAUC,GAGZpC,EAAI,EAAGA,EAAImC,EAASnC,IAEzBY,EAAOZ,GAAKiC,EAAKjC,GAGhB,IAAIA,EAAI,EAAGA,EAAIoC,EAAapC,IAE7BY,EAAOZ,EAAImC,GAAWD,EAAOlC,GAG1BY,OAAAA,IAOa1B,EAAG,SAASmD,EAAKd,GAEjCA,OAAAA,IAGSrC,EAAG,SAASmD,EAAKd,GAG1BA,OADPjB,QAAQgC,IAAID,EAAM,KAAOE,EAAgBhB,IAClCA,IA4BCgB,SAAAA,EAAgBhB,GAEjBiB,OAGCA,SAAAA,EAAoBC,EAAMlB,GAE9B,GAAiB,mBAAVA,EAEHmB,OAAAA,EAAqBD,EAAM,cAG/B,GAAiB,kBAAVlB,EAEHoB,OAAAA,EAAiBF,EAAMlB,EAAQ,OAAS,SAG5C,GAAiB,iBAAVA,EAEHqB,OAoIAA,SAAmBH,EAAMI,GAE1BJ,OAAAA,EAAO,QAAaI,EAAS,OAAYA,EAtIxCD,CAAmBH,EAAMlB,EAAQ,IAGrCA,GAAAA,aAAiBuB,OAEbC,OAyIAA,SAAiBN,EAAMI,GAExBJ,OAAAA,EAAO,QAAaI,EAAS,OAAYA,EA3IxCE,CAAiBN,EAAM,IAAMO,EAAkBzB,GAAO,GAAQ,KAGlE,GAAiB,iBAAVA,EAEH0B,OAAAA,EAAmBR,EAAM,IAAMO,EAAkBzB,GAAO,GAAS,KAGrE,GAAiB,WAAjB,EAAOA,IAAsB,MAAOA,EACxC,CACKc,IAAAA,EAAMd,EAAM2B,EAEZ,GAAe,iBAARb,EAEHK,OAAAA,EAAqBD,EAAM,eAG/BJ,GAAW,MAAXA,EAAI,GACR,CACKc,IAAAA,EAAS,GACR,IAAA,IAAIC,KAAK7B,EAEH,MAAN6B,GACJD,EAAOE,KAAKb,EAAoBC,EAAMlB,EAAM6B,KAEtC,MAAA,IAAMD,EAAOG,KAAK,KAAO,IAG7BjB,GAAQ,oBAARA,EAEIM,OAAAA,EAAiBF,EAAM,OAC3Bc,EAAiBd,EAAM,aAAe,IACtCD,EAAoBC,EAAMe,GAAoBjC,IAG9Cc,GAAQ,uBAARA,GAAwC,wBAARA,EAE5BM,OAAAA,EAAiBF,EAAM,QAC3Bc,EAAiBd,EAAM,aAAe,IACtCD,EAAoBC,EAAMgB,GAAqBlC,IAG/Cc,GAAQ,sBAARA,EAEIM,OAAAA,EAAiBF,EAAM,SAC3Bc,EAAiBd,EAAM,aAAe,IACtCD,EAAoBC,EAAMiB,GAAsBnC,IAGhDc,GAAQ,OAARA,GAAwB,OAARA,EACpB,CACKc,IAAAA,EAAS,IAIN5B,IAFPA,EAAMpC,IAAMgE,GAAUX,EAAoBC,EAAMlB,EAAMvC,GAAIuC,EAAQA,EAAMpC,GAEjEoC,EAAMpC,EAAGoC,EAAQA,EAAMpC,EAE7BgE,GAAU,IAAMX,EAAoBC,EAAMlB,EAAMvC,GAE1CmE,OAAAA,EAAS,IAGbA,IAAAA,EAAS,GACR,IAAA,IAAInD,KAAKuB,EAETvB,GAAM,MAANA,EAAAA,CACA2D,IAAAA,EAAMnB,EAAoBC,EAAMlB,EAAMvB,IACtC4D,EAAKD,EAAI,GACTE,EAAmB,MAAPD,GAAqB,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,GAAcD,EAAIG,QAAQ,KAAO,EACzGX,GAAU,KAAOU,EAAYF,EAAM,IAAMA,EAAM,KAEzChB,OAAAA,EAAiBF,EAAMJ,GAAOc,EAGlC,GAAoB,mBAAbY,UAA2BxC,aAAiBwC,SAE/Cd,OAAAA,EAAmBR,EAAM,IAAMlB,EAAMyC,WAAa,WAGtD,GAAgB,mBAATC,MAAuB1C,aAAiB0C,KAE3CvB,OAAAA,EAAqBD,EAAM,IAAMlB,EAAM2C,KAAO,KAGlD,GAAiB,WAAjB,EAAO3C,GACX,CACK4B,IAAAA,EAAS,GACR,IAAA,IAAIgB,KAAO5C,EAChB,CACK6C,IAAAA,EAAmB,MAAXD,EAAI,GAAaA,EAAIrC,MAAM,GAAKqC,EAC5ChB,EAAOE,KAAKE,EAAiBd,EAAM2B,GAAS,MAAQ5B,EAAoBC,EAAMlB,EAAM4C,KAEjFhB,OAAkB,IAAlBA,EAAOjC,OAEH,KAED,KAAOiC,EAAOG,KAAK,MAAQ,KAG5BZ,OAAAA,EAAqBD,EAAM,eAzH3BD,EAAoB,EAAOjB,GA4H1ByB,SAAAA,EAAkBW,EAAKU,GAE3BC,IAAAA,EAAIX,EACNY,QAAQ,MAAO,QACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OAEbF,OAAAA,EAEIC,EAAEC,QAAQ,MAAO,OAIjBD,EAAEC,QAAQ,MAAO,OAIjB5B,SAAAA,EAAiBF,EAAMI,GAExBJ,OAAAA,EAAO,QAAaI,EAAS,OAAYA,EAQxCI,SAAAA,EAAmBR,EAAMI,GAE1BJ,OAAAA,EAAO,QAAaI,EAAS,OAAYA,EAQxCU,SAAAA,EAAiBd,EAAMI,GAExBJ,OAAAA,EAAO,QAAaI,EAAS,OAAYA,EAGxCH,SAAAA,EAAqBD,EAAMI,GAE5BJ,OAAAA,EAAO,QAAaI,EAAS,OAAYA,EAkBxC2B,SAAAA,EAAaC,EAAYC,EAAOC,EAAOC,EAAOC,GAE/CJ,OAAAA,GAED,KAAA,EACE,MAAA,IAAIK,MAAM,oOAEZ,KAAA,EACE,MAAA,IAAIA,MAAM,qEAAuEC,SAASC,SAASC,KAAO,4HAE5G,KAAA,EAEE,MAAA,IAAIH,MAAM,0EADMJ,GAGlB,KAAA,EACAQ,IAAAA,EAAWR,EACT,MAAA,IAAII,MAAM,qCAAuCI,EAAW,qCAE9D,KAAA,EACAA,EAAWR,EAET,MAAA,IAAII,MAAM,4DAA8DI,EAAW,OAD3EP,GAGV,KAAA,EACE,MAAA,IAAIG,MAAM,qRAEZ,KAAA,EACAK,IAAAA,EAAaT,EACX,MAAA,IAAII,MAAM,iEAAmEK,EAAa,mHAE5F,KAAA,EACAA,EAAaT,EAAbS,IACAC,EAAST,EACTU,EAAUT,EACR,MAAA,IAAIE,MAAM,mBAAqBK,EAAa,KAAOG,EAAsBF,GAAU,OAASC,GAE9F,KAAA,EACAF,EAAaT,EACbU,EAAST,EADTQ,IAEA5D,EAAQqD,EACRS,EAAUR,EACR,MAAA,IAAIC,MACT,mBAAqBK,EAAa,gCAChCG,EAAsBF,GAAU,+CAChC7C,EAAgBhB,GAAOgD,QAAQ,KAAM,UACrC,mDAAqDc,EAAQd,QAAQ,KAAM,WAG1E,KAAA,GACE,MAAA,IAAIO,MAAM,oDAEZ,KAAA,GACE,MAAA,IAAIA,MAAM,kDAIVQ,SAAAA,EAAsBF,GAE1BA,OAAAA,EAAOG,MAAMC,OAASJ,EAAOK,IAAID,KAE7B,WAAaJ,EAAOG,MAAMC,KAE3B,YAAcJ,EAAOG,MAAMC,KAAO,YAAcJ,EAAOK,IAAID,KAO1DE,SAAAA,EAAUC,EAAGC,GAGpB,IAAA,IAAIC,EAAMC,EAAQ,GAAIC,EAAUC,EAAcL,EAAGC,EAAG,EAAGE,GACvDC,IAAYF,EAAOC,EAAMG,OACzBF,EAAUC,EAAcH,EAAK7G,EAAG6G,EAAK1G,EAAG,EAAG2G,IAIrCC,OAAAA,EAGCC,SAAAA,EAAcL,EAAGC,EAAGM,EAAOJ,GAE/BI,GAAAA,EAAQ,IAGJ,OADPJ,EAAMzC,KAAKpC,EAAc0E,EAAEC,KACpB,EAGJD,GAAAA,IAAMC,EAEF,OAAA,EAGJ,GAAa,WAAb,EAAOD,IAAwB,OAANA,GAAoB,OAANC,EAGnC,MADM,mBAAND,GAAoBnB,EAAa,IACjC,EAwBH,IAAA,IAAIL,IApBG,oBAARwB,EAAEzC,IAELyC,EAAInC,GAAoBmC,GACxBC,EAAIpC,GAAoBoC,IAEb,uBAARD,EAAEzC,GAAsC,wBAARyC,EAAEzC,IAErCyC,EAAIlC,GAAqBkC,GACzBC,EAAInC,GAAqBmC,IAYVD,EAEX,IAACK,EAAcL,EAAExB,GAAMyB,EAAEzB,GAAM+B,EAAQ,EAAGJ,GAEtC,OAAA,EAGF,OAAA,EAGJK,IAAAA,EAAejH,EAAGwG,GACAxG,EAAG,SAASF,EAAGG,GAAY,OAACuG,EAAU1G,EAAEG,KASrDiH,SAAAA,EAAWT,EAAGC,EAAGS,GAErB,GAAa,WAAb,EAAOV,GAEHA,OAAAA,IAAMC,EAAN,EAAqBD,EAAIC,GAAY,EAA5C,EAIGD,GAAAA,aAAa7C,OACjB,CACK9D,IAAAA,EAAI2G,EAAEW,UACNnH,EAAIyG,EAAEU,UACHtH,OAAAA,IAAMG,EAAI,EAAIH,EAAIG,GAAK,EAAI,EAQ/BwG,GAAW,MAAXA,EAAEzC,EAAE,GAGA,OAACmD,EAAMD,EAAWT,EAAE3G,EAAG4G,EAAE5G,IAC7BqH,GACCA,EAAMD,EAAWT,EAAExG,EAAGyG,EAAEzG,IACxBkH,EACAD,EAAWT,EAAEtG,EAAGuG,EAAEvG,GAIhBsG,KAAAA,EAAExG,GAAKyG,EAAEzG,KAAOkH,EAAMD,EAAWT,EAAE3G,EAAG4G,EAAE5G,IAAK2G,EAAIA,EAAExG,EAAGyG,EAAIA,EAAEzG,GAC5DkH,OAAAA,IAAQV,EAAExG,EAAF,EAAiByG,EAAEzG,GAAY,EAApC,GAGKD,EAAG,SAASF,EAAGG,GAAYiH,OAAAA,EAAWpH,EAAGG,GAAK,IAC9CD,EAAG,SAASF,EAAGG,GAAYiH,OAAAA,EAAWpH,EAAGG,GAAK,IAC9CD,EAAG,SAASF,EAAGG,GAAYiH,OAAAA,EAAWpH,EAAGG,GAAK,IAC9CD,EAAG,SAASF,EAAGG,GAAYiH,OAAAA,EAAWpH,EAAGG,IAAM,IAE1CD,EAAG,SAASyG,EAAGC,GAE/B5D,IAAAA,EAAIoE,EAAWT,EAAGC,GACf5D,OAAAA,EAAI,EAAIuE,GAAqBvE,EAAIwE,GAAqBC,KAR1DC,IAeAC,EAAgB,CAAEzD,EAAG,MAGhBjC,SAAAA,EAAcjC,EAAGG,GAAY,MAAA,CAAE+D,EAAG,KAAMlE,EAAGA,EAAGG,EAAGA,GAGjDyH,SAAAA,EAAc5H,EAAGG,EAAGE,GAAY,MAAA,CAAE6D,EAAG,KAAMlE,EAAGA,EAAGG,EAAGA,EAAGE,EAAGA,GAG1DwH,SAAAA,EAAWxH,GAAY,OAAA,IAAIyD,OAAOzD,GAKlCyH,SAAAA,EAAcC,EAAWC,GAE7BC,IAAAA,EAAY,GAEX,IAAA,IAAI9C,KAAO4C,EAEfE,EAAU9C,GAAO4C,EAAU5C,GAGvB,IAAA,IAAIA,KAAO6C,EAEfC,EAAU9C,GAAO6C,EAAc7C,GAGzB8C,OAAAA,EAMY/H,EAAGgI,GAEdA,SAAAA,EAAUC,EAAIC,GAGlB,GAAc,iBAAPD,EAEHA,OAAAA,EAAKC,EAIT,IAACD,EAAGhI,EAEAiI,OAAAA,EAEJC,IAAAA,EAAOC,EAAWH,EAAGnI,EAAGoI,GAC5BD,EAAKA,EAAGhI,EACH,IAAA,IAAIoI,EAAOF,EAAMF,EAAGhI,EAAGgI,EAAKA,EAAGhI,EAEnCoI,EAAOA,EAAKpI,EAAImI,EAAWH,EAAGnI,EAAGoI,GAE3BC,OAAAA,EAKJG,IACAC,EAAY,CAAEvE,EAAG,MAGZoE,SAAAA,EAAWI,EAAIC,GAAa,MAAA,CAAEzE,EAAG,KAAMlE,EAAG0I,EAAIvI,EAAGwI,GAGtDC,IAAAA,EAAa1I,EAAGoI,GAEXO,SAAAA,EAAgBC,GAGnB,IADDC,IAAAA,EAAMN,EACDzH,EAAI8H,EAAI5G,OAAQlB,KAExB+H,EAAMT,EAAWQ,EAAI9H,GAAI+H,GAEnBA,OAAAA,EAGCC,SAAAA,EAAcb,GAEjB,IAAA,IAAIY,EAAM,GAAIZ,EAAGhI,EAAGgI,EAAKA,EAAGhI,EAEhC4I,EAAI1E,KAAK8D,EAAGnI,GAEN+I,OAAAA,EAGJE,IAAAA,EAAa7I,EAAG,SAASH,EAAGkI,EAAIC,GAE9B,IAAA,IAAIU,EAAM,GAAIX,EAAGhI,GAAKiI,EAAGjI,EAAGgI,EAAKA,EAAGhI,EAAGiI,EAAKA,EAAGjI,EAEnD2I,EAAIzE,KAAKpD,EAAGhB,EAAGkI,EAAGnI,EAAGoI,EAAGpI,IAElB6I,OAAAA,EAAgBC,KA2DpBI,GAxDa5I,EAAG,SAASL,EAAGkI,EAAIC,EAAIe,GAElC,IAAA,IAAIL,EAAM,GAAIX,EAAGhI,GAAKiI,EAAGjI,GAAKgJ,EAAGhJ,EAAGgI,EAAKA,EAAGhI,EAAGiI,EAAKA,EAAGjI,EAAGgJ,EAAKA,EAAGhJ,EAEtE2I,EAAIzE,KAAKnD,EAAGjB,EAAGkI,EAAGnI,EAAGoI,EAAGpI,EAAGmJ,EAAGnJ,IAExB6I,OAAAA,EAAgBC,KAGPtI,EAAG,SAASP,EAAGmJ,EAAIjB,EAAIC,EAAIe,GAEtC,IAAA,IAAIL,EAAM,GAAIM,EAAGjJ,GAAKgI,EAAGhI,GAAKiI,EAAGjI,GAAKgJ,EAAGhJ,EAAGiJ,EAAKA,EAAGjJ,EAAGgI,EAAKA,EAAGhI,EAAGiI,EAAKA,EAAGjI,EAAGgJ,EAAKA,EAAGhJ,EAEzF2I,EAAIzE,KAAKlD,EAAGlB,EAAGmJ,EAAGpJ,EAAGmI,EAAGnI,EAAGoI,EAAGpI,EAAGmJ,EAAGnJ,IAE9B6I,OAAAA,EAAgBC,KAGPpI,EAAG,SAAST,EAAGoJ,EAAID,EAAIjB,EAAIC,EAAIe,GAE1C,IAAA,IAAIL,EAAM,GAAIO,EAAGlJ,GAAKiJ,EAAGjJ,GAAKgI,EAAGhI,GAAKiI,EAAGjI,GAAKgJ,EAAGhJ,EAAGkJ,EAAKA,EAAGlJ,EAAGiJ,EAAKA,EAAGjJ,EAAGgI,EAAKA,EAAGhI,EAAGiI,EAAKA,EAAGjI,EAAGgJ,EAAKA,EAAGhJ,EAE5G2I,EAAIzE,KAAKjD,EAAGnB,EAAGoJ,EAAGrJ,EAAGoJ,EAAGpJ,EAAGmI,EAAGnI,EAAGoI,EAAGpI,EAAGmJ,EAAGnJ,IAEpC6I,OAAAA,EAAgBC,KAGL5I,EAAG,SAASD,EAAGkI,GAE1BU,OAAAA,EAAgBG,EAAcb,GAAImB,KAAK,SAAStJ,EAAGG,GAClDiH,OAAAA,EAAWnH,EAAED,GAAIC,EAAEE,SAIPD,EAAG,SAASD,EAAGkI,GAE5BU,OAAAA,EAAgBG,EAAcb,GAAImB,KAAK,SAAStJ,EAAGG,GACrDkH,IAAAA,EAAMpG,EAAGhB,EAAGD,EAAGG,GACZkH,OAAAA,IAAQI,GAAqB,EAAIJ,IAAQE,IAAsB,EAAI,OAQ1DrH,EAAG,SAASF,EAAGG,GAAYH,OAAAA,EAAIG,IAC/BD,EAAG,SAASF,EAAGG,GAAYH,OAAAA,EAAIG,IAC/BD,EAAG,SAASF,EAAGG,GAAYH,OAAAA,EAAIG,IAC9BD,EAAG,SAASF,EAAGG,GAAYH,OAAAA,EAAIG,IAC/BD,EAAG,SAASF,EAAGG,GAAaH,OAAAA,EAAIG,EAAK,IACtCD,EAAGqJ,KAAKC,KAEAtJ,EAAG,SAASC,EAAGH,GAAYA,OAAAA,EAAIG,IAGrCD,EAAG,SAASuJ,EAAS9C,GAEpC+C,IAAAA,EAAS/C,EAAI8C,EACVA,OAAY,IAAZA,EACJjE,EAAa,IAEdkE,EAAS,GAAKD,EAAU,GAAOC,EAAS,GAAKD,EAAU,EACtDC,EAASD,EACTC,KAMaH,KAAKI,GACNJ,KAAKK,EACHL,KAAKM,IACLN,KAAKO,IACLP,KAAKQ,IACJR,KAAKS,KACLT,KAAKU,KACLV,KAAKW,KACJhK,EAAGqJ,KAAKY,OASxBC,IAAAA,EAAkBb,KAAKc,KACvBC,EAAgBf,KAAKgB,MAGrBC,GAFgBjB,KAAKkB,MACNlB,KAAKmB,KACNnB,KAAKjG,KACHqH,MAMFzK,EAAG,SAASF,EAAGG,GAAYH,OAAAA,GAAKG,IAChCD,EAAG,SAASF,EAAGG,GAAYH,OAAAA,GAAKG,IAChCD,EAAG,SAASF,EAAGG,GAAYH,OAAAA,IAAMG,IAIhCD,EAAG,SAASF,EAAGG,GAE1BH,OAAAA,EAAIG,IARRyK,IAWAC,EAAc3K,EAAG,SAASF,EAAGG,GAEzBH,OAAAA,EAAIG,IAGR2K,EAAe5K,EAAG,SAASF,EAAGG,GAE1BH,OAAAA,EAAIG,IAQeD,EAAG,SAASwB,EAAQ1B,GAEvCA,OAAAA,GAAK0B,IAGexB,EAAG,SAASwB,EAAQ1B,GAExCA,OAAAA,GAAK0B,IAGiBxB,EAAG,SAASwB,EAAQ1B,GAE1CA,OAAAA,IAAM0B,IAZVqJ,IAiBAC,GAAe9K,EAAG,SAAS+K,EAAKtG,GAE5BsG,OAAAA,EAAMtG,IAeOzE,EAAG,SAASF,EAAGG,GAE5BH,OAAAA,EAAIG,IAQMD,EAAG,SAASyB,EAAMkC,GAK5B7C,IAHHkK,IAAAA,EAAMrH,EAAO3B,OACbG,EAAQ,IAAIR,MAAMqJ,GAClBlK,EAAI,EACDA,EAAIkK,GACX,CACKC,IAAAA,EAAOtH,EAAOuH,WAAWpK,GACzB,OAAUmK,GAAQA,GAAQ,OAE7B9I,EAAMrB,GAAKW,EAAKkG,EAAWhE,EAAO7C,GAAK6C,EAAO7C,EAAE,KAChDA,GAAK,IAGNqB,EAAMrB,GAAKW,EAAKkG,EAAWhE,EAAO7C,KAClCA,KAEMqB,OAAAA,EAAMiC,KAAK,MAjBf+G,IAoBAC,GAAiBpL,EAAG,SAASqL,EAAQ5G,GAKjC3D,IAHH8H,IAAAA,EAAM,GACNoC,EAAMvG,EAAIzC,OACVlB,EAAI,EACDA,EAAIkK,GACX,CACKM,IAAAA,EAAO7G,EAAI3D,GACXmK,EAAOxG,EAAIyG,WAAWpK,GAC1BA,IACI,OAAUmK,GAAQA,GAAQ,QAE7BK,GAAQ7G,EAAI3D,GACZA,KAGGuK,EAAO1D,EAAW2D,KAErB1C,EAAIzE,KAAKmH,GAGJ1C,OAAAA,EAAIxE,KAAK,MA2BGlE,EAAG,SAASuB,EAAM8J,EAAO5H,GAIrC7C,IAFHkK,IAAAA,EAAMrH,EAAO3B,OACblB,EAAI,EACDA,EAAIkK,GACX,CACKM,IAAAA,EAAO3H,EAAO7C,GACdmK,EAAOtH,EAAOuH,WAAWpK,GAC7BA,IACI,OAAUmK,GAAQA,GAAQ,QAE7BK,GAAQ3H,EAAO7C,GACfA,KAEDyK,EAAQxK,EAAGU,EAAMkG,EAAW2D,GAAOC,GAE7BA,OAAAA,IAhBJC,IAmBAC,GAAgBvL,EAAG,SAASuB,EAAM8J,EAAO5H,GAGrC7C,IADHA,IAAAA,EAAI6C,EAAO3B,OACRlB,KACP,CACKwK,IAAAA,EAAO3H,EAAO7C,GACdmK,EAAOtH,EAAOuH,WAAWpK,GACzB,OAAUmK,GAAQA,GAAQ,QAG7BK,EAAO3H,IADP7C,GACmBwK,GAEpBC,EAAQxK,EAAGU,EAAMkG,EAAW2D,GAAOC,GAE7BA,OAAAA,IAGJG,GAAgB1L,EAAG,SAAS2L,EAAKlH,GAE7BA,OAAAA,EAAImH,MAAMD,KAGdE,GAAe7L,EAAG,SAAS2L,EAAKG,GAE5BA,OAAAA,EAAK1H,KAAKuH,KAGdI,GAAgB7L,EAAG,SAASmG,EAAOE,EAAK9B,GACpCA,OAAAA,EAAI7B,MAAMyD,EAAOE,KAsCPvG,EAAG,SAASqL,EAAQ1H,GAG9B7C,IADHA,IAAAA,EAAI6C,EAAO3B,OACRlB,KACP,CACKwK,IAAAA,EAAO3H,EAAO7C,GACdmK,EAAOtH,EAAOuH,WAAWpK,GAMzBuK,GALA,OAAUJ,GAAQA,GAAQ,QAG7BK,EAAO3H,IADP7C,GACmBwK,GAEhBD,EAAO1D,EAAW2D,IAEd,OAAA,EAGF,OAAA,IAjBJU,IAoBAC,GAAcjM,EAAG,SAASqL,EAAQ1H,GAG9B7C,IADHA,IAAAA,EAAI6C,EAAO3B,OACRlB,KACP,CACKwK,IAAAA,EAAO3H,EAAO7C,GACdmK,EAAOtH,EAAOuH,WAAWpK,GAMzB,GALA,OAAUmK,GAAQA,GAAQ,QAG7BK,EAAO3H,IADP7C,GACmBwK,IAEfD,EAAO1D,EAAW2D,IAEf,OAAA,EAGF,OAAA,IAGJY,GAAmBlM,EAAG,SAASmM,EAAK1H,GAEhCA,OAAAA,EAAIG,QAAQuH,IAAQ,IAcxBC,IAXqBpM,EAAG,SAASmM,EAAK1H,GAElCA,OAAqB,IAArBA,EAAIG,QAAQuH,KAGGnM,EAAG,SAASmM,EAAK1H,GAEhCA,OAAAA,EAAIzC,QAAUmK,EAAInK,QACxByC,EAAI4H,YAAYF,KAAS1H,EAAIzC,OAASmK,EAAInK,SAGtBhC,EAAG,SAASmM,EAAK1H,GAElC6H,IAAAA,EAASH,EAAInK,OAEbsK,GAAAA,EAAS,EAEL/D,OAAAA,EAMD,IAHHzH,IAAAA,EAAI,EACJyL,EAAK,IAEDzL,EAAI2D,EAAIG,QAAQuH,EAAKrL,KAAO,GAEnCyL,EAAGpI,KAAKrD,GACRA,GAAQwL,EAGF3D,OAAAA,EAAgB4D,MAMfC,SAAAA,GAAmBC,GAEpBA,OAAAA,EAAS,GA2HRC,SAAAA,GAAiBC,GAElB,MAAA,CAAE3I,EAAG,EAAG/D,EAAG0M,GAGGD,GAAiB,SAASrK,GACvC,MAAiB,iBAAVA,EACZuK,GAAgB,SAAUvK,IAE3B,WAAaA,GAASA,EAAQ,aAAuB,EAARA,KAAeA,EAC3DwK,GAAmBxK,IAErByK,SAASzK,IAAYA,EAAQ,EAE3BuK,GAAgB,SAAUvK,GAD1BwK,GAAmBxK,KAIAqK,GAAiB,SAASrK,GACxC,MAAiB,kBAAVA,EACZwK,GAAmBxK,GACnBuK,GAAgB,SAAUvK,KAGNqK,GAAiB,SAASrK,GACzC,MAAiB,iBAAVA,EACZwK,GAAmBxK,GACnBuK,GAAgB,UAAWvK,KArB3B0K,IAwBAC,GAAoBN,GAAiB,SAASrK,GAC1CwK,OAAAA,GAAmBI,GAAW5K,MAGlC6K,GAAqBR,GAAiB,SAASrK,GAC1C,MAAiB,iBAAVA,EACZwK,GAAmBxK,GAClBA,aAAiBuB,OACjBiJ,GAAmBxK,EAAQ,IAC3BuK,GAAgB,WAAYvK,KAQ7B8K,IAAAA,GAAoBnN,EAAG,SAASkF,EAAOyH,GAEnC,MAAA,CACN3I,EAAG,EACH3D,EAAG6E,EACHjF,EAAG0M,KAImB3M,EAAG,SAASkC,EAAOyK,GAEnC,MAAA,CACN3I,EAAG,EACHzD,EAAG2B,EACHjC,EAAG0M,KAYIS,SAAAA,GAAcrN,EAAGsN,GAElB,MAAA,CACNrJ,EAAG,EACHjE,EAAGA,EACHW,EAAG2M,GAIDC,IAAAA,GAAgBtN,EAAG,SAASuN,EAAUZ,GAElC,MAAA,CACN3I,EAAG,GACH/D,EAAG0M,EACH/L,EAAG2M,KAeDC,IAAAA,GAAaxN,EAAG,SAASD,EAAG0N,GAExBL,OAAAA,GAAcrN,EAAG,CAAC0N,MAGtBC,GAAaxN,EAAG,SAASH,EAAG0N,EAAIE,GAE5BP,OAAAA,GAAcrN,EAAG,CAAC0N,EAAIE,MAiD1BC,IA9CaxN,EAAG,SAASL,EAAG0N,EAAIE,EAAIE,GAEhCT,OAAAA,GAAcrN,EAAG,CAAC0N,EAAIE,EAAIE,MAGjBvN,EAAG,SAASP,EAAG0N,EAAIE,EAAIE,EAAIC,GAEpCV,OAAAA,GAAcrN,EAAG,CAAC0N,EAAIE,EAAIE,EAAIC,MAGrBtN,EAAG,SAAST,EAAG0N,EAAIE,EAAIE,EAAIC,EAAIC,GAExCX,OAAAA,GAAcrN,EAAG,CAAC0N,EAAIE,EAAIE,EAAIC,EAAIC,MAGzBtN,EAAG,SAASV,EAAG0N,EAAIE,EAAIE,EAAIC,EAAIC,EAAIC,GAE5CZ,OAAAA,GAAcrN,EAAG,CAAC0N,EAAIE,EAAIE,EAAIC,EAAIC,EAAIC,MAG7BrN,EAAG,SAASZ,EAAG0N,EAAIE,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,GAEhDb,OAAAA,GAAcrN,EAAG,CAAC0N,EAAIE,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,MAGjCpN,EAAG,SAASd,EAAG0N,EAAIE,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAEpDd,OAAAA,GAAcrN,EAAG,CAAC0N,EAAIE,EAAIE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,MAM9BlO,EAAG,SAAS2M,EAAShJ,GAG5C,IAEQwK,OAAAA,GAAcxB,EADTyB,KAAKC,MAAM1K,IAGxB,MAAOpD,GAEC+N,OAAAA,GAAoBvN,EAAGwN,GAA8B,2BAA6BhO,EAAE4F,QAAS8G,GAAWtJ,QAIjG3D,EAAG,SAAS2M,EAAStK,GAE7B8L,OAAAA,GAAcxB,EAAS6B,GAAanM,OAGnC8L,SAAAA,GAAcxB,EAAStK,GAEvBsK,OAAAA,EAAQ3I,GAEV,KAAA,EACG2I,OAAAA,EAAQ1M,EAAEoC,GAEb,KAAA,EACIA,OAAU,OAAVA,EACLwK,GAAmBF,EAAQxM,GAC3ByM,GAAgB,OAAQvK,GAEvB,KAAA,EACA,OAACoM,GAAcpM,GAIZqM,GAAsB/B,EAAQ1M,EAAGoC,EAAOsG,GAFvCiE,GAAgB,SAAUvK,GAI9B,KAAA,EACA,OAACoM,GAAcpM,GAIZqM,GAAsB/B,EAAQ1M,EAAGoC,EAAOsM,IAFvC/B,GAAgB,WAAYvK,GAIhC,KAAA,EACA6C,IAAAA,EAAQyH,EAAQtM,EAChB,GAAiB,WAAjB,EAAOgC,IAAgC,OAAVA,KAAoB6C,KAAS7C,GAEtDuK,OAAAA,GAAgB,iCAAmC1H,EAAQ,IAAK7C,GAEpEX,IAAAA,EAASyM,GAAcxB,EAAQ1M,EAAGoC,EAAM6C,IACpC0J,OAAAA,GAAqBlN,GAAWA,EAAS4M,GAAoBvN,EAAG8N,GAA4B3J,EAAOxD,EAAO5B,IAE9G,KAAA,EACAoC,IAAAA,EAAQyK,EAAQpM,EAChB,IAACkO,GAAcpM,GAEXuK,OAAAA,GAAgB,WAAYvK,GAEhCH,GAAAA,GAASG,EAAML,OAEX4K,OAAAA,GAAgB,8BAAgC1K,EAAQ,iBAAmBG,EAAML,OAAS,WAAYK,GAE1GX,EAASyM,GAAcxB,EAAQ1M,EAAGoC,EAAMH,IACpC0M,OAAAA,GAAqBlN,GAAWA,EAAS4M,GAAoBvN,EAAG+N,GAA4B5M,EAAOR,EAAO5B,IAE9G,KAAA,EACA,GAAiB,WAAjB,EAAOuC,IAAgC,OAAVA,GAAkBoM,GAAcpM,GAEzDuK,OAAAA,GAAgB,YAAavK,GAGjC0M,IAAAA,EAAgBxG,EAEf,IAAA,IAAItD,KAAO5C,EAEXA,GAAAA,EAAM2M,eAAe/J,GACzB,CACKvD,EAASyM,GAAcxB,EAAQ1M,EAAGoC,EAAM4C,IACxC,IAAC2J,GAAqBlN,GAElB4M,OAAAA,GAAoBvN,EAAG8N,GAA4B5J,EAAKvD,EAAO5B,IAEvEiP,EAAgB3G,EAAWrG,EAAckD,EAAKvD,EAAO5B,GAAIiP,GAGpDlC,OAAAA,GAAmBoC,GAAsBF,IAE5C,KAAA,EAGC,IAFDvF,IAAAA,EAASmD,EAAQ5M,EACjBsN,EAAWV,EAAQjM,EACdI,EAAI,EAAGA,EAAIuM,EAASrL,OAAQlB,IACrC,CACKY,EAASyM,GAAcd,EAASvM,GAAIuB,GACpC,IAACuM,GAAqBlN,GAElBA,OAAAA,EAER8H,EAASA,EAAO9H,EAAO5B,GAEjB+M,OAAAA,GAAmBrD,GAEtB,KAAA,GACA9H,EAASyM,GAAcxB,EAAQ1M,EAAGoC,GAC9B,OAACuM,GAAqBlN,GAE3ByM,GAAcxB,EAAQ/L,EAAEc,EAAO5B,GAAIuC,GADnCX,EAGC,KAAA,GAEC,IADDwN,IAAAA,EAAS3G,EACJ4G,EAAOxC,EAAQjM,EAAGyO,EAAKlP,EAAGkP,EAAOA,EAAKlP,EAC/C,CACKyB,EAASyM,GAAcgB,EAAKrP,EAAGuC,GAC/BuM,GAAAA,GAAqBlN,GAEjBA,OAAAA,EAERwN,EAAS9G,EAAW1G,EAAO5B,EAAGoP,GAExBZ,OAAAA,GAAoBc,GAA2BH,GAAsBC,KAExE,KAAA,EACGZ,OAAAA,GAAoBvN,EAAGwN,GAA8B5B,EAAQ7M,EAAGmN,GAAW5K,KAE9E,KAAA,EACGwK,OAAAA,GAAmBF,EAAQ7M,IAI5B4O,SAAAA,GAAsB/B,EAAStK,EAAOgN,GAIzC,IAFDrE,IAAAA,EAAM3I,EAAML,OACZG,EAAQ,IAAIR,MAAMqJ,GACblK,EAAI,EAAGA,EAAIkK,EAAKlK,IACzB,CACKY,IAAAA,EAASyM,GAAcxB,EAAStK,EAAMvB,IACtC,IAAC8N,GAAqBlN,GAElB4M,OAAAA,GAAoBvN,EAAG+N,GAA4BhO,EAAGY,EAAO5B,IAErEqC,EAAMrB,GAAKY,EAAO5B,EAEZ+M,OAAAA,GAAmBwC,EAAWlN,IAG7BsM,SAAAA,GAAcpM,GAEfV,OAAAA,MAAM2N,QAAQjN,IAA+B,mBAAbkN,UAA2BlN,aAAiBkN,SAG3EZ,SAAAA,GAAiBxM,GAElBpB,OAAAA,EAAGyO,GAA2BrN,EAAMH,OAAQ,SAASlB,GAAYqB,OAAAA,EAAMrB,KAGtE8L,SAAAA,GAAgB6C,EAAMpN,GAEvBiM,OAAAA,GAAoBvN,EAAGwN,GAA8B,aAAekB,EAAMxC,GAAW5K,KAMpFqN,SAAAA,GAAejJ,EAAGC,GAEtBD,GAAAA,IAAMC,EAEF,OAAA,EAGJD,GAAAA,EAAEzC,IAAM0C,EAAE1C,EAEN,OAAA,EAGAyC,OAAAA,EAAEzC,GAEJ,KAAA,EACA,KAAA,EACGyC,OAAAA,EAAE3G,IAAM4G,EAAE5G,EAEb,KAAA,EACG2G,OAAAA,EAAExG,IAAMyG,EAAEzG,EAEb,KAAA,EACGwG,OAAAA,EAAEtG,IAAMuG,EAAEvG,EAEb,KAAA,EACA,KAAA,EACA,KAAA,EACGuP,OAAAA,GAAejJ,EAAExG,EAAGyG,EAAEzG,GAEzB,KAAA,EACGwG,OAAAA,EAAEpG,IAAMqG,EAAErG,GAAKqP,GAAejJ,EAAExG,EAAGyG,EAAEzG,GAExC,KAAA,EACGwG,OAAAA,EAAElG,IAAMmG,EAAEnG,GAAKmP,GAAejJ,EAAExG,EAAGyG,EAAEzG,GAExC,KAAA,EACGwG,OAAAA,EAAE1G,IAAM2G,EAAE3G,GAAK4P,GAAmBlJ,EAAE/F,EAAGgG,EAAEhG,GAE5C,KAAA,GACG+F,OAAAA,EAAE7F,IAAM8F,EAAE9F,GAAK8O,GAAejJ,EAAExG,EAAGyG,EAAEzG,GAExC,KAAA,GACG0P,OAAAA,GAAmBlJ,EAAE/F,EAAGgG,EAAEhG,IAI3BiP,SAAAA,GAAmBC,EAAWC,GAElC7E,IAAAA,EAAM4E,EAAU5N,OAChBgJ,GAAAA,IAAQ6E,EAAU7N,OAEd,OAAA,EAEH,IAAA,IAAIlB,EAAI,EAAGA,EAAIkK,EAAKlK,IAEpB,IAAC4O,GAAeE,EAAU9O,GAAI+O,EAAU/O,IAEpC,OAAA,EAGF,OAAA,EAMJgP,IAAAA,GAAe9P,EAAG,SAAS+P,EAAa1N,GAEpC+L,OAAAA,KAAK4B,UAAUxB,GAAanM,GAAQ,KAAM0N,GAAe,KAGxD9C,SAAAA,GAAW5K,GAAgB,MAAA,CAAE2B,EAAG,EAAGlE,EAAGuC,GACtCmM,SAAAA,GAAanM,GAAgBA,OAAAA,EAAMvC,EAQxCmQ,IAAAA,GAAiB/P,EAAG,SAAS+E,EAAK5C,EAAO6N,GAGrCA,OADPA,EAAOjL,GAAOuJ,GAAanM,GACpB6N,IAYejD,GAAW,MAMzBkD,SAAAA,GAAmB9N,GAEpB,MAAA,CACN2B,EAAG,EACHlE,EAAGuC,GAYI+N,SAAAA,GAAmB7C,GAEpB,MAAA,CACNvJ,EAAG,EACH/D,EAAGsN,EACHpN,EAAG,MAIDkQ,IAAAA,GAAqBrQ,EAAG,SAASuN,EAAU+C,GAEvC,MAAA,CACNtM,EAAG,EACH/D,EAAGsN,EACHlN,EAAGiQ,KAIoBtQ,EAAG,SAASuN,EAAU+C,GAEvC,MAAA,CACNtM,EAAG,EACH/D,EAAGsN,EACHlN,EAAGiQ,KAeDC,IAAAA,GAAkB,EAEbC,SAAAA,GAAoBF,GAExBG,IAAAA,EAAO,CACVzM,EAAG,EACHzD,EAAGgQ,KACHxQ,EAAGuQ,EACH5P,EAAG,KACHE,EAAG,IAKG6P,OAFPC,GAAmBD,GAEZA,EAGCE,SAAAA,GAAiBL,GAElBF,OAAAA,GAAmB,SAAS7C,GAClCA,EAAS4C,GAAmBK,GAAoBF,OAIzCM,SAAAA,GAAmBH,EAAMI,GAEjCJ,EAAK7P,EAAEuD,KAAK0M,GACZH,GAAmBD,GAGhBK,IAAAA,GAAkB9Q,EAAG,SAASyQ,EAAMI,GAEhCT,OAAAA,GAAmB,SAAS7C,GAClCqD,GAAmBH,EAAMI,GACzBtD,EAAS4C,GAAmB1I,QAiC1BsJ,IAAAA,IAAqB,EACrBC,GAAmB,GAGdN,SAAAA,GAAmBD,GAGvBM,GADJC,GAAiB7M,KAAKsM,IAClBM,GAAAA,CAKGN,IADPM,IAAqB,EACdN,EAAOO,GAAiBC,SAE9BC,GAAgBT,GAEjBM,IAAqB,GAIbG,SAAAA,GAAgBT,GAEjBA,KAAAA,EAAK1Q,GACZ,CACKoR,IAAAA,EAAUV,EAAK1Q,EAAEiE,EACjBmN,GAAY,IAAZA,GAA6B,IAAZA,EACrB,CACQV,KAAAA,EAAK/P,GAAK+P,EAAK/P,EAAEsD,IAAMmN,GAE7BV,EAAK/P,EAAI+P,EAAK/P,EAAEI,EAEb,IAAC2P,EAAK/P,EAET,OAED+P,EAAK1Q,EAAI0Q,EAAK/P,EAAET,EAAEwQ,EAAK1Q,EAAED,GACzB2Q,EAAK/P,EAAI+P,EAAK/P,EAAEI,MAEZ,CAAA,GAAgB,IAAZqQ,EAMR,YAJAV,EAAK1Q,EAAEI,EAAIsQ,EAAK1Q,EAAEE,EAAE,SAASmR,GAC5BX,EAAK1Q,EAAIqR,EACTV,GAAmBD,MAIhB,GAAgB,IAAZU,EACT,CACKV,GAAkB,IAAlBA,EAAK7P,EAAEoB,OAEV,OAEDyO,EAAK1Q,EAAI0Q,EAAK1Q,EAAEE,EAAEwQ,EAAK7P,EAAEqQ,cAIzBR,EAAK/P,EAAI,CACRsD,EAAe,IAAZmN,EAAgB,EAAI,EACvBlR,EAAGwQ,EAAK1Q,EAAEE,EACVa,EAAG2P,EAAK/P,GAET+P,EAAK1Q,EAAI0Q,EAAK1Q,EAAEM,IAwBID,EAAG,SAASiR,EAAMC,EAAaC,EAAeC,GAE7DC,OAAAA,GACNH,EACAE,EACAH,EAAKK,KACLL,EAAKM,OACLN,EAAKO,cACL,WAAoB,OAAA,iBASbH,SAAAA,GAAqBH,EAAaE,EAAME,EAAMC,EAAQC,EAAeC,GAEzEnQ,IAlpBwBoQ,EAkpBxBpQ,EAASX,EAAG6M,GAAW0D,EAAarE,GAAWuE,EAAOA,EAAI,WAAYO,IAC1EnD,GAAqBlN,IAAW4D,EAAa,GAnpBjBwM,EAmpB6CpQ,EAAO5B,EAjpBzEkS,GAAmCF,KAkpBtCG,IAAAA,EAAW,GAEXC,GADJxQ,EAASgQ,EAAKhQ,EAAO5B,IACFA,EACfqS,EAAUN,EAAeO,EAAWF,GACpCG,EAuCIC,SAAuBL,EAAUG,GAErCC,IAAAA,EAGC,IAAA,IAAIpN,KAAOsN,GAChB,CACKC,IAAAA,EAAUD,GAAyBtN,GAEnCuN,EAAQ1S,KAEXuS,EAAQA,GAAS,IACXpN,GAAOuN,EAAQ1S,EAAEmF,EAAKmN,IAG7BH,EAAShN,GAAOwN,GAA6BD,EAASJ,GAGhDC,OAAAA,EAzDKC,CAAuBL,EAAUG,GAEpCA,SAAAA,EAAUvB,EAAK6B,GAEvBhR,EAASX,EAAG4Q,EAAQd,EAAKqB,GACzBC,EAAQD,EAAQxQ,EAAO5B,EAAG4S,GAC1BC,GAA0BV,EAAUvQ,EAAOzB,EAAG2R,EAAcM,IAKtDG,OAFPM,GAA0BV,EAAUvQ,EAAOzB,EAAG2R,EAAcM,IAErDG,EAAQ,CAAEA,MAAOA,GAAU,GAyB/BE,IAAAA,GAA2B,GAqCtBE,SAAAA,GAA6BG,EAAMR,GAEvCS,IAAAA,EAAS,CACZnS,EAAG0R,EACHxR,OAAGmR,GAGAe,EAAYF,EAAKzS,EACjB4S,EAAYH,EAAKvS,EACjB2S,EAASJ,EAAKrS,EACd0S,EAASL,EAAK7S,EAmBX8S,OAAAA,EAAOjS,EAAI4P,GAAoBzP,EAAGsP,GAjBhC6C,SAAAA,EAAK3H,GAENxK,OAAAA,EAAGsP,GAAoB6C,EAjRxB,CACNlP,EAAG,EACH/D,EA+QuD,SAAS4Q,GAE3DxO,IAAAA,EAAQwO,EAAI/Q,EAEZ+Q,OAAU,IAAVA,EAAI7M,EAEAhD,EAAG+R,EAAWF,EAAQxQ,EAAOkJ,GAG9ByH,GAAUC,EACdhS,EAAG6R,EAAWD,EAAQxQ,EAAMvB,EAAGuB,EAAM8Q,EAAG5H,GACxCvK,EAAG8R,EAAWD,EAAQG,EAAS3Q,EAAMvB,EAAIuB,EAAM8Q,EAAG5H,OAIYqH,EAAK3S,IAQrEmT,IAAAA,GAAsBpT,EAAG,SAAS6S,EAAQhC,GAEtCT,OAAAA,GAAmB,SAAS7C,GAElCsF,EAAOnS,EAAEmQ,GACTtD,EAAS4C,GAAmB1I,QAKHzH,EAAG,SAAS6S,EAAQhC,GAEvC9P,OAAAA,EAAG+P,GAAiB+B,EAAOjS,EAAG,CACpCoD,EAAG,EACHlE,EAAG+Q,MASIwC,SAAAA,GAAeC,GAEhB,OAAA,SAASjR,GAER,MAAA,CACN2B,EAAG,EACHE,EAAGoP,EACHC,EAAGlR,IAecrC,EAAG,SAASwT,EAAQC,GAEhC,MAAA,CACNzP,EAAG,EACHlB,EAAG0Q,EACHE,EAAGD,KASId,SAAAA,GAA0BV,EAAU0B,EAAQC,GAEhDC,IAAAA,EAAc,GAIb,IAAA,IAAIP,KAHTQ,IAAwB,EAAMH,EAAQE,EAAa,MACnDC,IAAwB,EAAOF,EAAQC,EAAa,MAEnC5B,EAEhBrB,GAAmBqB,EAASqB,GAAO,CAClCtP,EAAG,KACHlE,EAAG+T,EAAYP,IAAS,CAAExS,EAAGyH,EAAW4K,EAAG5K,KAMrCuL,SAAAA,GAAwBC,EAAON,EAAKI,EAAaG,GAEjDP,OAAAA,EAAIzP,GAEN,KAAA,EACAsP,IAAAA,EAAOG,EAAIvP,EACX+P,EAqBEC,SAAmBH,EAAOT,EAAMU,EAAS3R,GAe1CtB,OAAAA,EAJGgT,EACPxB,GAAyBe,GAAM/S,EAC/BgS,GAAyBe,GAAMvT,EAXzBoU,SAAa1N,GAEhB,IAAA,IAAI0I,EAAO6E,EAAS7E,EAAMA,EAAOA,EAAKiF,EAE1C3N,EAAI0I,EAAKkF,EAAE5N,GAELA,OAAAA,GAOqBpE,GApCd6R,CAAmBH,EAAOT,EAAMU,EAASP,EAAIF,GAE1D,YADAM,EAAYP,GAuCNgB,SAAiBP,EAAOQ,EAAWC,GAQpCA,OANPA,EAAUA,GAAW,CAAE1T,EAAGyH,EAAW4K,EAAG5K,GAExCwL,EACIS,EAAQ1T,EAAIsH,EAAWmM,EAAWC,EAAQ1T,GAC1C0T,EAAQrB,EAAI/K,EAAWmM,EAAWC,EAAQrB,GAEvCqB,EA/CeF,CAAiBP,EAAOE,EAAQJ,EAAYP,KAG5D,KAAA,EACC,IAAA,IAAImB,EAAOhB,EAAIiB,EAAGD,EAAKxU,EAAGwU,EAAOA,EAAKxU,EAE1C6T,GAAwBC,EAAOU,EAAK3U,EAAG+T,EAAaG,GAErD,OAEI,KAAA,EAKJ,YAJAF,GAAwBC,EAAON,EAAIC,EAAGG,EAAa,CAClDQ,EAAGZ,EAAI3Q,EACPsR,EAAGJ,KA0CEW,SAAAA,GAAwB3P,GAE5BuN,GAAyBvN,IAE5BM,EAAa,EAAGN,GAqBd4P,IAAAA,GAA4B5U,EAAG,SAASwT,EAAQnR,GAAgBA,OAAAA,IAG3DwS,SAAAA,GAA4B7P,GAEhC8P,IA/TmBC,EA+TnBD,EAAO,GACPE,EAAYzC,GAAyBvN,GAAMiQ,EAI3CvD,GApUmBqD,EAoUG,EAlUnB3E,GAAmB,SAAS7C,GAC9B2H,IAAAA,EAAKC,WAAW,WACnB5H,EAAS4C,GAAmB1I,KAC1BsN,GAEI,OAAA,WAAaK,aAAaF,OAkW3B,OAnCP3C,GAAyBvN,GAAM/E,EAAIyR,EACnCa,GAAyBvN,GAAM7E,EAAID,EAAG,SAAS2S,EAAQwC,EAAS9J,GAEvD8J,KAAAA,EAAQpV,EAAGoV,EAAUA,EAAQpV,EAK/B,IAFDqV,IAAAA,EAAcR,EACdzS,EAAQmM,GAAawG,EAAUK,EAAQvV,IAClCgB,EAAI,EAAGA,EAAIwU,EAAYtT,OAAQlB,IAEvCwU,EAAYxU,GAAGuB,GAGVqP,OAAAA,IAsBD,CACN6D,UAlBQA,SAAUhI,GAElBuH,EAAK3Q,KAAKoJ,IAiBViI,YAdQA,SAAYjI,GAKhBrL,IAAAA,GADJ4S,EAAOA,EAAKlS,SACKgC,QAAQ2I,GACrBrL,GAAS,GAEZ4S,EAAKW,OAAOvT,EAAO,KA2BlBwT,IAmGAC,GAnGAD,GAA4B1V,EAAG,SAASwT,EAAQoC,GAE5C,OAAA,SAASvT,GAERmR,OAAAA,EAAOoC,EAAYvT,OAKnBwT,SAAAA,GAA4B7Q,EAAMoN,GAEtC0C,IAAAA,EAAOvM,EACPyM,EAAYzC,GAAyBvN,GAAMiQ,EAI3CvD,EAAOvB,GAAmB,MAwBvB,OAtBPoC,GAAyBvN,GAAM/E,EAAIyR,EACnCa,GAAyBvN,GAAM7E,EAAID,EAAG,SAAS2S,EAAQiD,EAASvK,GAGxDmG,OADPoD,EAAOgB,EACApE,IAkBD,CAAEqE,KAbAA,SAAKC,GAETtU,IAAAA,EAASX,EAAG6M,GAAWoH,EAAW/H,GAAW+I,IAEjDpH,GAAqBlN,IAAW4D,EAAa,EAAGN,EAAMtD,EAAO5B,GAGxD,IADDuC,IAAAA,EAAQX,EAAO5B,EACVqP,EAAO2F,EAAM3F,EAAKlP,EAAGkP,EAAOA,EAAKlP,EAEzCmS,EAAUjD,EAAKrP,EAAEuC,MAiEhB4T,IAAAA,GAAsC,oBAAbpQ,SAA2BA,SAAW,GAG1DqQ,SAAAA,GAAwBC,EAAQC,GAExCD,EAAOE,YAAYD,GAGGhW,EAAG,SAASkW,EAAahF,EAAaC,EAAeC,GAQvE+E,IAAAA,EAAO/E,GAAQA,EAAI,KAAWA,EAAI,KAAWlM,EAAa,GAQvD,OALPiR,EAAKC,WAAWC,aACfC,GAAmBJ,EAAa,cAChCC,GAGM,KAQCI,SAAAA,GAAiBhT,GAElB,MAAA,CACNK,EAAG,EACHlE,EAAG6D,GASDiT,IAwBAC,GAxBqB7W,EAAG,SAAS8W,EAAW3T,GAExCnD,OAAAA,EAAG,SAAS+W,EAAUC,GAEvB,IAAA,IAAIC,EAAO,GAAIC,EAAmB,EAAGF,EAAQ/W,EAAG+W,EAAUA,EAAQ/W,EACvE,CACKkX,IAAAA,EAAMH,EAAQlX,EAClBoX,GAAqBC,EAAIlX,GAAK,EAC9BgX,EAAK9S,KAAKgT,GAIJ,OAFPD,GAAoBD,EAAKjV,OAElB,CACNgC,EAAG,EACH7D,EAAGgD,EACH9C,EAAG+W,GAA0BL,GAC7BxW,EAAG0W,EACHlX,EAAG+W,EACH7W,EAAGiX,MAMiBN,MAAmB7E,GAOZ/R,EAAG,SAAS8W,EAAW3T,GAE7CnD,OAAAA,EAAG,SAAS+W,EAAUC,GAEvB,IAAA,IAAIC,EAAO,GAAIC,EAAmB,EAAGF,EAAQ/W,EAAG+W,EAAUA,EAAQ/W,EACvE,CACKkX,IAAAA,EAAMH,EAAQlX,EAClBoX,GAAqBC,EAAIlX,EAAEA,GAAK,EAChCgX,EAAK9S,KAAKgT,GAIJ,OAFPD,GAAoBD,EAAKjV,OAElB,CACNgC,EAAG,EACH7D,EAAGgD,EACH9C,EAAG+W,GAA0BL,GAC7BxW,EAAG0W,EACHlX,EAAG+W,EACH7W,EAAGiX,MAMsBG,MAAwBtF,GAuB9B/R,EAAG,SAASwT,EAAQ+C,GAElC,MAAA,CACNvS,EAAG,EACHmP,EAAGK,EACHtP,EAAGqS,EACHtW,EAAG,GAAKsW,EAAKtW,GAAK,MASXqX,SAAAA,GAAkBC,EAAMC,GAEzB,MAAA,CACNxT,EAAG,EACHuP,EAAGgE,EACH7C,EAAG8C,EACHtT,OAAG6N,GAIkB/R,EAAG,SAASyB,EAAM3B,GAEjCwX,OAAAA,GAAkB,CAAC7V,EAAM3B,GAAI,WAC5B2B,OAAAA,EAAK3B,OAIUI,EAAG,SAASuB,EAAM3B,EAAGG,GAErCqX,OAAAA,GAAkB,CAAC7V,EAAM3B,EAAGG,GAAI,WAC/Bc,OAAAA,EAAGU,EAAM3B,EAAGG,OAIGG,EAAG,SAASqB,EAAM3B,EAAGG,EAAGE,GAExCmX,OAAAA,GAAkB,CAAC7V,EAAM3B,EAAGG,EAAGE,GAAI,WAClCa,OAAAA,EAAGS,EAAM3B,EAAGG,EAAGE,OAIAG,EAAG,SAASmB,EAAM3B,EAAGG,EAAGE,EAAGE,GAE3CiX,OAAAA,GAAkB,CAAC7V,EAAM3B,EAAGG,EAAGE,EAAGE,GAAI,WACrCY,OAAAA,EAAGQ,EAAM3B,EAAGG,EAAGE,EAAGE,OAIHG,EAAG,SAASiB,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,GAE9C+W,OAAAA,GAAkB,CAAC7V,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,GAAI,WACxCW,OAAAA,EAAGO,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,OAINE,EAAG,SAASgB,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,GAEjDuX,OAAAA,GAAkB,CAAC7V,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,GAAI,WAC3CoB,OAAAA,EAAGM,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,OAITY,EAAG,SAASc,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,GAEpD4W,OAAAA,GAAkB,CAAC7V,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,GAAI,WAC9C+W,OAn7EAA,SAAG7X,EAAKE,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,GAC1Bd,OAAU,IAAVA,EAAIE,EAAUF,EAAIG,EAAED,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,GAAKd,EAAIE,EAAJF,CAAOK,EAAPL,CAAUO,EAAVP,CAAaS,EAAbT,CAAgBW,EAAhBX,CAAmBG,EAAnBH,CAAsBc,GAk7EjE+W,CAAGhW,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,OAIZG,EAAG,SAASY,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,EAAGE,GAEvD0W,OAAAA,GAAkB,CAAC7V,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,EAAGE,GAAI,WACjD8W,OAv7EAA,SAAG9X,EAAKE,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,EAAGE,GAC7BhB,OAAU,IAAVA,EAAIE,EAAUF,EAAIG,EAAED,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,EAAGE,GAAKhB,EAAIE,EAAJF,CAAOK,EAAPL,CAAUO,EAAVP,CAAaS,EAAbT,CAAgBW,EAAhBX,CAAmBG,EAAnBH,CAAsBc,EAAtBd,CAAyBgB,GAs7EvE8W,CAAGjW,EAAM3B,EAAGG,EAAGE,EAAGE,EAAGE,EAAGR,EAAGW,EAAGE,OApDnC+W,IA6DAC,GAAiB5X,EAAG,SAASiF,EAAK4S,GAE9B,MAAA,CACN7T,EAAG,KACHlB,EAAGmC,EACHyO,EAAGmE,KAGDC,GAAoB9X,EAAG,SAASiF,EAAK5C,GAEjC,MAAA,CACN2B,EAAG,KACHlB,EAAGmC,EACHyO,EAAGrR,KAGD0V,GAAuB/X,EAAG,SAASiF,EAAK5C,GAEpC,MAAA,CACN2B,EAAG,KACHlB,EAAGmC,EACHyO,EAAGrR,KAGD2V,GAAwBhY,EAAG,SAASiF,EAAK5C,GAErC,MAAA,CACN2B,EAAG,KACHlB,EAAGmC,EACHyO,EAAGrR,KAGyBnC,EAAG,SAAS4W,EAAW7R,EAAK5C,GAElD,MAAA,CACN2B,EAAG,KACHlB,EAAGmC,EACHyO,EAAG,CAAE3T,EAAG+W,EAAWpD,EAAGrR,MAqDOrC,EAAG,SAASyB,EAAMwW,GAExCA,MAAW,OAAXA,EAAKjU,EACVjD,EAAG6W,GAAgBK,EAAKnV,EAInBoV,SAAuBzW,EAAMoW,GAEjC1U,IAAAA,EAAMgV,GAAwCN,GAO3C,MAAA,CACN7T,EAAG6T,EAAQ7T,EACXlE,EACEqD,EAGDnC,EAAGoX,GACFjV,EAAM,EACHkV,GACAC,GACHC,GAA6B9W,GAC7BoW,EAAQ/X,GAPNiB,EAAGyX,GAA0B/W,EAAMoW,EAAQ/X,IAjBlBoY,CAAuBzW,EAAMwW,EAAKvE,IAC7DuE,IA4BAI,IAmPAI,GAnPAJ,GAA4BrY,EAAG,SAASyB,EAAMiX,GAE1C3W,OAAAA,EAAcN,EAAKiX,EAAM5Y,GAAI4Y,EAAMzY,KAGvCqY,GAA6BtY,EAAG,SAASyB,EAAMkX,GAE3C,MAAA,CACNxS,QAAS1E,EAAKkX,EAAOxS,SACrByS,gBAAiBD,EAAOC,gBACxBC,eAAgBF,EAAOE,kBAShBzB,SAAAA,GAA0BL,GAE7B,IAAA,IAAI+B,EAAQ,GAAI/B,EAAS9W,EAAG8W,EAAWA,EAAS9W,EACrD,CACK8Y,IAAAA,EAAQhC,EAASjX,EAEjBqD,EAAM4V,EAAM/U,EACZiB,EAAM8T,EAAMjW,EACZT,EAAQ0W,EAAMrF,EAEdvQ,GAAQ,OAARA,EAAAA,CASA6V,IAAAA,EAAWF,EAAM3V,KAAS2V,EAAM3V,GAAO,IAClC,OAARA,GAAwB,UAAR8B,EACdgU,GAAqBD,EAAU/T,EAAK5C,GACpC2W,EAAS/T,GAAO5C,MAVT,cAAR4C,EACEgU,GAAqBH,EAAO7T,EAAKuJ,GAAanM,IAC9CyW,EAAM7T,GAAOuJ,GAAanM,GAWxByW,OAAAA,EAGCG,SAAAA,GAAqB/I,EAAQjL,EAAKiU,GAEtCC,IAAAA,EAAUjJ,EAAOjL,GACrBiL,EAAOjL,GAAOkU,EAAUA,EAAU,IAAMD,EAAWA,EAQ3CxC,SAAAA,GAAmB0C,EAAOC,GAE9BlW,IAAAA,EAAMiW,EAAMpV,EAEZb,GAAQ,IAARA,EAEIuT,OAAAA,GAAmB0C,EAAMlV,IAAMkV,EAAMlV,EAAIkV,EAAM1E,KAAM2E,GAGzDlW,GAAQ,IAARA,EAEI8S,OAAAA,GAAgBqD,eAAeF,EAAMtZ,GAGzCqD,GAAQ,IAARA,EACJ,CAIQoW,IAHHA,IAAAA,EAAUH,EAAMlV,EAChBsP,EAAS4F,EAAMjG,EAEE,IAAdoG,EAAQvV,GAEI,WAAXwP,EAAAA,GACJA,EAAS,CAACA,EAAQ+F,EAAQpG,GAC1BK,EAAOrP,KAAKoV,EAAQpG,GAEvBoG,EAAUA,EAAQrV,EAGfsV,IAAAA,EAAe,CAAErG,EAAGK,EAAQa,EAAGgF,GAG5BI,OAFHA,EAAU/C,GAAmB6C,EAASC,IAClCE,mBAAqBF,EACtBC,EAGJtW,GAAQ,IAARA,EAIIsW,OADPE,GADIF,EAAUL,EAAMxY,EAAEwY,EAAM1Y,GACI2Y,EAAWD,EAAM/Y,GAC1CoZ,EAKJA,IAAAA,EAAUL,EAAMrZ,EACjBkW,GAAgB2D,gBAAgBR,EAAMrZ,EAAGqZ,EAAMjZ,GAC/C8V,GAAgB4D,cAAcT,EAAMjZ,GAEnCwV,IAA0C,KAAXyD,EAAMjZ,GAExCsZ,EAAQK,iBAAiB,QAASnE,GAA4B8D,IAG/DE,GAAuBF,EAASJ,EAAWD,EAAM/Y,GAE5C,IAAA,IAAI4W,EAAOmC,EAAM7Y,EAAGO,EAAI,EAAGA,EAAImW,EAAKjV,OAAQlB,IAEhDoV,GAAwBuD,EAAS/C,GAA2B,IAARvT,EAAY8T,EAAKnW,GAAKmW,EAAKnW,GAAGb,EAAGoZ,IAG/EI,OAAAA,EAQCE,SAAAA,GAAuBF,EAASJ,EAAWP,GAE9C,IAAA,IAAI7T,KAAO6T,EAChB,CACKzW,IAAAA,EAAQyW,EAAM7T,GAEV,OAARA,EACG8U,GAAwBN,EAASpX,GAE5B,OAAR4C,EACG+U,GAAwBP,EAASJ,EAAWhX,GAEvC,OAAR4C,EACGgV,GAAuBR,EAASpX,GAE3B,OAAR4C,EACGiV,GAAyBT,EAASpX,IAE3B,UAAR4C,GAA2B,YAARA,GAAsBwU,EAAQxU,KAAS5C,KAAWoX,EAAQxU,GAAO5C,IAS/E0X,SAAAA,GAAwBN,EAASU,GAErCC,IAAAA,EAAeX,EAAQY,MAEtB,IAAA,IAAIpV,KAAOkV,EAEfC,EAAanV,GAAOkV,EAAOlV,GASpBgV,SAAAA,GAAuBR,EAASa,GAEnC,IAAA,IAAIrV,KAAOqV,EAChB,CACKjY,IAAAA,EAAQiY,EAAMrV,QACD,IAAV5C,EACJoX,EAAQc,aAAatV,EAAK5C,GAC1BoX,EAAQe,gBAAgBvV,IASpBiV,SAAAA,GAAyBT,EAASgB,GAErC,IAAA,IAAIxV,KAAOwV,EAChB,CACK9T,IAAAA,EAAO8T,EAAQxV,GACf6R,EAAYnQ,EAAK5G,EACjBsC,EAAQsE,EAAK+M,OAEA,IAAVrR,EACJoX,EAAQiB,eAAe5D,EAAW7R,EAAK5C,GACvCoX,EAAQkB,kBAAkB7D,EAAW7R,IASjC+U,SAAAA,GAAwBP,EAASJ,EAAWuB,GAEhDC,IAAAA,EAAepB,EAAQqB,QAAUrB,EAAQqB,MAAQ,IAEhD,IAAA,IAAI7V,KAAO2V,EAChB,CACKG,IAAAA,EAAaH,EAAO3V,GACpB+V,EAAcH,EAAa5V,GAE3B,GAAC8V,EAAD,CAOAC,GAAAA,EACJ,CAEKC,GADaD,EAAY5G,EACdpQ,IAAM+W,EAAW/W,EAChC,CACCgX,EAAY5G,EAAI2G,EAChB,SAEDtB,EAAQyB,oBAAoBjW,EAAK+V,GAGlCA,EAAcG,GAAyB9B,EAAW0B,GAClDtB,EAAQK,iBAAiB7U,EAAK+V,EAC7BvC,IACG,CAAE2C,QAASjD,GAAwC4C,GAAc,IAErEF,EAAa5V,GAAO+V,OArBnBvB,EAAQyB,oBAAoBjW,EAAK+V,GACjCH,EAAa5V,QAAO8M,GAgCvB,IACCsJ,OAAOvB,iBAAiB,IAAK,KAAMwB,OAAOC,eAAe,GAAI,UAAW,CACvEC,IAAK,WAAa/C,IAA+B,MAGnD,MAAMlY,KAOG4a,SAAAA,GAAyB9B,EAAWoC,GAEnClO,SAAAA,EAASmO,GAEb7D,IAAAA,EAAUtK,EAAS6G,EACnB1S,EAASyM,GAAc0J,EAAQ/X,EAAG4b,GAElC,GAAC9M,GAAqBlN,GAAtB,CAsBG8R,IAjBHrQ,IAeAqQ,EAfArQ,EAAMgV,GAAwCN,GAO9CxV,EAAQX,EAAO5B,EACfqG,EAAWhD,EAAcA,EAAM,EAAId,EAAMvC,EAAIuC,EAAM8D,QAAlC9D,EACjBuW,EAAyB,GAAPzV,EAAWd,EAAMpC,EAAW,GAAPkD,GAAYd,EAAMuW,gBACzD+C,GACH/C,GAAmB8C,EAAM9C,mBACjB,GAAPzV,EAAWd,EAAMpC,EAAW,GAAPkD,GAAYd,EAAMwW,iBAAmB6C,EAAM7C,iBACjEQ,GAIM7F,EAASmI,EAAiBxI,GACjC,CACK,GAAiB,mBAAVK,EAEVrN,EAAUqN,EAAOrN,QAIZ,IAAA,IAAIrF,EAAI0S,EAAOxR,OAAQlB,KAE3BqF,EAAUqN,EAAO1S,GAAGqF,GAGtBwV,EAAmBA,EAAiBtH,EAErCsH,EAAiBxV,EAASyS,IAKpBrL,OAFPA,EAAS6G,EAAIqH,EAENlO,EAGCqO,SAAAA,GAAwBnV,EAAGC,GAE5BD,OAAAA,EAAEzC,GAAK0C,EAAE1C,GAAK0L,GAAejJ,EAAE3G,EAAG4G,EAAE5G,GAiBnC+b,SAAAA,GAAiBpV,EAAGC,GAExBoV,IAAAA,EAAU,GAEPA,OADPC,GAAqBtV,EAAGC,EAAGoV,EAAS,GAC7BA,EAICE,SAAAA,GAAsBF,EAASrM,EAAMvN,EAAO+Z,GAEhDC,IAAAA,EAAQ,CACXlY,EAAGyL,EACHwF,EAAG/S,EACHkD,EAAG6W,EACHE,OAAGpK,EACHqK,OAAGrK,GAGGmK,OADPJ,EAAQ3X,KAAK+X,GACNA,EAICH,SAAAA,GAAqBtV,EAAGC,EAAGoV,EAAS5Z,GAExCuE,GAAAA,IAAMC,EAAND,CAKA4V,IAAAA,EAAQ5V,EAAEzC,EACVsY,EAAQ5V,EAAE1C,EAIVqY,GAAAA,IAAUC,EACd,CACKD,GAAU,IAAVA,GAAyB,IAAVC,EAQlB,YADAN,GAAsBF,EAAS,EAAG5Z,EAAOwE,GALzCA,EAg0BM6V,SAAkBC,GAKrB,IAHDC,IAAAA,EAAYD,EAAUjc,EACtByK,EAAMyR,EAAUza,OAChBiV,EAAO,IAAItV,MAAMqJ,GACZlK,EAAI,EAAGA,EAAIkK,EAAKlK,IAExBmW,EAAKnW,GAAK2b,EAAU3b,GAAGb,EAGjB,MAAA,CACN+D,EAAG,EACH7D,EAAGqc,EAAUrc,EACbE,EAAGmc,EAAUnc,EACbE,EAAG0W,EACHlX,EAAGyc,EAAUzc,EACbE,EAAGuc,EAAUvc,GAh1BRsc,CAAkB7V,GACtB4V,EAAQ,EAUFA,OAAAA,GAEF,KAAA,EAKGI,IAJHC,IAAAA,EAAQlW,EAAE8M,EACVqJ,EAAQlW,EAAE6M,EACVzS,EAAI6b,EAAM3a,OACV0a,EAAO5b,IAAM8b,EAAM5a,OAChB0a,GAAQ5b,KAEd4b,EAAOC,EAAM7b,KAAO8b,EAAM9b,GAEvB4b,GAAAA,EAGH,YADAhW,EAAExC,EAAIuC,EAAEvC,GAGTwC,EAAExC,EAAIwC,EAAEgO,IACJmI,IAAAA,EAAa,GAGjB,OAFAd,GAAqBtV,EAAEvC,EAAGwC,EAAExC,EAAG2Y,EAAY,QAC3CA,EAAW7a,OAAS,GAAKga,GAAsBF,EAAS,EAAG5Z,EAAO2a,IAG9D,KAAA,EAOGC,IALHC,IAAAA,EAAWtW,EAAE0M,EACb6J,EAAWtW,EAAEyM,EACb8J,GAAU,EAEVH,EAAWrW,EAAEvC,EACK,IAAf4Y,EAAS9Y,GAEfiZ,GAAU,EAEU,WAAbF,EAAAA,GACJA,EAAW,CAACA,EAAUD,EAAS3J,GAC/B4J,EAAS5Y,KAAK2Y,EAAS3J,GAE1B2J,EAAWA,EAAS5Y,EAIdgZ,IADHA,IAAAA,EAAWxW,EAAExC,EACK,IAAfgZ,EAASlZ,GAEfiZ,GAAU,EAEU,WAAbD,EAAAA,GACJA,EAAW,CAACA,EAAUE,EAAS/J,GAC/B6J,EAAS7Y,KAAK+Y,EAAS/J,GAE1B+J,EAAWA,EAAShZ,EAKjB+Y,OAAAA,GAAWF,EAAS/a,SAAWgb,EAAShb,YAE3Cga,GAAsBF,EAAS,EAAG5Z,EAAOwE,KAKtCuW,EA0CEE,SAA6BC,EAAIC,GAEpC,IAAA,IAAIvc,EAAI,EAAGA,EAAIsc,EAAGpb,OAAQlB,IAE1Bsc,GAAAA,EAAGtc,KAAOuc,EAAGvc,GAET,OAAA,EAIF,OAAA,EApDUqc,CAA6BJ,EAAUC,GAAYD,IAAaC,IAE9EhB,GAAsBF,EAAS,EAAG5Z,EAAO8a,QAI1CjB,GAAqBe,EAAUI,EAAUpB,EAAS5Z,EAAQ,IAGtD,KAAA,EAKJ,YAJIuE,EAAE3G,IAAM4G,EAAE5G,GAEbkc,GAAsBF,EAAS,EAAG5Z,EAAOwE,EAAE5G,IAIxC,KAAA,EAEJ,YADAwd,GAAsB7W,EAAGC,EAAGoV,EAAS5Z,EAAOqb,IAGxC,KAAA,EAEJ,YADAD,GAAsB7W,EAAGC,EAAGoV,EAAS5Z,EAAOsb,IAGxC,KAAA,EACA/W,GAAAA,EAAE7F,IAAM8F,EAAE9F,EAGb,YADAob,GAAsBF,EAAS,EAAG5Z,EAAOwE,GAItC+W,IAAAA,EAAYC,GAAsBjX,EAAEpG,EAAGqG,EAAErG,GAC7Cod,GAAazB,GAAsBF,EAAS,EAAG5Z,EAAOub,GAElDvB,IAAAA,EAAQxV,EAAE5F,EAAE2F,EAAE/F,EAAGgG,EAAEhG,GAGvB,YAFAwb,GAASF,GAAsBF,EAAS,EAAG5Z,EAAOga,MAoB5CoB,SAAAA,GAAsB7W,EAAGC,EAAGoV,EAAS5Z,EAAOyb,GAIhDlX,GAAAA,EAAEtG,IAAMuG,EAAEvG,GAAKsG,EAAE1G,IAAM2G,EAAE3G,EAAzB0G,CAMAgX,IAAAA,EAAYC,GAAsBjX,EAAEpG,EAAGqG,EAAErG,GAC7Cod,GAAazB,GAAsBF,EAAS,EAAG5Z,EAAOub,GAEtDE,EAASlX,EAAGC,EAAGoV,EAAS5Z,QAPvB8Z,GAAsBF,EAAS,EAAG5Z,EAAOwE,GAkBlCgX,SAAAA,GAAsBjX,EAAGC,EAAGkX,GAEhCC,IAAAA,EAGC,IAAA,IAAIC,KAAQrX,EAEZqX,GAAS,OAATA,GAA0B,OAATA,GAA0B,OAATA,GAA0B,OAATA,EAYnD,GAAEA,KAAQpX,EAAV,CAkBAqX,IAAAA,EAAStX,EAAEqX,GACXE,EAAStX,EAAEoX,GAGXC,IAAWC,GAAmB,UAATF,GAA6B,YAATA,GAC5B,OAAbF,GAAqBhC,GAAwBmC,EAAQC,MAKzDH,EAAOA,GAAQ,IACVC,GAAQE,QA3BZH,EAAOA,GAAQ,IACVC,GACHF,EAGa,OAAbA,EACE,GAEW,OAAbA,GAAkC,OAAbA,OACnB7L,EAEH,CAAEhS,EAAG0G,EAAEqX,GAAM/d,EAAG2T,OAAG3B,GARI,iBAAZtL,EAAEqX,GAAqB,GAAK,SAjBrCA,CAECG,IAAAA,EAAUP,GAAsBjX,EAAEqX,GAAOpX,EAAEoX,IAAS,GAAIA,GACxDG,KAEHJ,EAAOA,GAAQ,IACVC,GAAQG,GAuCX,IAAA,IAAIC,KAAQxX,EAEVwX,KAAQzX,KAEboX,EAAOA,GAAQ,IACVK,GAAQxX,EAAEwX,IAIVL,OAAAA,EAQCN,SAAAA,GAAqBY,EAASC,EAAStC,EAAS5Z,GAEpDmc,IAAAA,EAAQF,EAAQ5d,EAChB+d,EAAQF,EAAQ7d,EAEhBge,EAAOF,EAAMrc,OACbwc,EAAOF,EAAMtc,OAIbuc,EAAOC,EAEVxC,GAAsBF,EAAS,EAAG5Z,EAAO,CACxCuc,EAAGD,EACH1d,EAAGyd,EAAOC,IAGHD,EAAOC,GAEfxC,GAAsBF,EAAS,EAAG5Z,EAAO,CACxCuc,EAAGF,EACHhe,EAAG+d,IAMA,IAAA,IAAII,EAASH,EAAOC,EAAOD,EAAOC,EAAM1d,EAAI,EAAGA,EAAI4d,EAAQ5d,IAChE,CACK6d,IAAAA,EAAON,EAAMvd,GACjBib,GAAqB4C,EAAML,EAAMxd,GAAIgb,IAAW5Z,GAChDA,GAASyc,EAAK1e,GAAK,GASZud,SAAAA,GAA0BW,EAASC,EAAStC,EAAS8C,GAiBtDC,IAfHC,IAAAA,EAAe,GAEfC,EAAU,GACVC,EAAU,GAGVX,EAAQF,EAAQ5d,EAChB+d,EAAQF,EAAQ7d,EAChBge,EAAOF,EAAMrc,OACbwc,EAAOF,EAAMtc,OACb6c,EAAS,EACTI,EAAS,EAET/c,EAAQ0c,EAELC,EAASN,GAAQU,EAAST,GACjC,CACK/X,IAAAA,EAAI4X,EAAMQ,GACVnY,EAAI4X,EAAMW,GAEVnB,EAAOrX,EAAE3G,EACToe,EAAOxX,EAAE5G,EACTof,EAAQzY,EAAExG,EACVkf,EAAQzY,EAAEzG,EAEVmf,OAAWrN,EACXsN,OAAWtN,EAIX+L,GAAAA,IAASI,EAATJ,CAaAwB,IAAAA,EAAQjB,EAAMQ,EAAS,GACvBU,EAAQjB,EAAMW,EAAS,GAEvBK,GAAAA,EACJ,CACKE,IAAAA,EAAWF,EAAMxf,EACjB2f,EAAYH,EAAMrf,EACtBof,EAAWnB,IAASsB,EAGjBD,GAAAA,EACJ,CACKG,IAAAA,EAAWH,EAAMzf,EACjB6f,EAAYJ,EAAMtf,EACtBmf,EAAWtB,IAAS4B,EAKjBN,GAAAA,GAAYC,EAGftD,GAAqBmD,EAAOS,EAAWb,IADvC5c,GAEA0d,GAAuBb,EAASD,EAAchB,EAAMqB,EAAOF,EAAQD,GACnE9c,GAASgd,EAAMjf,GAAK,EAGpB4f,GAAuBd,EAASD,EAAchB,EAAM2B,IADpDvd,GAEAA,GAASud,EAAUxf,GAAK,EAExB4e,GAAU,EACVI,GAAU,OAKPG,GAAAA,EAEHld,IACA0d,GAAuBb,EAASD,EAAcZ,EAAMiB,EAAOF,EAAQD,GACnEjD,GAAqBmD,EAAOS,EAAWb,EAAc5c,GACrDA,GAASgd,EAAMjf,GAAK,EAEpB4e,GAAU,EACVI,GAAU,OAKPI,GAAAA,EAGHQ,GAAuBd,EAASD,EAAchB,EAAMoB,IADpDhd,GAEAA,GAASgd,EAAMjf,GAAK,EAGpB8b,GAAqB0D,EAAWN,EAAOL,IADvC5c,GAEAA,GAASud,EAAUxf,GAAK,EAExB4e,GAAU,EACVI,GAAU,MAXPI,CAgBAC,IAAAA,GAASE,IAAaE,EAgB1B,MAbCG,GAAuBd,EAASD,EAAchB,EAAMoB,IADpDhd,GAEA0d,GAAuBb,EAASD,EAAcZ,EAAMiB,EAAOF,EAAQD,GACnE9c,GAASgd,EAAMjf,GAAK,EAGpB8b,GAAqB0D,EAAWE,EAAWb,IAD3C5c,GAEAA,GAASud,EAAUxf,GAAK,EAExB4e,GAAU,EACVI,GAAU,QAvFVlD,GAAqBmD,EAAOC,EAAOL,IADnC5c,GAEAA,GAASgd,EAAMjf,GAAK,EAEpB4e,IACAI,IA4FKJ,KAAAA,EAASN,GAChB,CACCrc,IAEIgd,GADAzY,EAAI4X,EAAMQ,IACA5e,EACd4f,GAAuBd,EAASD,EAAcrY,EAAE3G,EAAGof,EAAOhd,GAC1DA,GAASgd,EAAMjf,GAAK,EACpB4e,IAGMI,KAAAA,EAAST,GAChB,CACKsB,IAAAA,EAAaA,GAAc,GAE/BF,GAAuBb,EAASD,GAD5BpY,EAAI4X,EAAMW,IACkCnf,EAAG4G,EAAEzG,OAAG8R,EAAW+N,GACnEb,KAGGH,EAAa9c,OAAS,GAAKgd,EAAQhd,OAAS,GAAK8d,IAEpD9D,GAAsBF,EAAS,EAAG8C,EAAW,CAC5CmB,EAAGjB,EACHrY,EAAGuY,EACHtY,EAAGoZ,IAUFE,IAAAA,GAAsB,WAGjBJ,SAAAA,GAAuBb,EAASD,EAAc7Z,EAAKgb,EAAOhB,EAAQD,GAEtEjG,IAAAA,EAAQgG,EAAQ9Z,GAGhB,IAAC8T,EAYJ,OAVAA,EAAQ,CACP5Y,EAAG,EACH+f,EAAGD,EACHhL,EAAGgK,EACH7Z,OAAG2M,GAGJiN,EAAQ7a,KAAK,CAAE8Q,EAAGgK,EAAQkB,EAAGpH,SAC7BgG,EAAQ9Z,GAAO8T,GAMZA,GAAY,IAAZA,EAAM5Y,EACV,CACC6e,EAAQ7a,KAAK,CAAE8Q,EAAGgK,EAAQkB,EAAGpH,IAE7BA,EAAM5Y,EAAI,EACN0c,IAAAA,EAAa,GAQjB,OAPAd,GAAqBhD,EAAMmH,EAAGD,EAAOpD,EAAY9D,EAAM9D,GACvD8D,EAAM9D,EAAIgK,OACVlG,EAAM3T,EAAEA,EAAI,CACX2a,EAAGlD,EACHsD,EAAGpH,IAOL6G,GAAuBb,EAASD,EAAc7Z,EAAM+a,GAAqBC,EAAOhB,EAAQD,GAIhFa,SAAAA,GAAuBd,EAASD,EAAc7Z,EAAKgb,EAAO/d,GAE9D6W,IAAAA,EAAQgG,EAAQ9Z,GAGhB,GAAC8T,EAAD,CAeAA,GAAY,IAAZA,EAAM5Y,EACV,CACC4Y,EAAM5Y,EAAI,EACN0c,IAAAA,EAAa,GAQjB,OAPAd,GAAqBkE,EAAOlH,EAAMmH,EAAGrD,EAAY3a,QAEjD8Z,GAAsB8C,EAAc,EAAG5c,EAAO,CAC7C6d,EAAGlD,EACHsD,EAAGpH,IAOL8G,GAAuBd,EAASD,EAAc7Z,EAAM+a,GAAqBC,EAAO/d,OA9B5E,CAECga,IAAAA,EAAQF,GAAsB8C,EAAc,EAAG5c,OAAO6P,GAE1DgN,EAAQ9Z,GAAO,CACd9E,EAAG,EACH+f,EAAGD,EACHhL,EAAG/S,EACHkD,EAAG8W,IAmCGkE,SAAAA,GAAwB3G,EAASL,EAAO0C,EAASzC,IAOjDgH,SAAAA,EAA4B5G,EAASL,EAAO0C,EAAShb,EAAGwf,EAAKC,EAAMlH,GAEvE6C,IAAAA,EAAQJ,EAAQhb,GAChBoB,IAAAA,EAAQga,EAAMjH,EAEX/S,KAAAA,IAAUoe,GACjB,CACKE,IAAAA,EAAYtE,EAAMlY,EAElBwc,GAAc,IAAdA,EAEHJ,GAAwB3G,EAASL,EAAMlV,EAAGgY,EAAM9W,EAAGiU,QAE/C,GAAkB,IAAdmH,EACT,CACCtE,EAAMC,EAAI1C,EACVyC,EAAME,EAAI/C,EAENwD,IAAAA,EAAaX,EAAM9W,EAAE2a,EACrBlD,EAAW7a,OAAS,GAEvBqe,EAA4B5G,EAASL,EAAOyD,EAAY,EAAGyD,EAAKC,EAAMlH,QAGnE,GAAkB,IAAdmH,EACT,CACCtE,EAAMC,EAAI1C,EACVyC,EAAME,EAAI/C,EAEN4C,IAAAA,EAAOC,EAAM9W,EACb6W,GAAAA,EACJ,CACCA,EAAKkE,EAAE/a,EAAIqU,EACPoD,IAAAA,EAAaZ,EAAK8D,EAClBlD,EAAW7a,OAAS,GAEvBqe,EAA4B5G,EAASL,EAAOyD,EAAY,EAAGyD,EAAKC,EAAMlH,SAMxE6C,EAAMC,EAAI1C,EACVyC,EAAME,EAAI/C,EAKP,KAAE6C,EAAQJ,IAFdhb,MAE8BoB,EAAQga,EAAMjH,GAAKsL,EAEzCzf,OAAAA,EAILqC,IAAAA,EAAMiW,EAAMpV,EAEZb,GAAQ,IAARA,EACJ,CAGQoW,IAFHA,IAAAA,EAAUH,EAAMlV,EAEC,IAAdqV,EAAQvV,GAEduV,EAAUA,EAAQrV,EAGZmc,OAAAA,EAA4B5G,EAASF,EAASuC,EAAShb,EAAGwf,EAAM,EAAGC,EAAM9G,EAAQC,oBAKrF+G,IAAAA,EAAQrH,EAAM7Y,EACdmgB,IAAAA,EAAajH,EAAQiH,WACpB,IAAA,IAAIvN,EAAI,EAAGA,EAAIsN,EAAMze,OAAQmR,IAClC,CACCmN,IACIK,IAAAA,EAAe,IAARxd,EAAYsd,EAAMtN,GAAKsN,EAAMtN,GAAGlT,EACvC2gB,EAAUN,GAAOK,EAAK1gB,GAAK,GAC3BqgB,GAAAA,GAAOpe,GAASA,GAAS0e,IAE5B9f,EAAIuf,EAA4BK,EAAWvN,GAAIwN,EAAM7E,EAAShb,EAAGwf,EAAKM,EAASvH,KACzE6C,EAAQJ,EAAQhb,MAAQoB,EAAQga,EAAMjH,GAAKsL,GAEzCzf,OAAAA,EAGTwf,EAAMM,EAEA9f,OAAAA,EA5FPuf,CAA4B5G,EAASL,EAAO0C,EAAS,EAAG,EAAG1C,EAAMnZ,EAAGoZ,GAoG5DwH,SAAAA,GAAyBC,EAAaC,EAAgBjF,EAASzC,GAEnEyC,OAAmB,IAAnBA,EAAQ9Z,OAEJ8e,GAGRV,GAAwBU,EAAaC,EAAgBjF,EAASzC,GACvD2H,GAA6BF,EAAahF,IAGzCkF,SAAAA,GAA6BF,EAAahF,GAE7C,IAAA,IAAIhb,EAAI,EAAGA,EAAIgb,EAAQ9Z,OAAQlB,IACpC,CACKob,IAAAA,EAAQJ,EAAQhb,GAChBmgB,EAAe/E,EAAMC,EACrB+E,EAAUC,GAAuBF,EAAc/E,GAC/C+E,IAAiBH,IAEpBA,EAAcI,GAGTJ,OAAAA,EAGCK,SAAAA,GAAuB1H,EAASyC,GAEhCA,OAAAA,EAAMlY,GAER,KAAA,EACGod,OAsEDA,SAA6B3H,EAASL,EAAOC,GAEjD7C,IAAAA,EAAaiD,EAAQjD,WACrB0K,EAAUxK,GAAmB0C,EAAOC,GAEnC6H,EAAQxH,qBAEZwH,EAAQxH,mBAAqBD,EAAQC,oBAGlClD,GAAc0K,IAAYzH,GAE7BjD,EAAWC,aAAayK,EAASzH,GAE3ByH,OAAAA,EApFEE,CAA6B3H,EAASyC,EAAM9W,EAAG8W,EAAME,GAExD,KAAA,EAEG3C,OADPE,GAAuBF,EAASyC,EAAME,EAAGF,EAAM9W,GACxCqU,EAEH,KAAA,EAEGA,OADPA,EAAQ4H,YAAY,EAAG5H,EAAQzX,OAAQka,EAAM9W,GACtCqU,EAEH,KAAA,EACGuH,OAAAA,GAA6BvH,EAASyC,EAAM9W,GAE/C,KAAA,EASGqU,OARHA,EAAQC,mBAEXD,EAAQC,mBAAmBvG,EAAI+I,EAAM9W,EAIrCqU,EAAQC,mBAAqB,CAAEvG,EAAG+I,EAAM9W,EAAGiP,EAAG6H,EAAME,GAE9C3C,EAEH,KAAA,EAEC,IADDwC,IAAAA,EAAOC,EAAM9W,EACRtE,EAAI,EAAGA,EAAImb,EAAKnb,EAAGA,IAE3B2Y,EAAQ6H,YAAY7H,EAAQiH,WAAWzE,EAAKwC,IAEtChF,OAAAA,EAEH,KAAA,EAKG3Y,IAJHmb,IACAhF,GADAgF,EAAOC,EAAM9W,GACD7E,EAEZghB,GADAzgB,EAAImb,EAAKwC,EACAhF,EAAQiH,WAAW5f,IACzBA,EAAImW,EAAKjV,OAAQlB,IAEvB2Y,EAAQ+H,aAAa9K,GAAmBO,EAAKnW,GAAIob,EAAME,GAAImF,GAErD9H,OAAAA,EAEH,KAAA,EAEA,KADAwC,EAAOC,EAAM9W,GAITqU,OADPA,EAAQjD,WAAW8K,YAAY7H,GACxBA,EAEJV,IAAAA,EAAQkD,EAAKkE,EAMV1G,YALgB,IAAZV,EAAM9D,GAEhBwE,EAAQjD,WAAW8K,YAAY7H,GAEhCV,EAAM3T,EAAI4b,GAA6BvH,EAASwC,EAAK8D,GAC9CtG,EAEH,KAAA,EACGgI,OA6BDA,SAA8BhI,EAASyC,GAE3CD,IAAAA,EAAOC,EAAM9W,EAGbsc,EA2BIC,SAA4C7B,EAAY5D,GAE5D,IAAC4D,EAEJ,OAII,IADD4B,IAAAA,EAAOzL,GAAgB2L,yBAClB9gB,EAAI,EAAGA,EAAIgf,EAAW9d,OAAQlB,IACvC,CACK+gB,IAAAA,EAAS/B,EAAWhf,GACpBiY,EAAQ8I,EAAO1B,EACnBjK,GAAwBwL,EAAkB,IAAZ3I,EAAM5Y,EACjC4Y,EAAM3T,EACNsR,GAAmBqC,EAAMmH,EAAGhE,EAAME,IAG/BsF,OAAAA,EA5CIC,CAA4C1F,EAAKvV,EAAGwV,GAG/DzC,EAAUuH,GAA6BvH,EAASwC,EAAK8D,GAIhD,IADDf,IAAAA,EAAU/C,EAAKxV,EACV3F,EAAI,EAAGA,EAAIke,EAAQhd,OAAQlB,IACpC,CACK+gB,IAAAA,EAAS7C,EAAQle,GACjBiY,EAAQ8I,EAAO1B,EACf5J,EAAmB,IAAZwC,EAAM5Y,EACd4Y,EAAM3T,EACNsR,GAAmBqC,EAAMmH,EAAGhE,EAAME,GACrC3C,EAAQ+H,aAAajL,EAAMkD,EAAQiH,WAAWmB,EAAO5M,IAIlDyM,GAEHxL,GAAwBuD,EAASiI,GAG3BjI,OAAAA,EAzDEgI,CAA8BhI,EAASyC,GAE1C,KAAA,EACGA,OAAAA,EAAM9W,EAAEqU,GAEhB,QACCnU,EAAa,KA4EPwc,SAAAA,GAAuBvL,GAI3BA,GAAkB,IAAlBA,EAAKwL,SAEDpL,OAAAA,GAAiBJ,EAAKyL,aAM1BzL,GAAkB,IAAlBA,EAAKwL,SAEDpL,OAAAA,GAAiB,IAQpB,IAFDsL,IAAAA,EAAW1Z,EACX+R,EAAQ/D,EAAK2L,WACRphB,EAAIwZ,EAAMtY,OAAQlB,KAC3B,CACKmX,IAAAA,EAAOqC,EAAMxZ,GACbkE,EAAOiT,EAAKjT,KACZ3C,EAAQ4V,EAAK5V,MACjB4f,EAAW7Z,EAAYrH,EAAGiX,GAAuBhT,EAAM3C,GAAQ4f,GAG5D9e,IAAAA,EAAMoT,EAAK4L,QAAQC,cACnBpL,EAAUzO,EACV0O,EAAOV,EAAKmK,WAEX,IAAI5f,EAAImW,EAAKjV,OAAQlB,KAEzBkW,EAAU5O,EAAW0Z,GAAuB7K,EAAKnW,IAAKkW,GAEhDhW,OAAAA,EAAG6V,GAAkB1T,EAAK8e,EAAUjL,GA+BxCqL,IAAAA,GAAwCjiB,EAAG,SAASiR,EAAMC,EAAaC,EAAeC,GAElFC,OAAAA,GACNH,EACAE,EACAH,EAAKK,KACLL,EAAKM,OACLN,EAAKO,cACL,SAASQ,EAAWkQ,GACfC,IAAAA,EAAOlR,EAAKkR,KAKZ9I,EAAUjI,GAAQA,EAAI,KAAWA,EAAI,KAAWlM,EAAa,GAE7Dkd,EAAWV,GAAuBrI,GAE/BgJ,OAAAA,GAAsBH,EAAc,SAASpQ,GAE/CwQ,IAAAA,EAAWH,EAAKrQ,GAChB4J,EAAUD,GAAiB2G,EAAUE,GACzCjJ,EAAUoH,GAAyBpH,EAAS+I,EAAU1G,EAAS1J,GAC/DoQ,EAAWE,QAoDXC,IAvC0CviB,EAAG,SAASiR,EAAMC,EAAaC,EAAeC,GAEpFC,OAAAA,GACNH,EACAE,EACAH,EAAKK,KACLL,EAAKM,OACLN,EAAKO,cACL,SAASQ,EAAWkQ,GACfM,IAAAA,EAAkBvR,EAAKwR,OAASxR,EAAKwR,MAAMzQ,GAC3CmQ,EAAOlR,EAAKkR,KACZO,EAAQ7M,GAAgB6M,MACxBC,EAAW9M,GAAgB+M,KAC3BR,EAAWV,GAAuBiB,GAC/BN,OAAAA,GAAsBH,EAAc,SAASpQ,GAEnDyD,GAA8BiN,EAC1BK,IAAAA,EAAMV,EAAKrQ,GACXwQ,EAAW7L,GAAiB,OAAjBA,CAAyBtO,EAAzBsO,CAAoCoM,EAAID,MACnDlH,EAAUD,GAAiB2G,EAAUE,GACzCK,EAAWlC,GAAyBkC,EAAUP,EAAU1G,EAAS1J,GACjEoQ,EAAWE,EACX/M,GAA8B,EAC7BmN,IAAUG,EAAIH,QAAW7M,GAAgB6M,MAAQA,EAAQG,EAAIH,aAYjC,oBAAzBI,sBACJA,qBAI8B,oBAA1BC,sBACJA,sBACA,SAAS5V,GAAmB4H,OAAAA,WAAW5H,EAAU,IAAO,MAGnDkV,SAAAA,GAAsBvQ,EAAOkR,GAErCA,EAAKlR,GAED3G,IAAAA,EAAQ,EAEH8X,SAAAA,IAER9X,EAAkB,IAAVA,EACL,GACEoX,GAA+BU,GAAiBD,EAAKlR,GAAQ,GAG5D,OAAA,SAASoR,EAAWC,GAE1BrR,EAAQoR,EAERC,GACKH,EAAKlR,GACE,IAAV3G,IAAgBA,EAAQ,KAEX,IAAVA,GAAeoX,GAA+BU,GACjD9X,EAAQ,IA0DMvL,EAAG,SAASiF,EAAKnC,GAE3B/B,OAAAA,EAAGyiB,GAAuBC,GAAuBrT,GAAmB,WAC1EtN,GAAK4gB,QAAQC,GAAG7gB,GAChBmC,SAIqBjF,EAAG,SAASiF,EAAK2e,GAEhC7iB,OAAAA,EAAGyiB,GAAuBC,GAAuBrT,GAAmB,WAC1EsT,QAAQG,UAAU,GAAI,GAAID,GAC1B3e,SAIwBjF,EAAG,SAASiF,EAAK2e,GAEnC7iB,OAAAA,EAAGyiB,GAAuBC,GAAuBrT,GAAmB,WAC1EsT,QAAQI,aAAa,GAAI,GAAIF,GAC7B3e,SApBE8e,IA6BAC,GAAoB,CAAElK,iBAAkB,aAAeoB,oBAAqB,cAE5E+I,IADmC,oBAAbpe,UAA2BA,SACb,oBAAXwV,OAAyBA,OAAS2I,IAE7C9jB,EAAG,SAASqW,EAAM2N,EAAWC,GAEvCxT,OAAAA,GAAiBP,GAAmB,SAAS7C,GAE1CsK,SAAAA,EAAQ6D,GAASlL,GAAoB2T,EAAWzI,IAElD,OADPnF,EAAKuD,iBAAiBoK,EAAWrM,EAASY,IAAgC,CAAE2C,SAAS,IAC9E,WAAa7E,EAAK2E,oBAAoBgJ,EAAWrM,SAI/B7X,EAAG,SAAS2M,EAAS+O,GAE3Cha,IAAAA,EAASyM,GAAcxB,EAAS+O,GAC7B9M,OAAAA,GAAqBlN,GAAU0iB,GAAoB1iB,EAAO5B,GAAKukB,KAyD9DC,SAAAA,GAAkBpP,EAAIqP,GAEvBnU,OAAAA,GAAmB,SAAS7C,GAElCoV,GAA+B,WAC1BpM,IAAAA,EAAO1Q,SAAS2e,eAAetP,GACnC3H,EAASgJ,EACNpG,GAAmBoU,EAAQhO,IA77EzB,CACNvS,EAAG,EACHlE,EA47EoB2kB,GAAiCvP,SAqBnClV,EAAG,SAAS0kB,EAAcxP,GAEtCoP,OAAAA,GAAkBpP,EAAI,SAASqB,GAE9B9O,OADP8O,EAAKmO,KACEjd,MAgCkBzH,EAAG,SAASyG,EAAGC,GAElCie,OApDqBJ,EAoDD,WAGnB9c,OADPwc,GAAgBW,OAAOne,EAAGC,GACnBe,GArDD2I,GAAmB,SAAS7C,GAElCoV,GAA+B,WAC9BpV,EAAS4C,GAAmBoU,UALtBI,IAAoBJ,IAoFArkB,EAAG,SAASgV,EAAIzO,EAAGC,GAExC4d,OAAAA,GAAkBpP,EAAI,SAASqB,GAI9B9O,OAFP8O,EAAKsO,WAAape,EAClB8P,EAAKuO,UAAYpe,EACVe,MA+DLsd,IAk0BwDC,GAzDKrhB,GA0D5DshB,GAEAC,GAKAC,GAKAC,GAKAC,GAKAC,GASAC,GA/9F2BvgB,GAAMgQ,GAvM+B/B,GAo0EjE8R,GAA6B,SAAUjlB,GACnC,MAAA,CAACkE,EAAG,SAAUlE,EAAGA,IAIrBukB,GAAyB,CAACrgB,EAAG,WAC7BuD,GAAqB,CAACvD,EAAG,MACzBqD,GAAqB,CAACrD,EAAG,MACzBwhB,GAA6BjjB,EAC7BkjB,GAAuBvlB,EAC1B,SAAUuB,EAAMikB,EAAUC,GACrBC,IAAAA,EAAOD,EAAIxlB,EACX0lB,EAAOF,EAAItlB,EACXylB,EAAS9lB,EACZ,SAAUuW,EAAM/T,GACX+T,GAAW,YAAXA,EAAKvS,EAAiB,CACrB+hB,IAAAA,EAAUxP,EAAKzW,EACZkB,OAAAA,EAAGwkB,GAA4BM,EAAQtjB,EAAKujB,GAE/CC,IAAAA,EAASzP,EAAKzW,EACXkB,OAAAA,EAAGwkB,GAA4B/jB,EAAMe,EAAKwjB,KAG7ChlB,OAAAA,EACNwkB,GACAM,EACA9kB,EAAGwkB,GAA4B/jB,EAAMikB,EAAUG,GAC/CD,KAECK,GAAqBvd,EACrBlE,GAAwB,SAAUrC,GAC9BnB,OAAAA,EAAGykB,GAAsBQ,GAAoB1d,EAAWpG,IAE5DmF,GAAqB,CAACtD,EAAG,MACzBkiB,GAAsBhmB,EACzB,SAAUuB,EAAMe,EAAK2Z,GAEpB,OAAa,CACRA,GAAQ,wBAARA,EAAEnY,EACExB,OAAAA,EAEHyC,IAAAA,EAAMkX,EAAElc,EACRoC,EAAQ8Z,EAAEhc,EACVgmB,EAAOhK,EAAE9b,EACT+lB,EAAQjK,EAAE5b,EACV8lB,EAAa5kB,EAChB6kB,EAAYtlB,EACZS,EACAwD,EACA5C,EACArB,EAAGklB,GAAqBzkB,EAAMe,EAAK4jB,IAEpC3kB,EAAO4kB,EACP7jB,EAAM8jB,EACNnK,EAHWgK,KAQX5hB,GAAuB,SAAUgiB,GAC7BvlB,OAAAA,EACNklB,GACAhmB,EACC,SAAU+E,EAAK5C,EAAOoS,GACd1T,OAAAA,EACNklB,GACAlkB,EAAckD,EAAK5C,GACnBoS,KAEHlM,EACAge,IAYEjiB,GAAsB,SAAUqhB,GAE5Ba,OAZiB,SAAUD,GAC3BvlB,OAAAA,EACNklB,GACAhmB,EACC,SAAU+E,EAAK5C,EAAOokB,GACd1lB,OAAAA,EAAGklB,GAAoBhhB,EAAKwhB,KAErCle,EACAge,GAIMC,CADIb,EAAI7lB,IAGZ4mB,GAA2B,SAAUjgB,GACjCA,OAAAA,GAEJkgB,GAA8B,SAAU7mB,GACpC,MAAA,CAACkE,EAAG,OAAQlE,EAAGA,IAEnB8mB,GAAmCxmB,EACtC,SAAUN,EAAGG,EAAGE,EAAGE,GACX,MAAA,CAAC2D,EAAG,oBAAqBlE,EAAGA,EAAGG,EAAGA,EAAGE,EAAGA,EAAGE,EAAGA,KAGnDwmB,GAA0B3c,EAE1B4c,GAA0B9mB,EAC7B,SAAU+mB,EAAMta,GACRnC,OAAAA,EAAYmC,GAAUnC,EAAYyc,KAGvCC,GAA2BH,GAC9B9lB,EAAG+lB,GAAyB,EATK,KAU9BG,GArxIiB,GAsxIjBC,GAAuBjmB,EAAG2lB,GAAkC,EAAGI,GAA0BC,GAA4BA,IACrHE,GAAsB,SAAUrnB,GAC5B,MAAA,CAACkE,EAAG,OAAQlE,EAAGA,IAEnBsnB,GAAyB,SAAUtnB,GAC/B,MAAA,CAACkE,EAAG,UAAWlE,EAAGA,IAEtBunB,GAA0CzlB,EAC1C0lB,GAAsBpnB,EACzB,SAAUuB,EAAMe,EAAKiS,GAEpB,OAAa,CACR,IAACA,EAAKxU,EACFuC,OAAAA,EAEHiE,IAAAA,EAAIgO,EAAK3U,EACTmI,EAAKwM,EAAKxU,EACVomB,EAAa5kB,EAChB6kB,EAAYvlB,EAAGU,EAAMgF,EAAGjE,GAEzBf,EAAO4kB,EACP7jB,EAAM8jB,EACN7R,EAHcxM,KAQdgH,GAAwB,SAAUwF,GAC9BzT,OAAAA,EAAGsmB,GAAqBrB,GAAoB1d,EAAWkM,IAE3D8S,GAA+BvnB,EAClC,SAAUwnB,EAAOhlB,GAEhB,OAAa,CACRmjB,IAAAA,EAAM5kB,EAAGsmB,GA7CkB,GA6CoDG,GAC/EjR,EAAOoP,EAAI7lB,EACX2nB,EAAiB9B,EAAI1lB,EACrBynB,EAAS3mB,EACZklB,GACAmB,GAAuB7Q,GACvB/T,GACG,IAACilB,EAAexnB,EACZgP,OAAAA,GAAsByY,GAI7BF,EAFkBC,EAGlBjlB,EAFaklB,KAWbC,IAJsB3nB,EACzB,SAAUyG,EAAG1G,GACLA,OAAAA,EAAE0G,KAEcQ,GAKrB2gB,GAAiC5nB,EACpC,SAAU6nB,EAAUC,GAEnB,OAAa,CACRC,IAAAA,EAAclB,GAAwBiB,EA5EX,IA6E3BC,GAAgB,IAAhBA,EACIhnB,OAAAA,EAAGsmB,GA9EoB,GA8EkDQ,GAAU/nB,EAI1F+nB,EAFqB9mB,EAAGwmB,GAA8BM,EAAUtf,GAGhEuf,EAFsBC,KAYtBC,IAJsBhoB,EACzB,SAAUD,EAAG0G,GACL1G,OAAAA,EAAE0G,KAEiB2D,GAExB6d,GAAsBjoB,EACzB,SAAUyG,EAAGC,GACJQ,OAAAA,EAAWT,EAAGC,GAAK,EAAKD,EAAIC,IAIlCwhB,GAz2IKC,SAAgBhmB,GAEdA,OAAAA,EAAMH,QAw2IbomB,GAAgCpoB,EACnC,SAAUqoB,EAAiBC,GACtB,GAACA,EAAQR,aAON,CACFS,IAAAA,EAhH2B,GAgHjBD,EAAQR,aAClB9gB,EAAQghB,GACXjnB,EAAG+lB,GAlH2B,GAkH2ByB,EAAU,IAChEC,EAAkBH,EAAkBpZ,GAAsBqZ,EAAQT,UAAYS,EAAQT,SACtFjC,EAAO7kB,EAAG6mB,GAAgCY,EAAiBF,EAAQR,cAChE7mB,OAAAA,EACN2lB,GACAsB,GAA4BI,EAAQzC,MAAQ0C,EAC5CxnB,EAAGknB,GAAqB,EAAGjhB,EAAQggB,IACnCpB,EACA0C,EAAQzC,MAjBF5kB,OAAAA,EACN2lB,GACAsB,GAA4BI,EAAQzC,MACpCmB,GACAC,GACAqB,EAAQzC,QAiBR4C,GAA8BvoB,EACjC,SAAUuU,EAAMoT,EAAUC,GAEzB,OAAa,CACRnC,IAAAA,EAAM5kB,EAAGsmB,GAnIkB,GAmIoD5S,GAC/EiU,EAAU/C,EAAI7lB,EACd6oB,EAAiBhD,EAAI1lB,EACrBiH,GAAAA,EACHghB,GAA4BQ,GAvIE,IAwIC,EACxB3nB,OAAAA,EACNqnB,IACA,EACA,CAACP,SAAUA,EAAUC,aAAcA,EAAcjC,KAAM6C,IAQxDjU,EANiBkU,EAOjBd,EANkB9mB,EACjBklB,GACAkB,GAAoBuB,GACpBb,GAIDC,EAHsBA,EAAe,KAQrCc,GAA0B,SAAUnU,GACnC,OAACA,EAAKxU,EAGFe,EAAGynB,GAA6BhU,EAAMlM,EAAW,GAFjD2e,IAML2B,GAA6B7oB,EAChC,SAAU8oB,EAAUC,GACfA,MAAY,SAAZA,EAAM/kB,EACG+kB,EAAMjpB,EAGXgpB,IAINE,GAAyB,aAAgB,GAAKhC,GAE9CiC,GAAiChnB,EACjCinB,GAAiC9mB,EACjC+mB,GAAyB/oB,EAC5B,SAAU6Q,EAAO/O,EAAOG,EAAOujB,GAC1BwD,IAAAA,EAAMJ,GAA0B9mB,IAAU+O,EAC1C0U,EAAM5kB,EAAGkoB,GAAgCG,EAAKxD,GAC9CD,GAAU,YAAVA,EAAI3hB,EAAiB,CACpB+hB,IAAAA,EAAUJ,EAAI7lB,EACdupB,EAASpoB,EAAGkoB,GAAwBlY,EAAQ+V,GAA0B9kB,EAAOG,EAAO0jB,GACjF/kB,OAAAA,EACNkoB,GACAE,EACAhC,GAAuBiC,GACvBzD,GAEGI,IAAAA,EAASL,EAAI7lB,EACbwpB,EAAUtoB,EAAGkoB,GAAgCF,GAAyB9mB,EAAOG,EAAO2jB,GACjFhlB,OAAAA,EACNkoB,GACAE,EACAjC,GAAoBmC,GACpB1D,KAIA2D,GAA2B,SAAUve,GAChCA,OAAAA,IAAQ,GAAM,GAInBwe,GAAqBtpB,EACxB,SAAUgC,EAAOG,EAAOF,GACnB6I,IAAAA,EAAM7I,EAAMrC,EACZ2pB,EAAatnB,EAAMlC,EACnB2lB,EAAOzjB,EAAMhC,EACb0lB,EAAO1jB,EAAM9B,EACR6B,OAAAA,EAAQ,GAAOgF,EAAWhF,EAAO8I,IAAQ,EAAM7I,EAAU+E,EACjEhF,EACAqnB,GAAyBve,KAAS,EAAK/J,EACvC2lB,GACA5b,EACAye,EACA7D,EACA5kB,EAAGkoB,GAAgCF,GAAyB9mB,EAAOG,EAAOwjB,IAAS5kB,EACnF2lB,GACA5b,EACAye,EACAxoB,EAAGkoB,GAAwBM,EAAYvnB,EAAOG,EAAOujB,GACrDC,KAGC6D,GAA2BxpB,EAC9B,SAAUwB,EAAQoB,EAAGT,GAEpB,OAAa,CACRS,GAAAA,GAAK,EACDpB,OAAAA,EAKPA,EAHmBX,EAAGklB,GAAoB5jB,EAAOX,GAIjDoB,EAHWA,EAAI,EAIfT,EAHeA,KAQfsnB,GAAuB3pB,EAC1B,SAAU8C,EAAGT,GACLrB,OAAAA,EAAG0oB,GAA0BnhB,EAAWzF,EAAGT,KAMhDunB,GAAsBjf,EACtBkf,GAAyC,SAAU/pB,GAC/C,MAAA,CAACkE,EAAG,QAASlE,EAAGA,IAEpBgqB,GAA+C,SAAUC,GAErDC,OADMD,EAAMjqB,GAGhBmqB,GAA8C,SAAUC,GAEpDC,OADKD,EAAKpqB,GAGdsqB,GAAwCpqB,EAC3C,SAAUgqB,EAAQG,GACVN,OAAAA,GACLC,GAA6CE,IAAW,EAAKC,GAA4CE,MAEzGE,GAAmD,SAAUvqB,GACzD,MAAA,CAACkE,EAAG,aAAclE,EAAGA,IAEzBwqB,GAA8CD,GAAiD,GAC/FE,GAAiD,SAAUzqB,GACvD,MAAA,CAACkE,EAAG,YAAalE,EAAGA,IAExB0qB,GAA4CD,GAA+C,GAC3FE,GAAyC1pB,EAAGqpB,GAAuCE,GAA6CE,IAChIE,GAAgDL,GAAiD,GACjGM,GAA2C5pB,EAAGqpB,GAAuCM,GAA+CF,IACpII,GAA4BxqB,EAC/B,SAAUyqB,EAAIroB,EAAKsoB,EAAKhpB,GACnB,GAACA,EAAG7B,EAED,CACFH,IAAAA,EAAIgC,EAAGhC,EACPirB,EAAKjpB,EAAG7B,EACR,GAAC8qB,EAAG9qB,EAED,CACFA,IAAAA,EAAI8qB,EAAGjrB,EACPkrB,EAAKD,EAAG9qB,EACR,GAAC+qB,EAAG/qB,EAKD,CACFE,IAAAA,EAAI6qB,EAAGlrB,EACPmrB,EAAKD,EAAG/qB,EACR,GAACgrB,EAAGhrB,EAQD,CACFI,IAAAA,EAAI4qB,EAAGnrB,EACPorB,EAAKD,EAAGhrB,EAMLc,OAAAA,EACN8pB,EACA/qB,EACAiB,EACC8pB,EACA5qB,EACAc,EACC8pB,EACA1qB,EACAY,EAAG8pB,EAAIxqB,EAdCyqB,EAAM,IAAO9pB,EACvBsmB,GACAuD,EACAroB,EACAyM,GAAsBic,IAAOjqB,EAAG2pB,GAA2BC,EAAIroB,EAAKsoB,EAAM,EAAGI,OAdvEnqB,OAAAA,EACN8pB,EACA/qB,EACAiB,EACC8pB,EACA5qB,EACAc,EAAG8pB,EAAI1qB,EAAGqC,KAdNzB,OAAAA,EACN8pB,EACA/qB,EACAiB,EAAG8pB,EAAI5qB,EAAGuC,IARLzB,OAAAA,EAAG8pB,EAAI/qB,EAAG0C,GALXA,OAAAA,IAgDN2oB,GAAsBjrB,EACzB,SAAU2qB,EAAIroB,EAAKV,GACXb,OAAAA,EAAG2pB,GAA2BC,EAAIroB,EAAK,EAAGV,KAE/CspB,GAAuBprB,EAC1B,SAAUiI,EAAIC,GACT,OAACA,EAAGjI,EAGAe,EAAGmqB,GAAqBlF,GAAoB/d,EAAID,GAFhDA,IAQNojB,GAAoBrrB,EACvB,SAAUD,EAAGkI,GACLjH,OAAAA,EACNmqB,GACAnrB,EACC,SAAUyG,EAAGjE,GACLzB,OAAAA,EACNklB,GACAlmB,EAAE0G,GACFjE,KAEH+F,EACAN,KAECqjB,GAA0BtrB,EAC7B,SAAUD,EAAG0U,GACL8W,OAnB4BC,EAoBlCzqB,EAAGsqB,GAAmBtrB,EAAG0U,GAnBpBzT,EAAGmqB,GAAqBC,GAAsB7iB,EAAWijB,GADtC,IAAUA,IAsBjCC,GAA2C,SAAU3rB,GACjD,MAAA,CAACkE,EAAG,SAAUlE,EAAGA,IAErB4rB,GAA+C,SAAUC,GAErDC,OADKD,EAAK7rB,GAGd+rB,GAA+C,SAAUC,GAErDC,OADKD,EAAKhsB,GAGdksB,GAAyChsB,EAC5C,SAAU4rB,EAAOG,GACTN,OAAAA,GACNC,GAA6CE,GAlIoB,GAkIVC,GAA6CE,MAEnGE,GAA0B/rB,EAC7B,SAAUgsB,EAAIC,EAAI1X,GAEjB,OAAa,CACRvN,KAAAA,EAAWglB,EAAIC,GAAM,GASjB1X,OAAAA,EARH2X,IAAAA,EAAWF,EACdG,EAAWF,EAAK,EAChBG,EAAavrB,EAAGklB,GAAoBkG,EAAI1X,GACzCyX,EAAKE,EACLD,EAAKE,EACL5X,EAAO6X,KAOPC,GAAsBvsB,EACzB,SAAUksB,EAAIC,GACNnrB,OAAAA,EAAGirB,GAAyBC,EAAIC,EAAI5jB,KAIzCikB,GAAmD,SAAU1sB,GACzD,MAAA,CAACkE,EAAG,aAAclE,EAAGA,IAEzB2sB,GAA4C1rB,EAC/CsqB,GACAmB,GACAzrB,EAAGwrB,GARqD,EACCG,IAUtDC,GAAmD,SAAU7sB,GACzD,MAAA,CAACkE,EAAG,aAAclE,EAAGA,IAEzB8sB,GAA4C7rB,EAC/CsqB,GACAsB,GACA5rB,EAAGwrB,GARqD,EACCM,IAQtDC,GAAwC/rB,EAC3CuqB,GACA,SAAUvrB,GACFgB,OAAAA,EACNsqB,GACAW,GAAuCjsB,GACvC6sB,KAEFH,IACGM,GAA2C,SAAUC,GAEjDC,OADOD,EAAOltB,GAGlBotB,GAAyClsB,EAC5CsmB,GACAtnB,EACC,SAAUoF,EAAGnF,GACLe,OAAAA,EACNwoB,GACAuD,GAAyC3nB,GACzCqlB,GACAxqB,KAEH2oB,GACC7nB,EAAG4oB,GAjMgE,IAiMoBgB,KACxFmC,IACGK,GAAuD,SAAUrtB,GAC7D,MAAA,CAACkE,EAAG,eAAgBlE,EAAGA,IAE3BstB,GAAgDD,GAAqD,GACrGE,GAA8ChD,GAAiD,GAC/FiD,GAA+C,SAAUxtB,GACrD,MAAA,CAACkE,EAAG,WAAYlE,EAAGA,IAEvBytB,GAA4CD,GAC/C,CAAC/H,gBAAiBlB,GAAwBgB,MAAO6H,GAAwC9H,aAAcgI,GAA+CI,SAAUnJ,GAAwBoJ,QAAS,EAAGC,SAAUrJ,GAAwBlO,OAAQkO,GAAwBsJ,cAAe,EAAGC,WAAYP,GAA6C/H,gBAAiBjB,KAC/VwJ,GAAyB3tB,EAC5B,SAAU+Q,EAAO/O,EAAO0jB,GAEvB,OAAa,CACRwD,IACAzD,EAAM5kB,EAAGkoB,GADHD,GAA0B9mB,IAAU+O,EACI2U,GAC9CD,GAAU,YAAVA,EAAI3hB,EAAJ2hB,CAUCK,IAAAA,EAASL,EAAI7lB,EACViB,OAAAA,EAAGkoB,GAAgCD,GAAyB9mB,EAAO8jB,GAVtED,IAAAA,EAAUJ,EAAI7lB,EAIlBmR,EAHkBA,EAAQ+V,GAI1B9kB,EAHeA,EAIf0jB,EAHcG,KAWd3B,GAAsB,SAAUtkB,GAC5B,MAAA,CAACkE,EAAG,OAAQlE,EAAGA,IAEnBguB,GAAqB9tB,EACxB,SAAUkC,EAAOyjB,GACZ3a,IAAAA,EAAM2a,EAAI7lB,EACV2pB,EAAa9D,EAAI1lB,EACjB2lB,EAAOD,EAAIxlB,EACX0lB,EAAOF,EAAItlB,EACN6B,OAAAA,EAAQ,GAAOgF,EAAWhF,EAAO8I,IAAQ,EAAMqZ,GAA2Bnd,EAClFhF,EACAqnB,GAAyBve,KAAS,EAAKoZ,GACvCrjB,EAAGkoB,GAAgCD,GAAyB9mB,EAAO2jB,IAASzB,GAC5EpjB,EAAG6sB,GAAwBpE,EAAYvnB,EAAO0jB,MAE7CmI,GAAuB/tB,EAC1B,SAAUqL,EAAQoJ,GACVzT,OAAAA,EACNmqB,GACAnrB,EACC,SAAUyG,EAAGwB,GACLoD,OAAAA,EAAO5E,GAAK1F,EAAGklB,GAAoBxf,EAAGwB,GAAMA,IAErDM,EACAkM,KAECuZ,GAAqB,SAAUvZ,GAC9BA,GAAAA,EAAKxU,EAAG,CACPwG,IAAAA,EAAIgO,EAAK3U,EACJ2U,EAAKxU,EACPmkB,OAAAA,GAAoB3d,GAEpB4d,OAAAA,IAGL4J,GAAwBjuB,EAC3B,SAAU2L,EAAKhI,GACPgF,OAAAA,EACN5H,EAAG2K,GAAeC,EAAKhI,MAEtBuqB,GAAwBziB,GACxB0iB,GAAyB,SAAUxqB,GAC/B3C,OAAAA,EAAGktB,GAAuBjI,GAAoB1d,EAAW5E,IAE7DyqB,GAAgDluB,EACnD,SAAUmlB,EAAOgJ,EAAWC,GACpB,MAAA,CAACjJ,MAAOA,EAAOgJ,UAAWA,EAAWC,UAAWA,KAGrDC,GAtrHKC,SAAaljB,GAEjBmjB,IAAAA,EAAOnjB,EAAKJ,WAAW,GACvB,OAAA,OAAUujB,GAAQA,GAAQ,MAEJ,MAAjBA,EAAO,OAAkBnjB,EAAKJ,WAAW,GAAK,MAAS,MAEzDujB,GAgrHJC,GAAwB,SAAUC,GACjCF,IAAAA,EAAOF,GAAqBI,GACxBF,OAAAA,GAAQ,IAAQ,IAAMA,GAE3BG,GAA4C5uB,EAC/C,SAAU6uB,EAAO7B,GACTjsB,OAAAA,EACNyoB,GACAuD,GAAyCC,GACzC6B,KAGCC,GAAwB9lB,EACxB+lB,GAA2C,SAAUjuB,GACpDmU,IAAAA,EAAKnU,EArSiD,EAqSW,EACjEf,EAAIgB,EAAG+tB,GAtS+C,EAsS8BhuB,GACjF2qB,OAAAA,GAA0C1rB,EA7IO,EAzJW,IAsS0CkV,EApIrD,KAsIrD+Z,GAAgDhvB,EACnD,SAAU6uB,EAAOtjB,GACTvK,OAAAA,EACN4tB,GACAC,EACAE,GAAyCxjB,EAAM8iB,UAAa,EAAI9iB,EAAM+iB,WACtE/iB,EAAM8Z,SAEL4J,GAAwB,SAAUN,GACjCF,IAAAA,EAAOF,GAAqBI,GACxBF,OAAAA,GAAQ,IAAQ,IAAMA,GAE3BS,GAAqBlvB,EACxB,SAAUD,EAAGgpB,GACRA,GAAY,SAAZA,EAAM/kB,EAAc,CACnB3B,IAAAA,EAAQ0mB,EAAMjpB,EACXskB,OAAAA,GACNrkB,EAAEsC,IAEIgiB,OAAAA,KAGN8K,GAA8C9E,GAAiD,GAC/F+E,GAvsHKC,SAAc/jB,GAEf3D,OAAAA,EAAW2D,EAAKgkB,gBAssHpBC,GAA8ChF,GAA+C,GAC7FiF,GAA4CjF,GAA+C,GAC3FkF,GAA8ClF,GAA+C,GAC7FmF,GAA4CnF,GAA+C,GAC3FoF,GAA6CpF,GAA+C,GAC5FqF,GAA4CrF,GAA+C,GAC3FsF,GAAgD,SAAUlB,GACzDmB,IAAAA,EAAKV,GAAsBT,GACxBnoB,OAAAA,EACNspB,EACAnoB,EAAW,MAAQyc,GAAoBsL,IAA8ClpB,EACrFspB,EACAnoB,EAAW,MAAQyc,GAAoBqL,IAAgDjpB,EACvFspB,EACAnoB,EAAW,MAAQyc,GAAoBmL,IAAgD/oB,EACvFspB,EACAnoB,EAAW,MAAQyc,GAAoBwL,IAA8CppB,EACrFspB,EACAnoB,EAAW,MAAQyc,GAAoBuL,IAA+CnpB,EACtFspB,EACAnoB,EAAW,MAAQyc,GAAoBoL,IAA6CnL,IASlF0L,GAAkD/vB,EACrD,SAAU2uB,EAAOpjB,GACZoa,IAAAA,EAT0C,SAAUgJ,GAClD5tB,OAAAA,EACNmuB,GACA9E,GACC6E,GAAsBN,GAAStB,GAA8C8B,IAC9EU,GAA8ClB,IAIpCqB,CAA0CrB,GAChDhJ,GAAU,SAAVA,EAAI3hB,EAAc,CACjB6qB,IAAAA,EAAQlJ,EAAI7lB,EACT8H,OAAAA,EACN2D,EACA,CACC8Z,MAAOtkB,EAAGiuB,GAA+CH,EAAOtjB,GAChE8iB,UAAW9iB,EAAM8iB,UAAY,IAGxBK,OAAAA,GAAsBC,GAAS/mB,EACrC2D,EACA,CACC8iB,UAAY9iB,EAAM8iB,UAAYE,GAAqBI,GAAUJ,GAC5D5mB,EAAW,QACPnB,EACNmoB,EACAhnB,EAAW,MAAQC,EACnB2D,EACA,CAAC8iB,UAAW,EAAGC,UAAW/iB,EAAM+iB,UAAY,IAAM/iB,IAalD0kB,GAA2CjwB,EAC9C,SAAUgtB,EAAQ3H,GACVtkB,OAAAA,EACN8nB,GACA8B,GACA5pB,EACC+sB,GACAf,GAAyCC,GACzC3H,MAEA6K,GAAmD,SAAUvB,GACzDnoB,OAAAA,EACNmoB,EACAhnB,EAAW,MAAQ,EAAKnB,EACxBmoB,EACAhnB,EAAW,MAAQ,EAAKnB,EACxBmoB,EACAhnB,EAAW,MAAQ,EAAKnB,EACxBmoB,EACAhnB,EAAW,MAAQ,EAAI,GAarBwoB,GAA6CpvB,EAAGqpB,GAAuC+E,GAA6CK,IACpIY,GAA6CrvB,EAAGqpB,GAAuCiD,GAA6CmC,IACpIa,GAAyBrwB,EAC5B,SAAUuN,EAAU+iB,GACfA,MAAiB,SAAjBA,EAAWtsB,EAEPuJ,EADK+iB,EAAWxwB,GAGhBukB,KAGNkM,GAAiD,SAAU5B,GACvDnoB,OAAAA,EACNmoB,EACAhnB,EAAW,MAAQyc,GAAoBiJ,IAAgD7mB,EACvFmoB,EACAhnB,EAAW,MAAQyc,GAAoB+K,IAA+C9K,IASpFmM,GA3nIKC,SAAehsB,GAEhBA,OAAAA,EAAIzC,QA0nIR0uB,GAAwB3kB,GACxB4kB,GAA2B3wB,EAC9B,SAAU8C,EAAGa,GACJb,OAAAA,EAAI,EAAKa,EAAS3C,EACzB0vB,GACA5tB,EACA0tB,GAAuB7sB,GACvBA,KAECitB,GAAiD,SAAUjC,GAC1DkC,IAAAA,EAAKtC,GAAqBI,GAASJ,GACtC5mB,EAAW,MACHkpB,OAAAA,GAAM,GAAO3pB,EAAW2pB,EAtcyB,GAscmC,EAAMzM,GAClGoI,GAAiDqE,EA7SM,IA6SsDxM,IAS3GyM,GAAiD,SAAUnC,GAC1D1Z,IAAAA,EAAIsZ,GAAqBI,GAASJ,GACrC5mB,EAAW,MACHsN,OAAAA,GAAK,GAAO/N,EAAW+N,EAjd0B,GAidiC,EAAMmP,GAChGuI,GAAiD1X,EAjTM,IAiTqDoP,IAS1G0M,GAA+C,SAAUptB,GACxDsR,IAAAA,EARkD,SAAUtR,GACzD5C,OAAAA,EACNsvB,GACAS,GACA9C,GACCG,GAAuBxqB,KAGjBqtB,CACPjwB,EAAG4vB,GAA0B,EAAGhtB,IAC7B5D,EAvBkD,SAAU4D,GACzD5C,OAAAA,EACNsvB,GACAO,GACA5C,GACCG,GAAuBxqB,KAkBjBstB,CAAiDttB,GACrD5D,GAAQ,SAARA,EAAEiE,EAAc,CACf6sB,IAAAA,EAAK9wB,EAAED,EACJiB,OAAAA,EACNmuB,GACAlD,GAAuC6E,GACvC5b,GAEMoP,OAAAA,IA2DL6M,GAA8CnwB,EACjD8nB,GACA0E,IA1D2DvI,GA2Df,2DA1DxCC,GAAa2D,GAChB7nB,EAAGktB,GAAuB,IAAKjJ,KAC5BE,GAAY6L,GACfhwB,EACC8nB,GACA,IACA9nB,EAAG+sB,GAAoB,EAAG7I,MAhEoCthB,GAkE/D5C,EACC8nB,GACA,IACA9nB,EAAG+sB,GAAoB,EAAG7I,KAJxBE,GAhEGpkB,EACNsvB,GACAE,GACAvC,GACCG,GAAuBxqB,MAiErByhB,GAnGoD,SAAUzhB,GAC3DwpB,OAAAA,GACNnsB,EACCsmB,GACAsC,GACA,EACA7oB,EACCsqB,GACA6E,GACA/B,GAAuBxqB,MA0FPwtB,CAClBpwB,EACC8nB,GACA,IACA9nB,EAAG+sB,GAAoB,EAAG7I,MACxBI,GAvI0C,SAAUL,GACjD,OAGNhkB,EACCsmB,GACAyI,GACA/uB,EAAGotB,GAA+ClB,GAAwC,EAAGkE,GAC7FjD,GAAuBnJ,IANfK,MAqIEgM,CACXtwB,EACC8nB,GACA,GACA9nB,EAAG+sB,GAAoB,EAAG7I,MACxBK,GAAkB0I,GACrBjtB,EACCgtB,GACA,SAAU3oB,GACFoB,OAAAA,EACNzF,EAAGkvB,GAA0C7qB,EAAGigB,IAChD+K,KAEFtD,KACEvH,GAAkByI,GACrBjtB,EACCgtB,GACA,SAAU3oB,GACFoB,OAAAA,EACNzF,EAAGkvB,GAA0C7qB,EAAGigB,IAChD8K,KAEFrD,KACK1I,GACNkJ,GACC,CACC/H,gBAAiBA,GACjBF,MAAOA,GACPD,aAAcA,GACdoI,SAAUtI,GACVuI,QAAS,EACTC,SAAUrJ,GACVlO,OAAQkO,GACRsJ,cAAe,EACfC,WAAY7sB,EAAG8nB,GAA4BwE,GAA6ClI,IACxFG,gBAAiBA,QAOjBgM,GAAwC,CAC3CC,iBAAkB,EAClBC,gBAAiBN,GACjBO,UAAW7I,GACVjgB,EACC,CAACuoB,MACHxvB,OAloBmD,CAACsC,EAAG,iBAmoBvD0tB,KAAMnpB,GAEHopB,GAA+BhL,GAA4B2K,IAC3DM,GAAgC,CAACC,eAAgBtpB,EAAWuJ,MAAOuS,GAAwByN,KAAMH,GAA8BI,UAr4BpG,CAAC/tB,EAAG,QAq4BqIguB,SAAS,EAAOC,KAAM5N,GAAwB6N,QAAS,GAAIC,eAAgB9N,IAC/O+N,IAtgG4BptB,GAsgGwB,SAtgGlBgQ,GAsgG4B0R,GApgGjE/R,GAAwB3P,IACxBuN,GAAyBvN,IAAQ,CAChCzE,EAAGqU,GACHK,EAAGD,GACHlV,EAAG+U,IAEGxB,GAAerO,KA+/FnBqtB,GAAkC/wB,EAClCgxB,GAAgChyB,EACnC,SAAUuqB,EAAI0H,EAAWvnB,EAAK6c,EAAUhC,GAEvC,OAAa,CACR0M,GAAAA,EAAY,EACRxxB,OAAAA,EACNqnB,IACA,EACA,CAACP,SAAUA,EAAUC,aAAe9c,EAnzBP,GAmzB4C,EAAG6a,KAAMA,IAE/E2M,IAAAA,EAAOrL,GACVnmB,EAAGqxB,GAtzB0B,GAszBoCE,EAAW1H,IAM7EA,EALeA,EAMf0H,EALmBA,EAxzBW,GA8zB9BvnB,EALaA,EAMb6c,EALkB9mB,EAAGklB,GAAoBuM,EAAM3K,GAM/ChC,EALcA,KAWdrW,GAA4BxP,EAC/B,SAAUgL,EAAK6f,GACV7f,GAAAA,GAAO,EACHkc,OAAAA,GAEHuL,IAAAA,EAAUznB,EA30BiB,GA40B3B6a,EAAO7kB,EAAGqxB,GAAiCI,EAASznB,EAAMynB,EAAS5H,GAEhE3pB,OAAAA,EAAGoxB,GAA+BzH,EADjB7f,EAAMynB,EA70BC,GA80BgCznB,EAAKzC,EAAWsd,KAG9EvX,GAAsB,SAAUxO,GAC5B,MAAA,CAACkE,EAAG,MAAOlE,EAAGA,IAElB+M,GAAqB,SAAU/M,GAC3B,MAAA,CAACkE,EAAG,KAAMlE,EAAGA,IAEjB8O,GAAuB,SAAUlN,GAChCA,MAAa,OAAbA,EAAOsC,GAMRuK,GAA+BvO,EAClC,SAAUF,EAAGG,GACL,MAAA,CAAC+D,EAAG,UAAWlE,EAAGA,EAAGG,EAAGA,KAE7B4O,GAA6B7O,EAChC,SAAUF,EAAGG,GACL,MAAA,CAAC+D,EAAG,QAASlE,EAAGA,EAAGG,EAAGA,KAE3B6O,GAA6B9O,EAChC,SAAUF,EAAGG,GACL,MAAA,CAAC+D,EAAG,QAASlE,EAAGA,EAAGG,EAAGA,KAE3BmP,GAA6B,SAAUtP,GACnC,MAAA,CAACkE,EAAG,QAASlE,EAAGA,IAGpB4yB,GAAwB,SAAU/D,GACjCF,IAAAA,EAAOF,GAAqBI,GACxB,OAAA,IAAMF,GAAUA,GAAQ,KAE7BkE,GAAwB,SAAUhE,GAC9B+D,OAAAA,GAAsB/D,IAAUM,GAAsBN,IAE1DiE,GAA2B,SAAUjE,GACjC+D,OAAAA,GAAsB/D,IAAWM,GAAsBN,IAAUD,GAAsBC,IAE3FkE,GAAuB,SAAU5qB,GAC7BjH,OAAAA,EACNsmB,GACAtnB,EACC,SAAU2lB,EAAK7kB,GACPA,OAAAA,EAAI,IAEb,EACAmH,IAEE6qB,GAAqB/pB,EACrBgqB,GAA2B/yB,EAC9B,SAAUD,EAAGkI,GACLjH,OAAAA,EACN8xB,GACA/yB,EACAgB,EACCwrB,GACA,EACAsG,GAAqB5qB,GAAM,GAC5BA,KAEC+qB,GAAsB/mB,GACtBgnB,GAA0BzmB,GAC1B0mB,GAAuBlzB,EAC1B,SAAU2L,EAAKwnB,GACPpyB,OAAAA,EACN8K,GACAF,EACA7C,EAAcqqB,MAEbC,GAn3IKC,SAAe1vB,GAEnBsH,IAAAA,EAAOtH,EAAOuH,WAAW,GACtBD,OAAAA,EACJmZ,GACD,OAAUnZ,GAAQA,GAAQ,MACvBlJ,EAAc4F,EAAWhE,EAAO,GAAKA,EAAO,IAAKA,EAAOf,MAAM,IAC9Db,EAAc4F,EAAWhE,EAAO,IAAKA,EAAOf,MAAM,KAEpDyhB,IA22IAiP,GAA8B,SAAU7uB,GACpC1D,OAAAA,EACNmyB,GACA,SACAnyB,EAAGktB,GAAuB,KAAMxpB,KAE9B8uB,GAA8BzjB,GAC9B0jB,GAAkCxzB,EACrC,SAAUc,EAAGgR,GACL,MAAA,QAAWmhB,GAAwBnyB,EAAI,GAAM,KAAOwyB,GAC1DthB,GAAmCF,MAElCE,GAAqC,SAAUF,GAC3C/Q,OAAAA,EAAG0yB,GAAwC3hB,EAAOvJ,IAEtDkrB,GAAyCzzB,EAC5C,SAAU8R,EAAO4hB,GAChBC,EACA,OACS7hB,OAAAA,EAAM9N,GACR,IAAA,QACAjE,IAAAA,EAAI+R,EAAMhS,EACV8zB,EAAM9hB,EAAM7R,EACZ4zB,EAAW,WACVC,IAAAA,EAAMV,GAAuBrzB,GAC7B+zB,GAAU,YAAVA,EAAI9vB,EACA,OAAA,EAEH+vB,IAAAA,EAAMD,EAAIh0B,EACV6uB,EAAQoF,EAAIj0B,EACZk0B,EAAOD,EAAI9zB,EACR0yB,OAAAA,GAAsBhE,IAAU5tB,EAAGiyB,GAAqBJ,GAA0BoB,GAR5E,GAYXC,EAAcL,EACjBM,EAAgBnzB,EAAGklB,GAFJ4N,EAAY,IAAM9zB,EAAM,KAASA,EAAI,KAEF2zB,GACnD5hB,EAAQmiB,EACRP,EAAUQ,EACDP,SAAAA,EACL,IAAA,QACA7yB,IAAAA,EAAIgR,EAAMhS,EAEVq0B,GADAP,EAAM9hB,EAAM7R,EACA,IAAOgzB,GAAwBnyB,GAAK,KAChDmzB,EAAcL,EACjBM,EAAgBnzB,EAAGklB,GAAoBkO,EAAWT,GACnD5hB,EAAQmiB,EACRP,EAAUQ,EACDP,SAAAA,EACL,IAAA,QACAzkB,IAAAA,EAAS4C,EAAMhS,EACf,GAACoP,EAAOjP,EAWL,CACF,GAACiP,EAAOjP,EAAEA,EAOP,CACFm0B,IAUAC,GATEX,EAAQzzB,EAGL,gCAAkCc,EACxCmyB,GACA,GACAjkB,GAAsBykB,IALhB,qBAQqB,4BAA+BT,GAC5DJ,GAAqB3jB,IAAW,SAC1BnO,OAAAA,EACNmyB,GACA,OACAnyB,EACCklB,GACAoO,EACAtzB,EAAGgyB,GAA0BS,GAAiCtkB,KAtBhE4C,EAFImiB,EADAL,EAAM1kB,EAAOpP,EAIjB4zB,EAFCQ,EAAgBR,EAGRC,SAAAA,EAjBH,MAAA,sDACDD,EAAQzzB,EAGL,WAAac,EACnBmyB,GACA,GACAjkB,GAAsBykB,IALhB,KAsCX,QACK7iB,IAAAA,EAAMiB,EAAMhS,EACZw0B,EAAOxiB,EAAM7R,EAWVo0B,OAVHA,EACEX,EAAQzzB,EAGL,iCAAoCc,EAC1CmyB,GACA,GACAjkB,GAAsBykB,IAAY,YAL5B,sCAQcJ,GACtBvyB,EAAGwyB,GAA6B,EAAGe,IAAU,QAASzjB,KAIxD0jB,GAA2BtnB,GAO3BunB,GAA6BxnB,GAC7BynB,GArqGKC,SAAuB1vB,EAAMgQ,GAQ9B3B,OANPsB,GAAwB3P,GACxBuN,GAAyBvN,GAAQ,CAChCjF,EAAG2V,GACHT,EAAGD,EACHlV,EAAG+V,IAEGxC,GAAerO,GA6pGS0vB,CAAuB,QAASF,IAC5DG,GAA6B,CAAC3wB,EAAG,UACjC4wB,GAAgC,CAAC5wB,EAAG,aACpC6wB,GAA4B,SAAU/0B,GAClC,MAAA,CAACkE,EAAG,QAASlE,EAAGA,IAEpBg1B,GAA8B,SAAUh1B,GACpC,MAAA,CAACkE,EAAG,UAAWlE,EAAGA,IAEtBi1B,GAAiC,CAAC/wB,EAAG,cACrCgxB,GAA4B,CAAChxB,EAAG,SAChCixB,GAA6B,CAACjxB,EAAG,UACjCkxB,GAA+B5nB,GAC/B6nB,GAnoIKC,SAAWvkB,GAEZ,MAAA,CACN7M,EAAG,EACHlE,EAAG+Q,IAgoIDwkB,GAA6BloB,GAC7BqL,GAA2BhL,GAC3B8nB,GAA8BpoB,GAC9BqL,GA/oIKgd,SAAc1kB,GAEf,MAAA,CACN7M,EAAG,EACHlE,EAAG+Q,IA4oID2kB,GAAiCz0B,EACpCm0B,GACA,SAAU/Y,GACDA,OAAAA,GACF,IAAA,QACG5D,OAAAA,GAA6Byc,IAChC,IAAA,SACGzc,OAAAA,GAA6B0c,IAChC,IAAA,UACGl0B,OAAAA,EACNyX,GACAsc,GACA/zB,EAAGs0B,GAA4B,OAAQC,KACpC,IAAA,UACG/c,OAAAA,GAA6Bwc,IACrC,QACQI,OAAAA,GAA0B,oBAGpCp0B,EAAGs0B,GAA4B,OAAQC,KACpCG,GAAkC10B,EACrCm0B,GACA,SAAU/Y,GACDA,OAAAA,GACF,IAAA,QACGpb,OAAAA,EACNyX,GACAqc,GACA9zB,EAAGs0B,GAA4B,KAAMC,KAClC,IAAA,SACGv0B,OAAAA,EAAGs0B,GAA4B,OAAQG,IAC/C,QACQL,OAAAA,GAA0B,oBAGpCp0B,EAAGs0B,GAA4B,OAAQC,KACpCI,GAjlJKC,SAAYC,GAAe,OAACA,GAklJjCC,GAA8B,SAAU3jB,GACpCtK,OAAAA,EACNsK,EACA,CACC2f,eAAgBtpB,EAChBupB,KAAMH,GACNI,UAAW7f,EAAM8f,QAAU2C,GAA6BC,GACxD5C,SAAU9f,EAAM8f,QAChBG,eAAgB9N,MAGfyR,GAA8B,SAAUC,GACpC9oB,OAAAA,GACNjM,EACCsmB,GACAtnB,EACC,SAAU2lB,EAAKqQ,GACV9xB,IAAAA,EAAIyhB,EAAI7lB,EACR2e,EAAIkH,EAAI1lB,EACLe,OAAAA,EAAGiP,GAAgB/L,EAAGua,EAAGuX,KAvzHC,GA0zHnCD,KAECE,GAA8BhpB,GAC9BipB,GAA2B,SAAUrlB,GACjCuhB,OAAAA,GACN0D,GACCntB,EACC,CACC5G,EACA,OACAk0B,GAA4B,SAC5Bl0B,EACA,OACA+zB,GAA4BjlB,SAG7BslB,GA17GKC,SAAgB3hB,GAEjB,MAAA,CACNzQ,EAAG,EACH0Q,EAAGD,IAu7GD4hB,GAA6BF,GAA4B5tB,GACzD+tB,GAA4Bh0B,EAC5Bi0B,GAv3KKC,SAAmBn0B,GAEjB,MAAA,CAACA,IAs3KRo0B,GAAkCr2B,EACrC,SAAU6Q,EAAO/O,EAAO2jB,EAAMD,GACzBwD,IAAAA,EAAMJ,GAA0B9mB,IAAU+O,EAC1C/J,GAAAA,EACHkiB,EACAlB,GAA4BtC,KAAU,EAAG,CACrC3U,GAAU,IAAVA,EACIlQ,OAAAA,EACNu1B,GACAnP,GAAoBtB,GACpBD,GAEGyD,IAAAA,EAASjC,GACZnmB,EAAGw1B,GAAiCxlB,EAAQ+V,GAA0B9kB,EAAO2jB,EAAMoB,KAC7ElmB,OAAAA,EAAGu1B,GAA2BjN,EAAQzD,GAG1CvjB,IAAAA,EAAQtB,EAAGkoB,GAAgCG,EAAKxD,GAChDvjB,GAAY,YAAZA,EAAM2B,EAAiB,CACtB+hB,IAAAA,EAAU1jB,EAAMvC,EAChBupB,EAASjC,GACZnmB,EAAGw1B,GAAiCxlB,EAAQ+V,GAA0B9kB,EAAO2jB,EAAME,IAC7E/kB,OAAAA,EAAGkoB,GAAgCE,EAAKC,EAAQzD,GAEnDyD,EAASjC,GACZnmB,EACCw1B,GACAxlB,EAAQ+V,GACR9kB,EACA2jB,EACA0Q,GAA+Bl0B,KAC1BrB,OAAAA,EAAGkoB,GAAgCE,EAAKC,EAAQzD,KAIvD8Q,GAAmC12B,EACtC,SAAU22B,EAAShR,GACd3a,IAAAA,EAAM2a,EAAI7lB,EACV2pB,EAAa9D,EAAI1lB,EACjB2lB,EAAOD,EAAIxlB,EACX0lB,EAAOF,EAAItlB,EACXu2B,EAAkB1O,GAA4BrC,GAC9CgR,EAAa3O,GAA4ByO,GACzCG,EAAc9rB,GAAO6rB,EAAaD,GAClCpwB,GAAAA,EAAUqwB,EA3pCkB,IA2pCwB,CAEnDE,GADW7vB,EAAW4vB,IAAgB9P,GAA0B,GAAKyC,GAAc,EACzE,CACTuN,IAAAA,EAAWvN,EAAazC,GACxBiQ,EAAUh2B,EACbw1B,GACAO,EACAhsB,EACA2rB,EACAJ,GACCnP,GAAuBxB,KAClB3kB,OAAAA,EAAG2lB,GAAkCkQ,EAAaE,EAAUC,EAAShQ,IAErEhmB,OAAAA,EACN2lB,GACAkQ,EACArN,EACAxoB,EAAGw1B,GAAiChN,EAAYze,EAAK2rB,EAAS/Q,GAC9DqB,IAGKhmB,OAAAA,EAAG2lB,GAAkCkQ,EAAarN,EAAY7D,EAAM+Q,KAG1EO,GAAsBl3B,EACzB,SAAUF,EAAGqC,GACR0jB,IAAAA,EAAO1jB,EAAM9B,EACVU,OAAAA,EACN21B,GACA31B,EAAGu1B,GAA2Bx2B,EAAG+lB,GACjC1jB,KAECg1B,GAA+Bt0B,EAC/Bu0B,GAA6B30B,EAC7B40B,GAAmCr3B,EACtC,SAAU6lB,EAAMyC,GACXmK,IAAAA,EAAUvK,GAA4BrC,GACtCyR,EAhsC4B,GAgsCiBpP,GAA4BI,EAAQzC,MAAS4M,EAC1F8E,EAAWv2B,EAAGm2B,GAjsCc,GAisC6C7O,EAAQzC,KAAMA,GACnFyR,OAAAA,EAAc,EAAK,CAC1BzP,SAAU9mB,EACTklB,GACAkB,GAAoBoQ,GACpBjP,EAAQT,UACTC,aAAcQ,EAAQR,aAAe,EACrCjC,KAAM7kB,EAAGo2B,GAA4BE,EAAa7E,EAAS5M,IACrDyR,EAOH,CAACzP,SAAUS,EAAQT,SAAUC,aAAcQ,EAAQR,aAAcjC,KAAM0R,GAPrD,CACrB1P,SAAU9mB,EACTklB,GACAkB,GAAoBoQ,GACpBjP,EAAQT,UACTC,aAAcQ,EAAQR,aAAe,EACrCjC,KAAMoB,MAGLuQ,GAAqBx3B,EACxB,SAAU8C,EAAG2R,GAEZ,OAAa,CACR3R,GAAAA,GAAK,EACD2R,OAAAA,EAEH,IAACA,EAAKxU,EACFwU,OAAAA,EAECA,EAAK3U,EAIbgD,EAFcA,EAAI,EAGlB2R,EAJSA,EAAKxU,KAUfw3B,GAA2Bz3B,EAC9B,SAAU0C,EAAMP,GACX6I,IAAAA,EAAM7I,EAAMrC,EACZ8lB,EAAOzjB,EAAMhC,EACb0lB,EAAO1jB,EAAM9B,EACb,GAACqC,EAEE,CACFwE,GAAAA,EACHxE,EACA6mB,GAAyBve,KAAS,EAC3B/J,OAAAA,EACN2lB,GACA5b,EAAMtI,EACNskB,GACAC,GACAjmB,EACCo2B,GACA10B,EAAO6mB,GAAyBve,GAChCkd,GAA4BrC,GAC5BA,IAEE6R,IAAAA,EAAah1B,EA7vCa,GA6vCyB,EACnDojB,EAAS9lB,EACZ,SAAUuW,EAAM/T,GACX+T,GAAW,YAAXA,EAAKvS,EAAiB,CACrB+hB,IAAAA,EAAUxP,EAAKzW,EACZkB,OAAAA,EAAGwkB,GAA4BM,EAAQtjB,EAAKujB,GAE/CyM,IAAAA,EAAOjc,EAAKzW,EACTiB,OAAAA,EAAGklB,GAAoBuM,EAAMhwB,KAGnCm1B,EAAY32B,EACfwkB,GACAM,EACAnd,EACC,CAACkd,IACFD,GACGgS,EAAgB72B,EAAGy2B,GAAoBE,EAAWC,GAClD,GAACC,EAAc33B,EAEZ,CACF43B,IAAAA,EAAOD,EAAc93B,EACrBk0B,EAAO4D,EAAc33B,EAErB63B,EAAiB,CACpBjQ,SAAUtf,EACVuf,aAAc,EACdjC,KAAM7kB,EACLo2B,GALe10B,EApxCY,GAoxCJg1B,EAOvBxP,GAA4B2P,GAC5BA,IAEK92B,OAAAA,EACNqnB,IACA,EACApnB,EAAGsmB,GAAqB+P,GAAkCS,EAAgB9D,IAjBpE9M,OAAAA,GAnCF/kB,OAAAA,IAyDN41B,GAA8B33B,EACjC,SAAU6Q,EAAO1K,EAAKyxB,EAASpS,GAE9B,OAAa,CACRwD,IACAzD,EAAM5kB,EAAGkoB,GADHD,GAA0BgP,IAAY/mB,EACE2U,GAC9CD,GAAU,YAAVA,EAAI3hB,EAAJ2hB,CAYCK,IAAAA,EAASL,EAAI7lB,EACVkB,OAAAA,EAAGo2B,GAA4B,EAAGpO,GAAyBziB,EAAKyf,GAZnE7Z,IAAAA,EAAMwZ,EAAI7lB,EAKdmR,EAJkBA,EAAQ+V,GAK1BzgB,EAJaA,EAKbyxB,EAJiBA,EAKjBpS,EAJczZ,KAYd8rB,GAA2B/3B,EAC9B,SAAUg4B,EAAUlB,EAAUpR,GAE7B,OAAa,CACP1e,GAAAA,EAAWgxB,EAAUlB,GAAY,IAAQ9O,GAA4BtC,GAClEA,OAAAA,EAEHD,IAAAA,EAAM5kB,EAAGkoB,GAAgC,EAAGrD,GAC5CD,GAAU,YAAVA,EAAI3hB,EAUA4hB,OAAAA,EATHzZ,IAAAA,EAAMwZ,EAAI7lB,EAIdo4B,EAHqBA,EAAWlR,GAIhCgQ,EAHkBA,EAIlBpR,EAHczZ,KAWfgsB,GAA2Bj4B,EAC9B,SAAU+Q,EAAOmnB,EAAQxS,GACpByS,IAAAA,EAAUrP,GAA0BoP,IAAWnnB,EAC/C0U,EAAM5kB,EAAGkoB,GAAgCoP,EAASzS,GAClDD,GAAU,YAAVA,EAAI3hB,EAAiB,CACpBmI,IAAAA,EAAMwZ,EAAI7lB,EACVupB,EAASroB,EAAGm3B,GAA0BlnB,EAAQ+V,GAA0BoR,EAAQjsB,GAC5E,OAAC+b,GAA4BmB,GAA8DroB,EAClGkoB,GACAmP,EACAjR,GAAuBiC,GACvBroB,EAAGo2B,GAA4B,EAAGiB,EAAU,EAAGzS,IAJA5kB,EAAGo2B,GAA4B,EAAGiB,EAASzS,GAMpF5kB,OAAAA,EAAGo2B,GAA4B,EAAGiB,EAASzS,KAGjD0S,GAA4Bt4B,EAC/B,SAAUuG,EAAKpE,GACV6I,IAAAA,EAAM7I,EAAMrC,EACZ2pB,EAAatnB,EAAMlC,EACnB2lB,EAAOzjB,EAAMhC,EACb0lB,EAAO1jB,EAAM9B,EACbmG,GAAAA,EAAUD,EAAKyE,GACX7I,OAAAA,EAEH+E,GAAAA,EACHX,EACAgjB,GAAyBve,KAAS,EAC3B/J,OAAAA,EACN2lB,GACArgB,EACAkjB,EACA7D,EACA5kB,EAAGo2B,GAA4B,EAAGpO,GAAyBziB,EAAKsf,IAE7DuS,IAAAA,EAAS7O,GAAyBhjB,GAClCS,EAAQghB,GACXjnB,EACC+lB,GA13C4B,GA43C5B/lB,EAAGknB,GAAqB,EAAGmQ,EAAS,KAClCpB,EAAWj2B,EAAGknB,GAAqB,EAAGjhB,EAAQggB,IAC3C/lB,OAAAA,EACN2lB,GACArgB,EACAywB,EACAh2B,EACCi3B,GACAxO,EACAuN,EACAh2B,EAAGm3B,GAA0B1O,EAAY2O,EAAQxS,IAClD3kB,EAAG82B,GAA6BtO,EAAYljB,EAAK6xB,EAAQxS,MAI1D2S,GAAgCv4B,EACnC,SAAUkC,EAAOyjB,GACZ3a,IAAAA,EAAM2a,EAAI7lB,EACV04B,EAAYt2B,EAAQ,EAAM8I,EAAM9I,EAASA,EACrCs2B,OAAAA,EAAW,EAAK,EAAMtxB,EAAWsxB,EAAUxtB,GAAO,EAAKA,EAAMwtB,IAEnEC,GAAuBv4B,EAC1B,SAAUwC,EAAMC,EAAIR,GACfu2B,IAAAA,EAAY33B,EAAGw3B,GAA+B51B,EAAIR,GAClDw2B,EAAc53B,EAAGw3B,GAA+B71B,EAAMP,GAClD+E,OAAAA,EAAWyxB,EAAaD,GAAa,EAAKxR,GAAuBnmB,EACxE02B,GACAkB,EACA53B,EAAGu3B,GAA2BI,EAAWv2B,MAExCy2B,GAA2C,SAAU9G,GACjDA,OAAAA,EAAKN,iBAGTqH,GAA+C,SAAU7L,GACrDjsB,OAAAA,EACNyoB,GACAuD,GAAyCC,GACzCvC,KAEEqO,GAA6C54B,EAChD,SAAUwC,EAAMC,EAAI0iB,GACfwJ,IAAAA,EAAQ9tB,EAAGkvB,GAA0CvtB,EAAM2iB,GACxDrkB,OAAAA,EACN4tB,GACAC,EACAlsB,EACA5B,EAAG83B,GAA8Cn2B,EAAM2iB,MAGtD0T,GAAyC,SAAUC,GAE/CC,OADKD,EAAKl5B,GAGdo5B,GAAuC,SAAUF,GAC7CjK,OAAAA,GACLgK,GAAuCC,IAAS,EAAK,KAKpDG,GAA2C,SAAUH,GAChD,OAAA,MAAWD,GAAuCC,IAEvDI,GAAqC,SAAUJ,GAC3CjK,OAAAA,GACyC,GAA/CgK,GAAuCC,KAErCK,GAAmD,SAAUL,GACzDG,OAAAA,GAAyCH,IAAU9xB,EACzD6lB,GACCmM,GAAqCF,IACtCjM,GACCqM,GAAmCJ,KAAU,GAE5CM,GAAoD,SAAUN,GAC1DG,OAAAA,GAAyCH,IAAU9xB,EACzD6lB,GACCmM,GAAqCF,IACtCjM,GACCqM,GAAmCJ,KAAU,GAE5CO,GAA4C,SAAUP,GACrD3kB,IAAAA,EAAIkW,GACNwO,GAAuCC,IAAS,GAAM,GACjDxyB,OAAAA,EAAU6N,EAAGmW,IAA6CnG,GAAyBD,GAAoB/P,IAE3GmlB,GAA0C,SAAU3K,GAEhD4K,OADM5K,EAAM/uB,GAGhB45B,GAAyC,SAAU7K,GAC/CxE,OAAAA,GACNmP,GAAwC3K,IAAU,IAEhD8K,GAAgD,SAAUC,GAEtDC,OADMD,EAAM95B,GAGhBg6B,GAAwC95B,EAC3C,SAAUgtB,EAAQ6M,GACVpO,OAAAA,GACNsB,GAAyCC,GAAU2M,GAA8CE,MAEhGE,GAAyC,SAAU/M,GAC/CR,OAAAA,GACNzrB,EACC+tB,GA/uCiE,GAivCjE/B,GAAyCC,MAExCgN,GAAyC,SAAUhN,GAC/CL,OAAAA,GACLI,GAAyCC,GArvCwB,GAqvCkD,IAElHiN,GAAqD,SAAUn6B,GAC3D,MAAA,CAACkE,EAAG,cAAelE,EAAGA,IAE1Bo6B,GAA2CD,GAAmD,GAC9FE,GAAkDn6B,EACrD,SAAUc,EAAG84B,GACLK,OAAAA,GACNn5B,EAAI64B,GAA8CC,MAKjDQ,GAAgD,SAAUR,GACtD74B,OAAAA,EAAGo5B,IAAkD,EAAGP,IAE5DS,GAA2CD,GAA8CF,IACzFI,GAA0Ct6B,EAC7C,SAAUg5B,EAAM3T,GACXkV,IAAAA,EAAKb,GACR34B,EACCkvB,GACAiJ,GAAqCF,GACrC3T,IACE1iB,EAAKy2B,GAAmCJ,GACxCt2B,EAAOw2B,GAAqCF,GAC5CrT,EAAM4T,GAA0CP,GAChDrT,GAAU,YAAVA,EAAI3hB,EAAiB,CACpBq1B,GAAAA,GAAiDL,GAC7Ch4B,OAAAA,EACN83B,GACA/3B,EAAG+4B,GAAuCn3B,EAAIu3B,IAC9Cn5B,EAAG+4B,GAAuCp3B,EAAMw3B,IAChDl5B,EAAG83B,GAA4Cp2B,EAAMC,EAAI0iB,IAEtDiU,GAAAA,GAAkDN,GAC9Ch4B,OAAAA,EACN83B,GACA/3B,EACC+4B,GACAn3B,EACA5B,EAAGo5B,GAAiD,EAAGE,KACxDt5B,EAAG+4B,GAAuCp3B,EAAM23B,IAChDr5B,EAAG83B,GAA4Cp2B,EAAMC,EAAI0iB,IAEtDmV,GArGkC,SAAUxB,GAC5C,OAAA,MAAWD,GAAuCC,GAoGlDwB,CAAqCxB,GAAO,CAC3CyB,IAAAA,EAASV,GAAuCp3B,GAChD+3B,EAAWV,GAAuCt3B,GAC/C3B,OAAAA,EACN83B,GACA93B,EAAGirB,GAAwCyO,EAAQC,GACnD15B,EAAG83B,GAA4Cp2B,EAAMC,EAAI0iB,IAEnDrkB,OAAAA,EAAG83B,GAA4Cp2B,EAAMC,EAAI0iB,GAK/D6E,IAAAA,EAAOvE,EAAI7lB,EACRkB,OAAAA,EACN4tB,GACA7tB,EAAGqpB,GAAuCmQ,EAAIrQ,GAC9CvnB,EACA5B,EAAG83B,GAA8Cn2B,EAAM2iB,MAIvDsV,GAAiD,SAAUC,GAEvDC,OADOD,EAAO96B,GAGlBg7B,GAAkE96B,EACrE,SAAU+pB,EAAO6Q,GACTzN,OAAAA,GACNwN,GAA+CC,KAAa,GAAM,EAAI9Q,GAA6CC,OAElHgR,GAAmE/6B,EACtE,SAAU+pB,EAAO6Q,GACTzN,OAAAA,GACNwN,GAA+CC,KAAa,GAAO,EAAI9Q,GAA6CC,GAAU,MAE7HiR,GAA6Dh7B,EAChE,SAAU+pB,EAAO6Q,GACT75B,OAAAA,EACNg6B,GACAhR,EACAhpB,EAAG+5B,GAAiE/Q,EAAO6Q,MAE1EK,GAA0CzO,GArrCW,GAsrCrD0O,GAA4CvO,GA7qCS,GA8qCrDwO,GAAuCp6B,EAAGirB,GAAwCiP,GAAyCC,IAC3HE,GAA8CzO,GAAiDE,GAC/FwO,GAAuCt6B,EAAGirB,GAAwCiP,GAAyCG,IAC3HE,GAA0C9O,GAAiDE,GAC3F6O,GAAuCx6B,EAAGirB,GAAwCsP,GAAyCJ,IAC3HM,GAAuCz6B,EAAGirB,GAAwCsP,GAAyCF,IAC3HK,GAA0CjP,GAAiDE,GAC3FgP,GAAuC36B,EAAGirB,GAAwCyP,GAAyCP,IAC3HS,GAAuC56B,EAAGirB,GAAwCyP,GAAyCL,IAC3HQ,GAAiD57B,EACpD,SAAUg5B,EAAM4B,GACXj4B,IAAAA,EAAKy2B,GAAmCJ,GACxCt2B,EAAOw2B,GAAqCF,GACzC,OAACxyB,EAAU9D,EAAM84B,IAAwCR,GAA2D7L,IAA+CzI,KACxKlgB,EAAU9D,EAAM64B,IAAwCP,GAA2D3N,IAA+C3G,KAChKlgB,EAAU9D,EAAMi5B,KAAyCn1B,EAAU7D,EAAIg5B,IAAyCb,GAAgE3L,IAA+CzI,KAC9NlgB,EAAU9D,EAAMg5B,KAAyCl1B,EAAU7D,EAAI+4B,IAAyCZ,GAAgEzN,IAA+C3G,KAC9NlgB,EAAU9D,EAAM24B,KAAyC70B,EAAU7D,EAAI04B,IAAyCN,GAAiE5L,IAA+CzI,KAC/NlgB,EAAU9D,EAAMy4B,KAAyC30B,EAAU7D,EAAIw4B,IAAyCJ,GAAiE1N,IAA+C3G,IAA0BkU,UAE/PiB,GAA6C96B,EAAGqpB,GAAuC+E,GAA6CO,IACpIoM,GAAwC,SAAUjN,GAC9CtE,OAAAA,GAC2C,EAAjDiP,GAAwC3K,KAEtCkN,GAA6Ch7B,EAAGqpB,GAAuCiD,GAA6CqC,IACpIsM,GAA2B97B,EAC9B,SAAUH,EAAGW,EAAG+F,GACR/F,OAAAA,EACNX,EAAE0G,MAEDw1B,GAAuBrxB,EACvBsxB,GAAiDn7B,EACpDi7B,GACAlS,GACA/oB,EACCi7B,GACAC,GAAqB,GACrB5R,KACE8R,GAA6C,SAAU/S,GAEnDgT,OADIhT,EAAItpB,GAGZu8B,GAA8Cr8B,EACjD,SAAUgtB,EAAQ5D,GACVroB,OAAAA,EACNkvB,GACAjD,EACAmP,GAA2C/S,GAAK/D,SAE/CiX,GAA6Ct8B,EAChD,SAAUu8B,EAASC,GACXvC,OAAAA,GACNlN,GAAyCwP,GAAWxP,GAAyCyP,MAE5FC,GAA2CxC,GAv4CqB,IAw4ChEyC,GAA6C18B,EAChD,SAAU28B,EAAQC,GACV3C,OAAAA,GACNN,GAA8CgD,GAAUhD,GAA8CiD,MAErGC,GAA4C97B,EAAG27B,GAA4CD,GAA0CA,IACrIK,GAA2C1C,GAA8CqC,IACzFM,GAA4Ch8B,EAAG27B,GAA4CI,GAA0CA,IACrIE,GAA6Ch9B,EAChD,SAAUg5B,EAAMiE,GACXt6B,IAAAA,EAAKy2B,GAAmCJ,GACxCt2B,EAAOw2B,GAAqCF,GAC5CnK,EAAQ9tB,EAAGs7B,GAA6C35B,EAAMu6B,GAC9D7T,EAAM6T,EAASn9B,EACZwtB,OAAAA,GACN,CACC/H,gBAAiB/e,EAAUqoB,EAAOsB,IAA8C/L,GAAoBzhB,GAAMymB,EAAI7D,gBAC9GF,MAAOtkB,EAAGu5B,GAAyCtB,EAAM5P,EAAI/D,OAC7DD,aAAcrkB,EAAG66B,GAAgD5C,EAAM5P,EAAIhE,cAC3EoI,SAAWhnB,EAAUqoB,EAAOkN,KAA+Cv1B,EAC1EzF,EAAGu7B,GAA4C35B,EAAID,GACnDm6B,IAA8CzY,GAC9CrjB,EAAG+4B,GAAuCp3B,EAAM+5B,KAA+Cj2B,EAAUqoB,EAAOgN,KAA+Cr1B,EAC/JzF,EAAGu7B,GAA4C35B,EAAID,GACnDq6B,IAA8C3Y,GAC9CrjB,EAAG+4B,GAAuCp3B,EAAMo6B,KAA6CzY,GAC9FoJ,QAASrE,EAAIqE,QAAU,EACvBC,SAAUtJ,GAAoB4U,GAC9B7iB,OAAQiO,GAAoB6Y,GAC5BtP,cAAgBnnB,EACfs1B,GAAsCjN,GACtCa,MAAgDlpB,EAChDzF,EAAGs7B,GAA6C15B,EAAIs6B,GACpDxS,IAA4C,EAAKrB,EAAIuE,cAAgB,EACtEC,WAAYsO,GAA+C9S,EAAIwE,YAC/DtI,gBAAiB9e,EAAUqoB,EAAOuB,IAA8ChM,GAAoBzhB,GAAMymB,EAAI9D,oBAG9G4X,GAA0Cl9B,EAC7C,SAAUg5B,EAAMlH,GACX1I,IAAAA,EAAMroB,EACTi8B,GACAhE,EACAJ,GAAyC9G,IACnClqB,OAAAA,EACNkqB,EACA,CACCP,iBAAkBO,EAAKP,iBAAmB,EAC1CC,gBAAiBpI,EACjBqI,UAAW1wB,EACVm2B,GACA9N,EACApoB,EAAGy3B,GAAsB,EAAG,EAAI3G,EAAKP,iBAAkBO,EAAKL,gBAG7D0L,GAAiCn9B,EACpC,SAAUg5B,EAAMlH,GACXpxB,IAAAA,EAAIoxB,EAAKhyB,EACN6mB,OAAAA,GACN5lB,EAAGm8B,GAAyClE,EAAMt4B,MAEjD08B,GAAkC,SAAUtL,GAC3CpxB,IAAAA,EAAIoxB,EAAKhyB,EACN84B,OAAAA,GAAyCl4B,IAE7C28B,GAx/JKC,SAAgB74B,GAEjBA,OAAAA,EAAI6qB,eAu/JRiO,GAAuBzyB,GACvB0yB,GAA2B,SAAU7O,GACjC5tB,OAAAA,EAAGw8B,GAAsB5O,EAAO,KAEpC8O,GAA8C,SAAUvT,GACpD1jB,OAAAA,EAAU0jB,EAAMwF,IAA6C/nB,EAAW,KAAQnB,EAAU0jB,EAAMuF,IAA+C9nB,EAAW,KAAQnB,EAAU0jB,EAAMqF,IAA+C5nB,EAAW,KAAQnB,EAAU0jB,EAAM0F,IAA6CjoB,EAAW,KAAQnB,EAAU0jB,EAAMyF,IAA8ChoB,EAAW,KAAQnB,EAAU0jB,EAAMsF,IAA6C7nB,EAAW,KAAOA,EAAW,MAEnf+1B,GAAgD38B,EAAGi7B,GAA0ByB,GAA6CD,IAC1HG,GAz2JKC,SAAenP,GAEhB9mB,OAAAA,EACL8mB,EAAO,GAAK,QAAWA,EACrB,IAEFA,GAAQ,MACN7qB,OAAOi6B,aAAapP,IAEtBA,GAAQ,MACR7qB,OAAOi6B,aAAax0B,KAAKgB,MAAMokB,EAAO,MAAS,MAAQA,EAAO,KAAQ,UAq2JrEqP,GAAiD/8B,EAAGi7B,GALL,SAAUrQ,GACrDgS,OAAAA,GACLjS,GAA6CC,GA5zCS,EA4zCqD4C,GAC3G5mB,EAAW,QAEkH61B,IAM5HO,GAAiDh9B,EAAGi7B,GALL,SAAUlQ,GACrD6R,OAAAA,GACL9R,GAA6CC,GAzzCS,EAyzCqDyC,GAC3G5mB,EAAW,QAEkH61B,IAC5HQ,GAA6C,SAAUhR,GACnDhlB,OAAAA,EACN81B,GACC/D,GAAuC/M,IACxC+Q,GACC/D,GAAuChN,MAEtCiR,GAAoDj+B,EACvD,SAAUg5B,EAAMiE,GACXt6B,IAAAA,EAAKy2B,GAAmCJ,GACxCkF,EAAY3E,GAA0CP,GACtDt2B,EAAOw2B,GAAqCF,GACzChxB,OAAAA,EACJxB,EACDuzB,GAAuCr3B,GACvCq3B,GAAuCp3B,IACgB,GADPm7B,GAChD/D,GAAuCr3B,IAAS,IACjDsF,EACCg2B,GAA2Cr7B,GAC3C,WACKu7B,GAAgB,YAAhBA,EAAUl6B,EACN,MAAA,GAEHm6B,IAAAA,EAAaD,EAAUp+B,EACpB,MAAA,IAAMu9B,GACZK,GAA8CS,IANjD,OAUAC,GAA2Bl+B,EAC9B,SAAUQ,EAAGX,EAAG0G,GACR/F,OAAAA,EACNX,EAAE0G,MAED43B,GAAoBr+B,EACvB,SAAUs+B,EAAQ7pB,GAEjB,OAAa,CACR,IAACA,EAAKxU,EACF,OAAA,EAEHwG,IAAAA,EAAIgO,EAAK3U,EACTmI,EAAKwM,EAAKxU,EACVq+B,GAAAA,EAAO73B,GACH,OAAA,EAIP63B,EAFmBA,EAGnB7pB,EAFcxM,KAQfs2B,GAAoBv+B,EACvB,SAAUs+B,EAAQ7pB,GACV,OAAC1T,EACPs9B,GACAt9B,EAAGq9B,GAA0B1I,GAAqB4I,GAClD7pB,KAEC+pB,GAAwDx+B,EAC3D,SAAUy+B,EAAIC,GACNl4B,OAAAA,EAAUi4B,EAAIC,KAASl4B,EAC7BuzB,GACCb,GAAqCuF,IACtC1E,GACCb,GAAqCwF,OAErCC,GAAwD3+B,EAC3D,SAAUy+B,EAAIC,GACNl4B,OAAAA,EAAUi4B,EAAIC,KAASl4B,EAC7BwzB,GACCd,GAAqCuF,IACtCzE,GACCd,GAAqCwF,OAErCE,GAAiD5+B,EACpD,SAAU+pB,EAAOkT,GACTz2B,OAAAA,EAAUujB,EAAOsD,IAA+C8O,GAA2Cc,GAAU3X,gBAAkB6W,GAA2Cc,GAAU1X,kBAEjMsZ,GAA+Cz+B,EAClD,SAAUilB,EAAOkX,EAASC,EAAS5C,GAC9BkF,IAAAA,EAAsB9+B,EACzB,SAAU++B,EAAIC,GACNx4B,OAAAA,EAAUu4B,EAAIvC,IAAah2B,EACjCzF,EAAGkvB,GAA0C8O,EAAI1Z,GACjDoF,KAA2C1pB,EAC3C+9B,EACA/9B,EAAG+4B,GAAuCiF,EAAInF,GAC9CoF,KAEIj+B,OAAAA,EACN+9B,EACA/9B,EAAG+4B,GAAuCyC,EAAS3C,GACnD4C,KAECyC,GAAwBj/B,EAC3B,SAAU8C,EAAGvC,GACLQ,OAAAA,EACNyO,GACA1M,EACA,SAAU6iB,GACFplB,OAAAA,MAGP2+B,GAA+Cn+B,EAAGqpB,GAAuC+E,GAA6CI,IACtI4P,GAA+Cp+B,EAAGqpB,GAAuC+E,GAA6CM,IACtI2P,GAA8Cr+B,EAAGqpB,GAAuC+E,GAA6CQ,IACrI0P,GAA6Ct+B,EAAGqpB,GAAuC+E,GAA6CS,IACpI0P,GAA+Cv+B,EAAGqpB,GAAuCiD,GAA6CkC,IACtIgQ,GAA+Cx+B,EAAGqpB,GAAuCiD,GAA6CoC,IACtI+P,GAA8Cz+B,EAAGqpB,GAAuCiD,GAA6CsC,IACrI8P,GAA6C1+B,EAAGqpB,GAAuCiD,GAA6CuC,IACpI8P,GAA4C3+B,EAAG27B,GAA4CD,GAA0CvC,IACrIyF,GAA6C5+B,EAChD27B,GACAD,GACA17B,EAAGo5B,GAAiD,EAAGD,KACpD0F,GAA6C7+B,EAChD27B,GACA37B,EAAGo5B,GAAiD,EAAGsC,IACvDvC,IACG2F,GAA6C9+B,EAChD27B,GACA37B,EAAGo5B,GAAiD,EAAGsC,IACvDpC,IACGyF,GAA4C/+B,EAAG27B,GAA4CD,GAA0CpC,IACrI0F,GAA6Ch/B,EAChD27B,GACAD,GACA17B,EAAGo5B,GAAiD,EAAGE,KACpD2F,GAA4Cj/B,EAAG27B,GAA4CI,GAA0C5C,IACrI+F,GAA6Cl/B,EAChD27B,GACAI,GACA/7B,EAAGo5B,GAAiD,EAAGD,KACpDgG,GAA6Cn/B,EAChD27B,GACA37B,EAAGo5B,GAAiD,EAAG2C,IACvD5C,IACGiG,GAA6Cp/B,EAChD27B,GACA37B,EAAGo5B,GAAiD,EAAG2C,IACvDzC,IACG+F,GAA4Cr/B,EAAG27B,GAA4CI,GAA0CzC,IACrIgG,GAA6Ct/B,EAChD27B,GACAI,GACA/7B,EAAGo5B,GAAiD,EAAGE,KACpDiG,GAAoD,SAAUzR,GAC1DroB,OAAAA,EAAUqoB,EAAOkN,IAA8CpzB,EACrE,CAACm3B,GAA2CJ,KAA+Cl5B,EAAUqoB,EAAO0Q,IAAgD52B,EAC5J,CAACk3B,GAA4CD,GAA4CG,GAA4CJ,GAA4CQ,GAA4CD,GAA4CG,GAA4CJ,KAAgDz5B,EAAUqoB,EAAOyQ,IAAgD32B,EACta,CAACm3B,GAA2CJ,GAA2CU,GAA2CJ,KAA+Cx5B,EAAUqoB,EAAO4Q,IAA8C92B,EAChP,CAAC8zB,GAA0CK,GAA0CzC,GAA0CH,KAA8C1zB,EAAUqoB,EAAO2Q,IAA+C72B,EAC7O,CAACm3B,GAA2CJ,GAA2CU,GAA2CJ,GAA2CvD,GAA0CK,GAA0CzC,GAA0CH,KAA8C1zB,EAAUqoB,EAAOuB,IAA8CznB,EACxZ,CAACm3B,GAA2CJ,GAA2CU,GAA2CJ,GAA2CvD,GAA0CK,GAA0CzC,GAA0CH,KAA8C1zB,EAAUqoB,EAAOgN,IAA8ClzB,EACxZ,CAACy3B,GAA2CJ,KAA+Cx5B,EAAUqoB,EAAOsQ,IAAgDx2B,EAC5J,CAACk3B,GAA4CD,GAA4CG,GAA4CJ,GAA4CQ,GAA4CD,GAA4CG,GAA4CJ,KAAgDz5B,EAAUqoB,EAAOqQ,IAAgDv2B,EACta,CAACm3B,GAA2CJ,GAA2CU,GAA2CJ,KAA+Cx5B,EAAUqoB,EAAOwQ,IAA8C12B,EAChP,CAAC8zB,GAA0CK,GAA0CzC,GAA0CH,KAA8C1zB,EAAUqoB,EAAOuQ,IAA+Cz2B,EAC7O,CAACm3B,GAA2CJ,GAA2CU,GAA2CJ,GAA2CvD,GAA0CK,GAA0CzC,GAA0CH,KAA8C1zB,EAAUqoB,EAAOsB,IAA8CxnB,EACxZ,CAACm3B,GAA2CJ,GAA2CU,GAA2CJ,GAA2CvD,GAA0CK,GAA0CzC,GAA0CH,KAA6C3xB,GAKtVg4B,GAA4Cx/B,EAAGi7B,GAA0BF,GAHzB,SAAU5R,GACtD1jB,OAAAA,EAAU0jB,EAAMqF,KAAiD/oB,EAAU0jB,EAAM0F,KAA8CppB,EAAU0jB,EAAMyF,MAiBnJ6Q,GAA8C,SAAUxT,GACpDyT,OAfwD9U,EAgB9DoO,GAAuC/M,GAfhC9lB,EACPwkB,GAA6CC,GAl/CU,GAm/CD,GAAOzkB,EAC7DwkB,GAA6CC,GAn/CWe,GAo/CF,IAEQZ,EAU9DkO,GAAuChN,GAThC9lB,EACP2kB,GAA6CC,GAh/CU,GAi/CD,GAAO5kB,EAC7D2kB,GAA6CC,GAj/CWe,GAk/CF,GALF,IAAUf,EAPAH,GAmB5D+U,GAAuD1gC,EAC1D,SAAU2gC,EAAa9G,GAClB+G,IAAAA,EAA6B5gC,EAChC,SAAUgtB,EAAQxqB,GAEjB,OAAa,CACRg+B,GAAAA,GAA4CxT,GACxCxqB,OAAAA,EAEHq+B,IAAAA,EAAe9/B,EAAG+4B,GAAuC9M,EAAQ6M,GACpEvT,EAAYvlB,EAAGklB,GAAoB+G,EAAQxqB,GAC5CwqB,EAAS6T,EACTr+B,EAAM8jB,KAKHrX,OAAAA,GACNlO,EACC6/B,EACA7/B,EAAG+4B,GAAuC6G,EAAa9G,GACvDtxB,MAEAu4B,GAAsD9gC,EACzD,SAAU2gC,EAAa9G,GACf94B,OAAAA,EACNsqB,GACA,SAAUjmB,GACFrE,OAAAA,EAAGu7B,GAA4Cl3B,EAAGu7B,IAE1D5/B,EAAG2/B,GAAsDC,EAAa9G,MAiBrEkH,GAA6C9G,GAAmD+G,KAiChGC,GAAgDrY,GACnD7nB,EACCuqB,GAlCyD,SAAUuD,GAChEqS,IAAAA,EAAoBngC,EACvBuqB,GACA,SAAUjrB,GACFkgC,OAAAA,GAA0C1R,GAAS9tB,EACzDsqB,GACA,SAAU1d,GACF5L,OAAAA,EAAc1B,EAAGsN,KAvB+CksB,EAyBZx5B,EAxBxDW,EACNsmB,GACAtnB,EACC,SAAUmhC,EAAIz/B,GACT0/B,IAAAA,EAASrgC,EAAG+/B,GAAqDK,EAAItH,GACjE3yB,OAAAA,EACP2rB,GAAqBuO,GACrBvO,GAAqBnxB,IAAW,EAAK0/B,EAAS1/B,IAEjD6G,EACAukB,MAcoEnkB,EAClE,CACC5G,EAAc1B,EAAGA,KA3B4C,IAAUw5B,GA8B1EyG,GAAkDzR,IAC/CwS,EAAW1H,GAA8CoH,IACtDv8B,OAAAA,GACNxD,EACCsmB,GACAtnB,EACC,SAAU2lB,EAAKjkB,GACV4/B,IAAAA,EAAK3b,EAAI7lB,EACTO,EAAIslB,EAAI1lB,EACLe,OAAAA,EACNwoB,GACA6X,EAAW1H,GAA8Ct5B,GACzD+jB,GAAoBkd,GACpB5/B,KAEHX,EAAGk+B,GAAwB,EAAIoC,EAAY,EAAGhd,IAC9C6c,KAMDngC,EACCsqB,GACAxB,GACA9oB,EACCwrB,GACA,EACAiN,GAAwCrJ,QACxCoR,GAA+CrhC,EAClD,SAAU2uB,EAAOnsB,EAAMC,GAClB0+B,IAAAA,EAAW1H,GAA8CoH,IACtDhgC,OAAAA,EACN8nB,GACAxE,GACAtjB,EACC+sB,GACG0L,GAAwC3K,IAAW,EAAIwS,EAAY,GAAMtU,GAAyCpqB,GAAOoqB,GAAyCrqB,GAAS2+B,EAC9KJ,OAEAO,GAAsDthC,EACzD,SAAUwC,EAAMC,EAAI0iB,GACfwJ,IAAAA,EAAQ9tB,EAAGkvB,GAA0CvtB,EAAM2iB,GAC3DM,EAAM3kB,EAAGugC,GAA8C1S,EAAOnsB,EAAMC,GACpEgjB,GAAU,YAAVA,EAAI3hB,EACA,OAAA,EAEH41B,IAAAA,EAAQjU,EAAI7lB,EACTygC,OAAAA,GAA0C1R,IAAS5tB,EAAG49B,GAA8CxZ,EAAO3iB,EAAMC,EAAIi3B,KAG3H6H,GAAqDvhC,EACxD,SAAUwhC,EAAM1U,EAAQ3H,GAChBtkB,OAAAA,EACNs9B,GACA,SAAUj5B,GACFoB,OAAAA,EACNkzB,GACC34B,EAAGkvB,GAA0C7qB,EAAGigB,IACjDqc,IAAS1gC,EAAGwgC,GAAqDp8B,EAAG4nB,EAAQ3H,IAE9EyH,MAEC6U,GAAwDzhC,EAC3D,SAAUwhC,EAAM1U,EAAQiQ,GAChBj8B,OAAAA,EACNygC,GACAC,EACA1U,EACAmP,GAA2Cc,GAAU5X,SAEpDuc,GAAgD5hC,EACnD,SAAU0hC,EAAMzE,GACXtX,IAAAA,EAAM5kB,EAAG69B,GAAgD8C,EAAMzE,GAC/DtX,GAAU,YAAVA,EAAI3hB,EACA,OAAA,EAEH69B,IAAAA,EAAclc,EAAI7lB,EACfkB,OAAAA,EACN2gC,GACAzF,GAA+CwF,GAC/CG,EACA5E,KAGA6E,GAAiD,SAAU7E,GACvDd,OAAAA,GAA2Cc,GAAUrP,YAEzDmU,GAAwD/hC,EAC3D,SAAUi9B,EAAUjE,GACZ,OAACj4B,EACP6gC,GACAE,GAA+C7E,GAC/Cl8B,EAAGi8B,GAA4ChE,EAAMiE,MAEpD+E,GAA2ChiC,EAC9C,SAAUgtB,EAAQ3H,GACV7e,OAAAA,EACNzF,EAAGkvB,GAA0CjD,EAAQ3H,GACrDoF,MAECwX,GAA8CjiC,EACjD,SAAUgtB,EAAQ5D,GACVroB,OAAAA,EACNihC,GACAhV,EACAmP,GAA2C/S,GAAK/D,SAE/C6c,GAAuC,SAAUpiC,GAC7C,MAAA,CAACkE,EAAG,OAAQlE,EAAGA,IAEnBqiC,GAA6C,SAAUnV,GACtD/X,IAAAA,EAAK8X,GAAyCC,GA10DiB,GA00DyD,EAKpHjtB,OAJAgB,EACP+tB,GA50DkE,GA80DlE/B,GAAyCC,IArrDc,EA1JE,GAg1DiE/X,EA7qDnE,IA+qDrDmtB,GAAuCpiC,EAC1C,SAAUqiC,EAAOC,GACTJ,OAAAA,GACNC,GAA2CG,GAAQH,GAA2CE,IAAU,KAEvGE,GAAgDriC,EACnD,SAAUmiC,EAAOC,EAAKnE,GACd+D,OAAAA,GACLC,GAA2CG,GAAQH,GAA2CE,IAAU,EAAOpY,GAA4CkU,IAAe,MAE1KqE,GAA8CxiC,EACjD,SAAUgtB,EAAQjD,GACVvjB,OAAAA,EAAUujB,EAAOsD,IAA+C7mB,EACtEqlB,GACCmO,GAAuChN,IACxCH,GAA0DrmB,EAC1DqlB,GACCmO,GAAuChN,IACxCyV,KAECC,GAA+DxiC,EAClE,SAAUq6B,EAAI53B,EAAIs6B,GACb0F,IAAAA,EAAOzG,GAA+C3B,GACtDqI,EAAU7hC,EAAGqpB,GAAuCmQ,EAAI7K,IACxDmT,EAAKr8B,EAAU+zB,EAAIlN,IAA+C1kB,EACrE,CAACy3B,GAA2CJ,KAA8Cr3B,EAC1F,CAACm3B,GAA2CJ,KACtC3+B,OAAAA,EACNuqB,GACA,SAAU5oB,GACF3B,OAAAA,EAAGyhC,GAA6C9/B,EAAMigC,GAAQ5hC,EACpEsqB,GACAtqB,EAAGwhC,GAA+C7/B,EAAMC,GACxDgG,EACC,CAACgnB,GAA4CC,GAA2CL,GAA6CE,MAAiD9mB,EACvL,CACC5H,EAAGqhC,GAAsC1/B,EAAMC,MAGlD5B,EACCgtB,GACA,SAAU3oB,GACFoB,OAAAA,EACNzF,EAAGs7B,GAA6Cj3B,EAAG63B,GACnD2F,IAEF7hC,EACCsqB,GACAyO,GAAsCn3B,GACtCkgC,OAEDC,GAAyC9iC,EAC5C,SAAUqiC,EAAOC,GACTJ,OAAAA,GACLC,GAA2CG,GAAQH,GAA2CE,IAAU,EAAO,SAE/GU,GAA+C,SAAU9F,GACrDd,OAAAA,GAA2Cc,GAAUzP,UAEzDwV,GAA+D9iC,EAClE,SAAUq6B,EAAI53B,EAAIs6B,GACbtX,IAAAA,EAAMod,GAA6C9F,GACnDtX,GAAU,YAAVA,EAAI3hB,EACAuE,OAAAA,EAGH,GAAC/B,EADWmf,EAAI7lB,EACM6C,GAEnB,CACFigC,IAAAA,EAAU7hC,EAAGqpB,GAAuCmQ,EAAI7K,IACxDmT,EAAKr8B,EAAU+zB,EAAIlN,IAA+C1kB,EACrE,CAACy3B,GAA2CJ,KAA8Cr3B,EAC1F,CAACm3B,GAA2CJ,KACtC3+B,OAAAA,EACNsqB,GACA,SAAU3oB,GACF3B,OAAAA,EAAG+hC,GAAwCpgC,EAAMC,IAEzD5B,EACCgtB,GACA,SAAU3oB,GACFoB,OAAAA,EACNzF,EAAGs7B,GAA6Cj3B,EAAG63B,GACnD2F,IAEF7hC,EACCsqB,GACAyO,GAAsCn3B,GACtCkgC,KArBIt6B,OAAAA,IAyBP06B,GAA4D/iC,EAC/D,SAAUq6B,EAAI53B,EAAIs6B,GACb0F,IAAAA,EAAOzG,GAA+C3B,GACtDp2B,EAAOqC,EAAU+zB,EAAIlN,IAA+CyP,GAA2CL,GAC/GmG,EAAU7hC,EAAGqpB,GAAuCmQ,EAAI7K,IACxDhtB,EAAO3B,EAAG+4B,GAAuCn3B,EAAIwB,GACrDqC,GAAAA,EACHzF,EAAGs7B,GAA6C35B,EAAMu6B,GACtD2F,GACO7hC,OAAAA,EAAGyhC,GAA6C9/B,EAAMigC,GAAQ5hC,EACpEsqB,GACAtqB,EAAGwhC,GAA+C7/B,EAAMC,GACxDgG,EACC,CAACgnB,GAA4CC,GAA2CL,GAA6CE,MAAiD9mB,EACvL,CACC5H,EAAGqhC,GAAsC1/B,EAAMC,KAG7C5B,GAAAA,EAAGkhC,GAA6Cv/B,EAAMu6B,GAAW,CAChEiG,IAAAA,EAAQniC,EAAG+4B,GAAuCp3B,EAAMyB,GACpDpD,OAAAA,EAAGyhC,GAA6CU,EAAO3I,IAAO/zB,EACrEzF,EAAGs7B,GAA6C6G,EAAOjG,GACvD2F,GAAYj6B,EACZ,CACC5H,EAAGqhC,GAAsCc,EAAOvgC,KAC5C4F,EAECA,OAAAA,IAIP46B,GAAwDjjC,EAC3D,SAAUq6B,EAAI53B,EAAIs6B,GACVj1B,OAAAA,EACNhH,EAAGgiC,GAA8DzI,EAAI53B,EAAIs6B,GACzEl8B,EAAGkhC,GAA6Ct/B,EAAIs6B,GAAYj8B,EAAGiiC,GAA2D1I,EAAI53B,EAAIs6B,GAAYj8B,EAAG0hC,GAA8DnI,EAAI53B,EAAIs6B,MAE1NmG,GAAwCljC,EAC3C,SAAUmlB,EAAO2H,EAAQ4M,GAejByJ,OAdY,SAAUj+B,GAE5B,OAAa,CACR,IAACoB,EACJzF,EAAGkvB,GAA0C7qB,EAAGigB,GAChDoF,IACOrlB,OAAAA,EAGPA,EADcrE,EAAG+4B,GAAuC10B,EAAGw0B,IAMvDyJ,CACNtiC,EAAG+4B,GAAuC9M,EAAQ4M,MAEjD0J,GAA2CpjC,EAC9C,SAAU+8B,EAAUjQ,EAAQ4M,GACpB54B,OAAAA,EACNoiC,GACAjH,GAA2Cc,GAAU5X,MACrD2H,EACA4M,KAEC2J,GAAyDnjC,EAC5D,SAAUm6B,EAAIiJ,EAAW7gC,EAAIs6B,GACxBwG,IAAAA,EAAW1iC,EAAGqpB,GAAuCmQ,EAAIiJ,GACtDziC,OAAAA,EACNsqB,GACA,SAAU3oB,GACF3B,OAAAA,EAAGqhC,GAAsC1/B,EAAMC,IAEvD5B,EACCgtB,GACA,SAAU3oB,GACFoB,OAAAA,EACNzF,EAAGs7B,GAA6Cj3B,EAAG63B,GACnDwG,IAEF1iC,EACCsqB,GACAkV,GAA0CkD,GAAY1iC,EAAGuiC,GAA0CrG,EAAUt6B,GAAMm3B,GAAsCn3B,GACzJ29B,GAAkDmD,QAEnDC,GAAoDxjC,EACvD,SAAU2uB,EAAO7B,EAAQiQ,GACpB1C,IAAAA,EAAKuH,GAA+C7E,GACpD0F,EAAOzG,GAA+C3B,GACtDoJ,EAAgB5iC,EAAGs7B,GAA6CrP,EAAQiQ,GACpE,OAAEz2B,EAAUm9B,EAAelZ,KAA2CjkB,EAC7EkzB,GAAuCiK,GACvChB,GAAuBn8B,EAAUqoB,EAAOa,IAA6C1uB,EAAGmiC,GAAuD5I,EAAIvN,EAAQiQ,GAAYh8B,EAAGsiC,GAAwDhJ,EAAI1L,EAAO7B,EAAQiQ,GAA3O10B,IAETq7B,GAA8C1jC,EACjD,SAAU2uB,EAAO7B,EAAQiQ,GACjBl8B,OAAAA,EACNgtB,GACAgU,GAAsD9E,GACtDj8B,EAAG0iC,GAAmD7U,EAAO7B,EAAQiQ,MAEpE4G,GAAqD3jC,EACxD,SAAU2uB,EAAOmK,EAAMiE,GAClB6G,IAAAA,EAAQ9iC,EACX4iC,GACA9H,GAAsCjN,GACtCuK,GAAmCJ,GACnCiE,GACOpK,OAAAA,GAAqBiR,IAAU,EAAK,GAAM/iC,EACjDw9B,GACAC,GAAsDxF,GACtD8K,GAAShG,GACT/D,GACCb,GAAqCF,KAAWj4B,EACjDw9B,GACAI,GAAsD3F,GACtD8K,GAAS/F,GACT/D,GACCd,GAAqCF,KAAUgF,GAChD9E,GAAqCF,MAEpC+K,GAx6KKC,SAAc14B,GAEf3D,OAAAA,EAAW2D,EAAK8W,gBAg7KpB6hB,GAA4CljC,EAAGi7B,GATL,SAAUnN,GAChDroB,OAAAA,EACNkzB,GAAuC7K,GACvCxB,IAA+C+B,GAC/CqO,GACC3B,GAAsCjN,KAAWkV,GAClDtG,GACC3B,GAAsCjN,MAE6E2O,IAClH0G,GAAqDlkC,EACxD,SAAUg5B,EAAMiE,GACXpO,IAAAA,EAAQ9tB,EACXs7B,GACAnD,GAAqCF,GACrCiE,GACMj1B,OAAAA,EACNq1B,GACC4G,GAA0CpV,IAC3C7mB,EACChH,EAAG6iC,GAAoDhV,EAAOmK,EAAMiE,GACpEj1B,EACCjH,EACCkhC,GACA7I,GAAmCJ,GACnCiE,GAAY,GAAK,IAClBe,GACC5E,GAAmCJ,SAErCmL,GAA8C,SAAUlH,GACpDl8B,OAAAA,EACN6gC,GACAE,GAA+C7E,GAC/CA,IAEEmH,GAAqDpkC,EACxD,SAAUg5B,EAAMiE,GACRkH,OAAAA,GACNpjC,EAAGi8B,GAA4ChE,EAAMiE,MAEpDoH,GAA2DnkC,EAC9D,SAAUwC,EAAMu6B,EAAUrD,GACrBW,IAAAA,EAAKuH,GAA+C7E,GACpD0F,EAAOzG,GAA+C3B,GACtD+J,EAA+BtkC,EAClC,SAAU2C,EAAIjB,GAEb,OAAa,CACRX,IAAAA,EAAGkhC,GAA6Ct/B,EAAIs6B,GAUnDz2B,OAAAA,EACHkzB,GACC34B,EAAGs7B,GAA6C15B,EAAIs6B,IACrD0F,GACO5hC,EACNklB,GACAllB,EAAGqhC,GAAsC1/B,EAAMC,GAC/CjB,GAEMA,EAlBJ6iC,IAAAA,EAAWxjC,EAAG+4B,GAAuCn3B,EAAIi3B,GAC5D4K,EAAezjC,EACfklB,GACAllB,EAAGqhC,GAAsC1/B,EAAMC,GAC/CjB,GACDiB,EAAK4hC,EACL7iC,EAAS8iC,KAiBNzjC,OAAAA,EACNujC,EACAvjC,EAAG+4B,GAAuCp3B,EAAMk3B,GAChDrxB,KAECk8B,GAA4DzkC,EAC/D,SAAUgtB,EAAQiQ,GACVl8B,OAAAA,EACNuqB,GACAvqB,EAAGsjC,GAA0DrX,EAAQiQ,GACrEqD,GAAkDhB,OAEjDoF,GAA6C1kC,EAChD,SAAUqiC,EAAOC,GACTJ,OAAAA,GACLC,GAA2CG,GAAQH,GAA2CE,IAAU,EAAO,SAE/GsC,GAA4D3kC,EAC/D,SAAU+pB,EAAO6Q,GACTD,OAAAA,GAA+CC,GAAW,GAAM,EAAI9Q,GAA6CC,KAEtH6a,GAAwD5kC,EAC3D,SAAU0hC,EAAMzE,GACRl8B,OAAAA,EACN4jC,GACAjD,EACAvF,GAA2Cc,GAAU7X,gBAEpDyf,GAA6D7kC,EAChE,SAAU+pB,EAAO6Q,GACTD,OAAAA,GAA+CC,GAAW,GAAO,EAAI9Q,GAA6CC,GAAU,IAEjI+a,GAAyD9kC,EAC5D,SAAU0hC,EAAMzE,GACRl8B,OAAAA,EACN8jC,GACAnD,EACAvF,GAA2Cc,GAAU7X,gBAEpD2f,GAAgE3kC,EACnE,SAAUm6B,EAAIoI,EAAM3V,EAAQiQ,GACpBj1B,OAAAA,EACN,WACKjH,GAAAA,EAAG6jC,GAAuDrK,EAAI0C,GAAW,CACxE+H,IAAAA,EAAKjkC,EAAG+4B,GAAuC9M,EAAQkN,IACvD+K,EAAKlkC,EAAG+4B,GAAuCkL,EAAI9K,IAC/Cn5B,OAAAA,EAAGkhC,GAA6C+C,EAAI/H,KAAcl8B,EAAGkhC,GAA6CgD,EAAIhI,IAAgBj8B,EAAG2gC,GAAuDgB,EAAM3V,EAAQiQ,IAAiBj8B,EAAG2gC,GAAuDgB,EAAMqC,EAAI/H,IAAgBj8B,EAAG2gC,GAAuDgB,EAAMsC,EAAIhI,GAGzX10B,EAH0YI,EAC/Y,CACC5H,EAAG2jC,GAA4C1X,EAAQiY,KAGlD18B,OAAAA,EATT,GAYA,WACKxH,GAAAA,EAAG+jC,GAAwDvK,EAAI0C,GAAW,CACzExvB,IAAAA,EAAK1M,EAAG+4B,GAAuC9M,EAAQqN,IACvD6K,EAAKnkC,EAAG+4B,GAAuCrsB,EAAI4sB,IACnD8K,EAAKpkC,EAAG+4B,GAAuCoL,EAAI7K,IAC/Ct5B,OAAAA,EAAGkhC,GAA6Cx0B,EAAIwvB,IAAcl8B,EAAGkhC,GAA6CiD,EAAIjI,IAAcl8B,EAAGkhC,GAA6CkD,EAAIlI,KAAgBj8B,EAAG2gC,GAAuDgB,EAAM3V,EAAQiQ,KAAiBj8B,EAAG2gC,GAAuDgB,EAAMl1B,EAAIwvB,KAAgBj8B,EAAG2gC,GAAuDgB,EAAMuC,EAAIjI,GAAkBt0B,EACld,CACC5H,EAAG2jC,GAA4C1X,EAAQkY,KACnD38B,EAECA,OAAAA,EAVT,MAcC68B,GAA0DplC,EAC7D,SAAUgtB,EAAQiQ,GACb1C,IAAAA,EAAKuH,GAA+C7E,GACpD0F,EAAOzG,GAA+C3B,GACnDvyB,OAAAA,EACNjH,EACCsqB,GACA,SAAU1oB,GACF5B,OAAAA,EAAGqhC,GAAsCpV,EAAQrqB,IAEzD5B,EACCgtB,GACA,SAAU3oB,GACFrE,OAAAA,EAAGkhC,GAA6C78B,EAAG63B,IAAaz2B,EACtEkzB,GACC34B,EAAGs7B,GAA6Cj3B,EAAG63B,IACpD0F,IAEF5hC,EACCsqB,GACAyO,GAAsC9M,GACtCsT,GAAkDlQ,OACrDnvB,EAAG8jC,GAA+DxK,EAAIoI,EAAM3V,EAAQiQ,MAEnFoI,GAA4DrlC,EAC/D,SAAUgtB,EAAQiQ,GACb0F,IAAAA,EAAOzG,GACV4F,GAA+C7E,IACzCl8B,OAAAA,EACNsqB,GACA,SAAU1oB,GACF5B,OAAAA,EAAGqhC,GAAsCpV,EAAQrqB,IAEzD5B,EACCgtB,GACA,SAAU3oB,GACFrE,OAAAA,EAAGkhC,GAA6C78B,EAAG63B,IAAaz2B,EACtEkzB,GACC34B,EAAGs7B,GAA6Cj3B,EAAG63B,IACpD0F,IAEF5hC,EACCsqB,GACAyO,GAAsC9M,GACtCsT,GAAkDf,SAEnD+F,GAA8CtlC,EACjD,SAAUgtB,EAAQ5D,GACVsQ,OAAAA,GACN34B,EAAGs7B,GAA6CrP,EAAQ5D,MAEvDmc,GAAmDnlC,EACtD,SAAUm6B,EAAIoI,EAAM3V,EAAQiQ,GACvB4F,IAAAA,EAAKr8B,EAAU+zB,EAAIlN,IAA+C1kB,EACrE,CAACm3B,GAA2CJ,KAA8C/2B,EAC1F,CAACy3B,GAA2CJ,KACzCwF,EAAQzkC,EACXgtB,GACA,SAAU3oB,GACFoB,OAAAA,EACNzF,EAAGukC,GAA6ClgC,EAAG63B,GACnD0F,IAEF5hC,EACCsqB,GACAyO,GAAsC9M,GACtC6V,IACK9hC,OAAAA,EAAGyhC,GAA6CxV,EAAQ2V,GAAQ5hC,EACtEuqB,GACA,SAAU3oB,GACF5B,OAAAA,EACNsqB,GACAtqB,EAAGwhC,GAA+CvV,EAAQrqB,GAC1DgG,EACC,CAACgnB,GAA4CC,GAA2CL,GAA6CE,OAExI+V,GAASzkC,EACTsqB,GACA+W,GAAqCpV,GACrCwY,KAECC,GAAqDrlC,EACxD,SAAUm6B,EAAIoI,EAAM3V,EAAQiQ,GACvBtX,IAAAA,EAAMod,GAA6C9F,GACnDtX,GAAU,YAAVA,EAAI3hB,EACAuE,OAAAA,EAEH2c,IAAAA,EAAYS,EAAI7lB,EAChB+iC,EAAKr8B,EAAU+zB,EAAIlN,IAA+C1kB,EACrE,CAACm3B,GAA2CJ,KAA8C/2B,EAC1F,CAACy3B,GAA2CJ,KACtCj/B,OAAAA,EACNsqB,GACAyX,GAAuC9V,GACvCjsB,EACCgtB,GACApG,GAAmBzC,GACnBnkB,EACCsqB,GACAyO,GAAsC9M,GACtC6V,OAGF6C,GAAiDtlC,EACpD,SAAUm6B,EAAIoI,EAAM3V,EAAQiQ,GACvB94B,IAAAA,EAAOqC,EAAU+zB,EAAIlN,IAA+CoP,GAA2CK,GAC/G6I,EAAa5kC,EAAGo5B,GAAiD,EAAGh2B,GAChE,OAACpD,EACRkhC,GACAlhC,EAAG+4B,GAAuC9M,EAAQ7oB,GAClD84B,GAA0Bl8B,EAAGyhC,GAA6CxV,EAAQ2V,GAAQ5hC,EAC1FsqB,GACAtqB,EACCwhC,GACAvV,EACAjsB,EAAG+4B,GAAuC9M,EAAQ7oB,IACnDwE,EACC,CAACgnB,GAA4CC,GAA2CL,GAA6CE,MAAkD1uB,EAAGyhC,GAA6CxV,EAAQuN,GAAMvyB,EACtPW,EACC,CACC5H,EACAqhC,GACApV,EACAjsB,EAAG+4B,GAAuC9M,EAAQ7oB,MAElDpD,EACDkhC,GACAlhC,EAAG+4B,GAAuC9M,EAAQ2Y,GAClD1I,GAAyBt0B,EACzB,CACC5H,EACAqhC,GACApV,EACAjsB,EAAG+4B,GAAuC9M,EAAQ2Y,MALtCp9B,GAMPI,EACP,CACC5H,EACAqhC,GACApV,EACAjsB,EAAG+4B,GAAuC9M,EAAQ7oB,MA7BtCoE,IAgCZq9B,GAA0D5lC,EAC7D,SAAUgtB,EAAQiQ,GACb1C,IAAAA,EAAKuH,GAA+C7E,GACpD0F,EAAOzG,GAA+C3B,GACnDvyB,OAAAA,EACN/G,EAAGykC,GAAgDnL,EAAIoI,EAAM3V,EAAQiQ,GACrEj1B,EACC/G,EAAGskC,GAAkDhL,EAAIoI,EAAM3V,EAAQiQ,GACvEh8B,EAAGwkC,GAAoDlL,EAAIoI,EAAM3V,EAAQiQ,OAEzE4I,GAA2D7lC,EAC9D,SAAUgtB,EAAQiQ,GACVl8B,OAAAA,EACNuqB,GACAvqB,EAAGsjC,GAA0DrX,EAAQiQ,GACrEqD,GAAkDd,OAEjDsG,GAA0D9lC,EAC7D,SAAUgtB,EAAQiQ,GACVl8B,OAAAA,EACNuqB,GACAvqB,EAAGsjC,GAA0DrX,EAAQiQ,GACrEqD,GAAkDb,OAEjDsG,GAAsD/lC,EACzD,SAAUgtB,EAAQiQ,GACbpO,IAAAA,EAAQ9tB,EAAGs7B,GAA6CrP,EAAQiQ,GAC5D,OAACz2B,EACRkzB,GAAuC7K,GACvCiT,GAA+C7E,IAA2Bz2B,EAC1Es1B,GAAsCjN,GACtCa,IAA6C3uB,EAAG6kC,GAAyD5Y,EAAQiQ,GAAaz2B,EAC9Hs1B,GAAsCjN,GACtCY,IAA+C1uB,EAAGskC,GAA2DrY,EAAQiQ,GAAaz2B,EAClIs1B,GAAsCjN,GACtCU,IAA+CxuB,EAAG0jC,GAA2DzX,EAAQiQ,GAAaz2B,EAClIs1B,GAAsCjN,GACtCe,IAA6C7uB,EAAG+kC,GAAyD9Y,EAAQiQ,GAAaz2B,EAC9Hs1B,GAAsCjN,GACtCc,IAA8C5uB,EAAG8kC,GAA0D7Y,EAAQiQ,GAAaz2B,EAChIs1B,GAAsCjN,GACtCW,IAA6CzuB,EAAGqkC,GAAyDpY,EAAQiQ,GAAY10B,EAZhEA,IAc5Dy9B,GAAgDhmC,EACnD,SAAUgtB,EAAQiQ,GACVl8B,OAAAA,EACNgtB,GACAgU,GAAsD9E,GACtDl8B,EAAGglC,GAAqD/Y,EAAQiQ,MAE/DgJ,GAA4C,SAAUhJ,GAClDl8B,OAAAA,EACNuqB,GACA,SAAUlmB,GACFrE,OAAAA,EAAGilC,GAA+C5gC,EAAG63B,IAE7DnQ,KAEEoZ,GAAkD,SAAUjJ,GACxDkH,OAAAA,GAA4ClH,KAAepK,GACjEoT,GAA0ChJ,KAExCkJ,GAAyDnmC,EAC5D,SAAUg5B,EAAMiE,GACRiJ,OAAAA,GACNnlC,EAAGi8B,GAA4ChE,EAAMiE,MAwBpDmJ,GAtB4CpmC,EAC/C,SAAUg5B,EAAMiE,GACRj1B,OAAAA,EACN,WACKqxB,GAAAA,GAAiDL,GAC7C,MAAA,MAEHM,GAAAA,GAAkDN,GAC9C,MAAA,QAEHnK,IAAAA,EAAQ9tB,EACXs7B,GACAnD,GAAqCF,GACrCiE,GACMz2B,OAAAA,EACNs1B,GAAsCjN,GACtCa,IAA6C3uB,EAAGk9B,GAAmDjF,EAAMiE,GAAYl8B,EAAGmjC,GAAoDlL,EAAMiE,GAbtL,GAiBAl8B,EAAGolC,GAAwDnN,EAAMiE,GAAY,IAAOl8B,EAAGqjC,GAAoDpL,EAAMiE,GAAY,IAAM,MAGlKoJ,GAA6BrmC,EAChC,SAAUg5B,EAAM9mB,GACXyT,IAAAA,EAEW,WADJzT,EAAM6f,UACR/tB,EACA0D,EACN3G,EAAGo8B,GAAgCnE,EAAM9mB,EAAM4f,MAC/C8C,GACAsB,GACCvtB,EACC,CACC5G,EACA,OACAk0B,GAA4B,YAC5Bl0B,EACA,OACAk0B,GACCl1B,EACCqlC,GACApN,EACAoE,GAAgClrB,EAAM4f,aAGrCpqB,EAAcwK,EAAM4f,KAAM5f,EAAM6f,UAAWsE,IAGhDiQ,EAAU3gB,EAAI7lB,EACdymC,EAAW5gB,EAAI1lB,EACfumC,EAAM7gB,EAAIxlB,EACP4B,OAAAA,EACN6F,EACCsK,EACA,CAAC2f,eAAgBtpB,EAAWupB,KAAMwU,EAASvU,UAAWwU,EAAUpU,eAAgB9N,KACjFmiB,KAECC,GAA4BrN,GAC5BsN,GAAuCV,GACvCW,GAAoC3mC,EACvC,SAAUoF,EAAG8M,GACR4xB,IAAAA,EAAQ/iC,EACXgtB,GACA,SAAUrZ,GACFlO,OAAAA,EACNigC,GAA0B/xB,GAC1BtP,IAEF8M,EAAM2f,gBACHlM,EAAMqI,GAAmB8V,GACzBne,GAAU,SAAVA,EAAI3hB,EAAc,CACjB0Q,IAAAA,EAAIiR,EAAI7lB,EACLiB,OAAAA,EAAGslC,GAA4B3xB,EAAGxC,GAErC00B,IAAAA,EAAW7lC,EACd2lC,GACAthC,EACAg4B,GAAgClrB,EAAM4f,OAChC/vB,OAAAA,EACN6F,EACCsK,EACA,CACC2f,eAAgB+U,EAChBzU,eAAkBU,GAAqB+T,GAAsCxiB,GAAoBhf,GAA7Cif,KAEtDgS,MAGAwQ,GAAmCj5B,GACnCk5B,GAAyB17B,GACzB27B,GAAuB/mC,EAC1B,SAAU8C,EAAGa,GACJb,OAAAA,EAAI,EAAK,GAAK9B,EAAG0vB,GAAuB,EAAG5tB,EAAGa,KAEpDqjC,GAA2D,SAAUlX,GAChE,QAACtpB,EACRspB,EACAnoB,EAAW,OAAanB,EACxBspB,EACAnoB,EAAW,OAAanB,EACxBspB,EACAnoB,EAAW,OAAYnB,EACvBspB,EACAnoB,EAAW,QAYTs/B,GAA0B/mC,EAC7B,SAAUH,EAAGmnC,EAAIj/B,GACZ0d,IAAAA,EAAM5lB,EAAEmnC,GACRvhB,GAAU,SAAVA,EAAI3hB,EAAc,CACjByC,IAAAA,EAAIkf,EAAI7lB,EACLiB,OAAAA,EAAGklB,GAAoBxf,EAAGwB,GAE1BA,OAAAA,IAGNk/B,GAA0BnnC,EAC7B,SAAUD,EAAGkI,GACLjH,OAAAA,EACNmqB,GACA8b,GAAwBlnC,GACxBwI,EACAN,KAECm/B,GAA4BpnC,EAC/B,SAAU8C,EAAGa,GACJb,OAAAA,EAAI,EAAKa,EAAS3C,EAAG0vB,GAAuB,GAAI5tB,EAAGa,KAEzD0jC,GAAwBrnC,EAC3B,SAAU8C,EAAGa,GACJb,OAAAA,EAAI,EAAK,GAAK9B,EACrB0vB,IACC5tB,EACD0tB,GAAuB7sB,GACvBA,KAEC2jC,GAAgDpnC,EACnD,SAAUg+B,EAAWqJ,EAAUvO,GAC1BkF,GAAgB,YAAhBA,EAAUl6B,EAAiB,CAC1BujC,GAAe,YAAfA,EAASvjC,EACL,OAAA,EAEH2nB,IAAAA,EAAO4b,EAASznC,EACb0G,OAAAA,EACNuzB,GACCb,GAAqCF,IACtCrN,GAGEwS,IAAAA,EAAaD,EAAUp+B,EACvBynC,GAAe,YAAfA,EAASvjC,EACLwC,OAAAA,EACN+yB,GAA0CP,GAC1C5U,GAAoB+Z,IAEjBxS,EAAO4b,EAASznC,EACb0G,OAAAA,EACN+yB,GAA0CP,GAC1C5U,GAAoB+Z,KAAgB33B,EACpCuzB,GACCb,GAAqCF,IACtCrN,KAID6b,GAAmDpnC,EACtD,SAAUuC,EAAIu7B,EAAWqJ,EAAUtK,GAC9BwK,IAAAA,EAAa1mC,EAChBgtB,GACAhtB,EAAGumC,GAA+CpJ,EAAWqJ,GAC7DvmC,EAAG4iC,GAA6ClU,GAA2C/sB,EAAIs6B,IACxFpK,OAAqC,IAArCA,GAAqB4U,GAAqBzZ,GAAmByZ,GAAcpjB,KAEjFqjB,GAAkD,SAAU/jC,GACxD5C,OAAAA,EACNsvB,GACAR,GACA7B,GACCG,GAAuBxqB,MAEtBgkC,GAAsD3nC,EACzD,SAAU2D,EAAQs5B,GACbiB,IAAAA,EAAYwJ,GACf3mC,EAAGsmC,GAAuB,EAAG1jC,IAC1Bc,EAAM+B,EAAU03B,EAAW7Z,IAA0B1gB,EAAS5C,EAAGqmC,GAA2B,EAAGzjC,GAC/FhB,EAAKouB,GACRhwB,EAAGsmC,GAAuB,EAAG5iC,IAC1BknB,EAAOqC,GACVjtB,EACComC,GACAvW,GACAzC,GACCptB,EAAGqmC,GAA2B,EAAG3iC,MAChC9B,GAAS,YAATA,EAAGqB,EACCqgB,OAAAA,GAEHie,IAAAA,EAAM3/B,EAAG7C,EACNmB,OAAAA,EAAGumC,GAAkDlF,EAAKpE,EAAWvS,EAAMsR,KAGjF2K,GAA4CtnC,EAC/C,SAAU4pB,EAAMvnB,EAAI4kC,EAAU7M,EAAU1B,GACnCuO,GAAe,YAAfA,EAASvjC,EACR02B,MAAe,YAAfA,EAAS12B,GAILwC,EADHslB,EAAO4O,EAAS56B,EAGnBk6B,GACCd,GAAqCF,KAGpCrN,IAAAA,EAAO4b,EAASznC,EAChB46B,GAAe,YAAfA,EAAS12B,EACLwC,OAAAA,EACNmlB,EACAoO,GACCb,GAAqCF,KAEnClN,IAAAA,EAAO4O,EAAS56B,EACb0G,OAAAA,EACNmlB,EACAoO,GACCb,GAAqCF,MAAWxyB,EACjDslB,EACAkO,GACCZ,GAAmCJ,OAIrC6O,GAAoDznC,EACvD,SAAU8pB,EAAMvnB,EAAImlC,EAAU7K,GACzB8K,IAAAA,EAAM5Z,GAAuB2Z,GAC7BE,EAAQjnC,EAAGomC,GAAyBvW,GAAgDmX,GACpFE,EAAQlnC,EAAGomC,GAAyBrW,GAAgDiX,GACnFlV,GAAAA,GAAqBmV,GAAS,GAAOnV,GAAqBoV,GAAS,EAChE5jB,OAAAA,GAEHyH,IAAAA,EAAOkC,GAAmBia,GAC1Btc,EAAOqC,GAAmBga,GAC1BP,EAAa1mC,EAChBgtB,GACA9sB,EAAG2mC,GAA2C1d,EAAMvnB,EAAIgpB,EAAMG,GAC9D9qB,EAAG4iC,GAA6C1Z,EAAMvnB,EAAIs6B,IACnDpK,OAAqC,IAArCA,GAAqB4U,GAAqBzZ,GAAmByZ,GAAcpjB,KAGlF6jB,GAAuDloC,EAC1D,SAAUyE,EAAKw4B,GACVt6B,IAAAA,EAAKouB,GACRhwB,EAAGsmC,GAAuB,EAAG5iC,IAC1BylB,EAAOwd,GAAgDjjC,GACvDqjC,EAAW/mC,EACdqmC,GACA,EACArmC,EAAG4vB,GAA0B,EAAGlsB,IAC7BylB,GAAW,YAAXA,EAAKlmB,EACDqgB,OAAAA,GAEH8F,IAAAA,EAAQD,EAAKpqB,EACb6C,GAAS,YAATA,EAAGqB,EACCqgB,OAAAA,GAEHie,IAAAA,EAAM3/B,EAAG7C,EACNmB,OAAAA,EAAG4mC,GAAmD1d,EAAOmY,EAAKwF,EAAU7K,KAiBnFkL,GAN8CnoC,EACjD,SAAU2D,EAAQs5B,GACbx4B,IAtL+DqrB,EAsL/DrrB,EAAM1D,EAAG+lC,GAAwBE,GAA0DrjC,GACvFc,MAAQ,QAARA,EApLwD,SAAUw4B,GACpEjP,OAAAA,GACNjtB,EACCgtB,GACAsL,GACA4M,GAA0ChJ,KA+KlBmL,CAA4DnL,GAAsB,UAARx4B,EAVlC,SAAUw4B,GACrEjP,OAAAA,GACNjtB,EACCgtB,GACAuL,GACA2M,GAA0ChJ,KAK2EoL,CAA6DpL,IAvLhHnN,EAwLlE/uB,EAAGgmC,GAAsB,EAAGtiC,GAAQ1D,EAvLvB,MAAP+uB,GAAwB,MAAPA,GAAwB,MAAPA,GAAwB,MAAPA,GAAuB,MAAPA,EAuLlCoY,GAA0EP,GAApBljC,EAAKw4B,MAGjGqL,GAA6BtoC,EAChC,SAAU6Q,EAAKqB,GACdP,EACA,OACSd,OAAAA,EAAI7M,GACN,IAAA,SACAukC,IAAAA,EAAM13B,EAAI/Q,EACVg0B,EAAM/yB,EAAG8lC,GAAkCpR,GAAiC8S,GAC5EzU,GAAU,OAAVA,EAAI9vB,EAAY,CAInB6M,EAHWijB,EAAIh0B,EAIfoS,EAFeA,EAGNP,SAAAA,EAELiiB,IAAAA,EAAME,EAAIh0B,EACPiC,OAAAA,EACN6F,EACCsK,EACA,CACCJ,MAAOsS,GACNpS,GAAmC4hB,MAEtCyC,IAEE,IAAA,aAEGt0B,OAAAA,EACN6F,EACCsK,EACA,CAACggB,QAJKrhB,EAAI/Q,IAKXu2B,IACG,IAAA,UACGt0B,OAAAA,EACNmQ,EACAkgB,GACC0D,GACCntB,EACC,CACC5G,EACA,OACAk0B,GAA4B,YAC5Bl0B,EACA,UACAk0B,GAA4B/jB,EAAMggB,eAEnC,IAAA,gBACAiP,IAAAA,EAAKtwB,EAAI/Q,EACNiB,OAAAA,EAAG4lC,GAAmCxF,EAAIjvB,GAC7C,IAAA,QACAgD,IAAAA,EAAKrE,EAAI/Q,EACNiC,OAAAA,EACN6F,EACCsK,EACA,CACC+f,KAAM7N,GAAoBlP,KAE5BmhB,IACG,IAAA,QACGt0B,OAAAA,EACN6F,EACCsK,EACA,CAAC6f,UAAW4C,KACbuB,GACCvtB,EACC,CACC5G,EACA,OACAk0B,GAA4B,eAE5B,IAAA,SACGl0B,OAAAA,EACN6F,EACCsK,EACA,CAAC6f,UAAW6C,GAA+B5C,SAAS,IACrDqE,IACG,IAAA,UACA3hB,IAAAA,EAAI7D,EAAI/Q,EACRi0B,EAAMhzB,EACTonC,GACAzzB,EACA0oB,GAAgClrB,EAAM4f,OACnCiC,GAAU,SAAVA,EAAI/vB,EAAc,CACjBg1B,IAAAA,EAAOjF,EAAIj0B,EACRiC,OAAAA,EACN6F,EACCsK,EACA,CACC2f,eAAgBtpB,EAChBupB,KAAM/wB,EAAGo8B,GAAgCnE,EAAM9mB,EAAM4f,MACrDC,UAAW4C,GACXxC,eAAgB9N,KAElBgS,IAEMt0B,OAAAA,EAAcmQ,EAAOmkB,IAEzB,IAAA,UACGt0B,OAAAA,EACN8zB,GAA4B3jB,GAC5BgkB,GACCvtB,EACC,CACC5G,EACA,OACAk0B,GAA4B,gBAEjC,QACQl0B,OAAAA,EACN8zB,GAA4B3jB,GAC5BmkB,OAIFmS,GAA8B,CAACxkC,EAAG,WAClCykC,GAAiC,SAAU3oC,GACvC,MAAA,CAACkE,EAAG,aAAclE,EAAGA,IAEzB4oC,GAA8B,CAAC1kC,EAAG,WAIlC2kC,GAA4Bn8B,GAC5Bo8B,GAAyB,SAAU7oC,GAC/B4oC,OAAAA,GAA0B5oC,GAAK,MAEnC8oC,GAj1MKC,SAAgBrkC,GAEjBA,OAAAA,EAAI2d,eAg1MR2mB,GAAgCrP,GAChCsP,GAA+BlN,GAK/BmN,GADiDloC,EAAGi7B,GAHL,SAAUjS,GACrDvjB,OAAAA,EAAUujB,EAAOsD,IAA+C1lB,EAAW,KAAQnB,EAAUujB,EAAOoF,IAA+CxnB,EAAW,KAAOA,EAAW,MAExD61B,IAE5H0L,GAAuCxL,GACvCyL,GAAkC,SAAUta,GACxC,MAAA,oDAAuDoa,GAC7DF,GAA8Bla,IAAWga,GACzCK,GACCF,GAA6Bna,KAAW,QAKvCzW,GAA4B1K,GAC5ByK,GAA0C,SAAUN,GAC/CA,OAAAA,EAAQ7T,GACV,IAAA,SACG,OAAA,EACH,IAAA,qBACG,OAAA,EACH,IAAA,oBACG,OAAA,EACR,QACQ,OAAA,IAGNolC,GAAoBvyB,GAAiB,OAErCwyB,GADkC1yB,GAGlC2yB,GADmCxxB,GAKnCyxB,GAAgC3xB,GAChC4xB,GAA0BxpC,EAC7B,SAAU0b,EAAO/O,GACT5L,OAAAA,EACNwoC,GACA7tB,EAPK,CAAC1X,EAAG,SAAUlE,EAQe6M,MAEjC88B,GAA+B,SAAU54B,GACrC9P,OAAAA,EACNyoC,GACA,QACAjxB,GAA6B1H,KAE3B64B,GAA6BtpC,EAChC,SAAUulB,EAAKkJ,EAAO8a,EAAQ94B,GACzB+4B,IAAAA,EAAMjkB,EAAI7lB,EACV+pC,EAAMlkB,EAAI1lB,EACPc,OAAAA,EACNqoC,GACAzgC,EACC,CACC8gC,GAA6B54B,GAC7B9P,EACAuoC,GACA,kBACEvoC,EAAG+tB,GAAuB,EAAG8a,EAAMC,GAA+B,qBAAvB,sBAC7C9oC,EAAGuoC,GAAgC,WAAY,YAC/CvoC,EACAuoC,GACA,MACAV,GAAuBiB,EAAMF,IAC7B5oC,EACAuoC,GACA,OACAV,GAAuBgB,EAAMD,IAC7B5oC,EACAuoC,GACA,QACAV,GAAuBe,IACvB5oC,EACAuoC,GACA,SACAV,GAAuBe,MAEzBhhC,EACC,CACC,WACIkmB,GAAY,YAAZA,EAAM7qB,EACFqlC,OAAAA,GAAmB,IAEtB5P,IA3E8Brd,EA2E9Bqd,EAAS5K,EAAM/uB,EACZiB,OAAAA,EACNqoC,GACAzgC,EACC,CACC5H,EAAGuoC,GAAgC,WAAY,YAC/CvoC,EACAuoC,GACA,QACAV,GAAuBe,IACvB5oC,EACAuoC,GACA,SACAV,GAAuBe,IACvB5oC,EACAuoC,GACA,mBA3F+BltB,EA6F9B+sB,GAAgC1P,GA5FlC,OAAUrd,EAAI,MA6Fbrb,EACAuoC,GACA,iBACAV,GAAuBe,GAAW,IAAMf,GAAuBe,MAEjEphC,GA5BF,QAiCDuhC,GAAgC/P,GAChCgQ,GAAgC/P,GAIhCgQ,GAHgD,SAAUre,GACtDD,OAAAA,GAA6CC,GAxwFI,GA8wFrDse,GAHgD,SAAUne,GACtDD,OAAAA,GAA6CC,GAnwFI,GAswFrDoe,GAA0ClqC,EAC7C,SAAUitB,EAASkd,GACXpoC,OAAAA,EACNooC,EAAa,EAAIH,GAChBF,GAA8B7c,IAAa+c,GAC3CF,GAA8B7c,IAC/Bkd,EAAYF,GACXF,GAA8B9c,IAAa,EAAIgd,GAC/CF,GAA8B9c,OAE9Bmd,GAAkBvzB,GAAiB,KACnCwzB,GAAuBxzB,GAAiB,UACxCyzB,GAAqCnb,GACrCob,GAAyCrE,GACzCsE,GAAqCxqC,EACxC,SAAUgtB,EAAQ5D,GACb/U,IAAAA,EAAItT,EAAGs7B,GAA6CrP,EAAQ5D,GACxD5iB,OAAAA,EAAU6N,EAAGoW,KAA2CjkB,EAAU6N,EAAGsW,IAA6CtG,GAAyBD,GAAoB/P,KAErKo2B,GAAwC3I,GACxC4I,GAA+B5d,GAC/B6d,GAA4BvqC,EAC/B,SAAU4xB,EAASiL,EAAU17B,EAAM4oC,GAC3BppC,OAAAA,EACNqoC,GACA7gC,EACAI,EACC,CACC5H,EACAqoC,GACAzgC,EACC,CACC5H,EACAuoC,GACA,QACAV,GAAuBrnC,IACvBR,EACAuoC,GACA,SACAV,GAAuBrnC,IACvBR,EAAGuoC,GAAgC,WAAY,YAC/CvoC,EAAGuoC,GAAgC,aAAc,QACjDvoC,EAAGuoC,GAAgC,cAAe,UAEpDvoC,EACCsqB,GACA,SAAUjmB,GACFnE,OAAAA,EACNyoC,GACA3oC,EAAGmpC,GAAyC9kC,EAAG+kC,GAC/CppC,EAAGypC,GAAoCplC,EAAG63B,GAC1C17B,EAAO,EA1LP,CAACyC,EAAG,gBAAiBlE,EA2LasF,KAEpCslC,KACD,WACIH,GAAAA,GAAuCtN,GAAW,CACjD2N,IAAAA,EAAOpkC,EACVikC,GAAsCxN,GACtCqN,KAAuCtY,EAAW,YAAc,WAC1DjxB,OAAAA,EACNqoC,GACA7gC,EACAI,EACC,CACC5H,EACAqpC,GACA7hC,EACAI,EACC,CACC0gC,GAAmB,cAAgBuB,MAErC7pC,EACAspC,GACA1hC,EACC,CACC8gC,GAA6Bf,MAE/B//B,EACC,CACC0gC,GAAmB,iBAIjBA,OAAAA,GAAmB,IA7B3B,QAkCDwB,GAAsBh0B,GAAiB,SACvCi0B,GAA4B79B,GAQ5B89B,GAPwC/qC,EAC3C,SAAUiF,EAAK2wB,GACP70B,OAAAA,EACNgX,GACA9S,EACA6lC,GAA0BlV,KAEWoV,CAAsC,YAQ1EC,GAP0CjrC,EAC7C,SAAUiF,EAAKtB,GACP5C,OAAAA,EACNgX,GACA9S,EACAgxB,GAA4BtyB,KAEMunC,CAAwC,SACzEC,GAAkC,SAAU1kC,GACxC1E,OAAAA,EAAc0E,GAAG,IAKrB2kC,GAAyCprC,EAC5C,SAAU0b,EAAO/O,GACT5L,OAAAA,EACNwoC,GACA7tB,EANK,CAAC1X,EAAG,qBAAsBlE,EAOe6M,MAM7C0+B,GAAmCtqC,EAJTf,EAC7B,SAAUsrC,EAAQ3+B,GACV3L,OAAAA,EAAGmqB,GAAqBkK,GAA4B1oB,EAAS2+B,KAIrE3iC,EACC,CAAC,SAAU,UACZ2sB,IAwHG7Q,GAAmC,SAAU3kB,GACzC,MAAA,CAACkE,EAAG,WAAYlE,EAAGA,IAEvB2jB,GAAwB,SAAUkC,GAErC,OAAa,CAGZA,EAFUA,EAAI7lB,IAMZyrC,GAAwB,SAAUzrC,GAC9B,MAAA,CAACkE,EAAG,UAAWlE,EAAGA,IAEtB0rC,GAAwBr7B,GACxBs7B,GAAqBD,GAAsB/jC,GAC3CikC,GAAwBr7B,GACxBs7B,GAAoB3rC,EACvB,SAAUyB,EAAMmqC,GACR7qC,OAAAA,EACN2qC,GACA,SAAU5rC,GACF0rC,OAAAA,GACN/pC,EAAK3B,KAEP8rC,KAECC,GAAqB3rC,EACxB,SAAUuB,EAAMmqC,EAAOE,GACf/qC,OAAAA,EACN2qC,GACA,SAAU5rC,GACFiB,OAAAA,EACN2qC,GACA,SAAUzrC,GACFurC,OAAAA,GACNzqC,EAAGU,EAAM3B,EAAGG,KAEd6rC,IAEFF,KASCG,GAA8B34B,GAC9B44B,GAAyBhsC,EAC5B,SAAU6S,EAAQ8S,GACbrV,IAAAA,EAAOqV,EAAI7lB,EACR6Q,OAAAA,GACN5P,EACC2qC,GACAK,GAA4Bl5B,GAC5BvC,MAEA27B,GAA0B/rC,EAC7B,SAAU2S,EAAQq5B,EAAU3gC,GACpBxK,OAAAA,EACN4qC,GACA,SAAUhmB,GACFle,OAAAA,IAtB4B0kC,EAyBnCprC,EACCsqB,GACA2gB,GAAuBn5B,GACvBq5B,GA3BGlrC,EACNmqB,GACA0gB,GAAmB5lB,IACnBulB,GAAsBjjC,GACtB4jC,KAL2B,IAAUA,IA8BnCC,GAA0BlsC,EAC7B,SAAUylB,EAAKmO,EAAKC,GACZyX,OAAAA,GAAsB/jC,KAE3B4kC,GAAuBrsC,EAC1B,SAAUwT,EAAQmS,GACbrV,IAAAA,EAAOqV,EAAI7lB,EACRyrC,OAAAA,GACNxqC,EAAG4qC,GAAmBn4B,EAAQlD,MAEjCiC,GAAwB,KA74LhB,CACNtS,EA44LyDwrC,GA34LzDtrC,EA24L6E8rC,GA14L7E5rC,EA04LsG+rC,GAz4LtG7rC,EAy4L+H8rC,GAx4L/HtsC,EAAGkT,IAy4LDq5B,IA9iLsBC,GA8iLtBD,GAAwBj5B,GAAe,QACvCmQ,GAAwBxjB,EAC3B,SAAUwsC,EAAWl8B,GACbg8B,OAAAA,GACNf,GACCxqC,EAAG4qC,GAAmBa,EAAWl8B,OAKjCm8B,GAA0BrgC,GAC1BsgC,GAA0B,SAAU/oC,GAChCA,MAAW,KAAXA,GAEJgpC,GAA2BzgC,GAC3B0gC,GAhtNKC,SAAcpoC,GAMjB,IAJDqoC,IAAAA,EAAQ,EACRC,EAAQtoC,EAAIyG,WAAW,GACvB7E,EAAiB,IAAT0mC,GAAkC,IAATA,EAAwB,EAAI,EAExDjsC,EAAIuF,EAAOvF,EAAI2D,EAAIzC,SAAUlB,EACtC,CACK2tB,IAAAA,EAAOhqB,EAAIyG,WAAWpK,GACtB2tB,GAAAA,EAAO,IAAQ,GAAOA,EAElBpK,OAAAA,GAERyoB,EAAQ,GAAKA,EAAQre,EAAO,GAGtB3tB,OAAAA,GAAKuF,EACTge,GACAD,GAA6B,IAAT2oB,GAAiBD,EAAQA,IA+rN7CE,GAAkBxsC,EACrB,SAAUysC,EAAUC,EAAMC,EAAOC,EAAMC,EAAOC,GACtC,MAAA,CAACA,SAAUA,EAAUJ,KAAMA,EAAME,KAAMA,EAAMD,MAAOA,EAAOF,SAAUA,EAAUI,MAAOA,KAE3FE,GAA8BjtC,EACjC,SAAU2sC,EAAUG,EAAMI,EAAQ9rB,EAAMjd,GACnCioC,GAAAA,GAAwBjoC,IAAQ1D,EAAG4rC,GAA0B,IAAKloC,GAC9D4f,OAAAA,GAEHsB,IAAAA,EAAM5kB,EAAG0rC,GAAyB,IAAKhoC,GACvC,GAACkhB,EAAI1lB,EAGF,CACF,GAAC0lB,EAAI1lB,EAAEA,EAmBHokB,OAAAA,GAlBHvjB,IAAAA,EAAI6kB,EAAI7lB,EACRg0B,EAAM8Y,GACT7rC,EAAG4vB,GAA0B7vB,EAAI,EAAG2D,IACjCqvB,GAAU,YAAVA,EAAI9vB,EACAqgB,OAAAA,GAEH8oB,IAAAA,EAAQrZ,EACL1P,OAAAA,GACNjjB,EACC6rC,GACAC,EACAlsC,EAAGgmC,GAAsBjmC,EAAG2D,GAC5B0oC,EACAC,EACAI,EACA9rB,IAnBG0C,OAAAA,GACNjjB,EAAG6rC,GAAiBC,EAAUxoC,EAAK4f,GAAwB+oB,EAAMI,EAAQ9rB,MA0B1E+rB,GAA+BrtC,EAClC,SAAU6sC,EAAUO,EAAQ9rB,EAAMjd,GAC7BioC,GAAAA,GAAwBjoC,GACpB4f,OAAAA,GAEHsB,IAAAA,EAAM5kB,EAAG0rC,GAAyB,IAAKhoC,GACvC,GAACkhB,EAAI1lB,EAEF,CACFa,IAAAA,EAAI6kB,EAAI7lB,EACLoB,OAAAA,EACNqsC,GACAN,EACAlsC,EAAG4vB,GAA0B7vB,EAAG2D,GAChC+oC,EACA9rB,EACA3gB,EAAGgmC,GAAsBjmC,EAAG2D,IATtBvD,OAAAA,EAAGqsC,GAA6BN,EAAU,IAAKO,EAAQ9rB,EAAMjd,KAapEipC,GAAkCxtC,EACrC,SAAU+sC,EAAUvrB,EAAMjd,GACrBioC,GAAAA,GAAwBjoC,GACpB4f,OAAAA,GAEHsB,IAAAA,EAAM5kB,EAAG0rC,GAAyB,IAAKhoC,GACvC,GAACkhB,EAAI1lB,EAEF,CACFa,IAAAA,EAAI6kB,EAAI7lB,EACLmB,OAAAA,EACNwsC,GACAR,EACA7oB,GACCrjB,EAAG4vB,GAA0B7vB,EAAI,EAAG2D,IACrCid,EACA3gB,EAAGgmC,GAAsBjmC,EAAG2D,IATtBxD,OAAAA,EAAGwsC,GAA8BR,EAAU5oB,GAAwB3C,EAAMjd,KA0ChFkpC,IA7BiC3tC,EACpC,SAAUitC,EAAUxoC,GACfioC,GAAAA,GAAwBjoC,GACpB4f,OAAAA,GAEHsB,IAAAA,EAAM5kB,EAAG0rC,GAAyB,IAAKhoC,GACvC,GAACkhB,EAAI1lB,EAEF,CACFa,IAAAA,EAAI6kB,EAAI7lB,EACLkB,OAAAA,EACN0sC,GACAT,EACA7oB,GACCrjB,EAAG4vB,GAA0B7vB,EAAI,EAAG2D,IACrC1D,EAAGgmC,GAAsBjmC,EAAG2D,IARtBzD,OAAAA,EAAG0sC,GAAiCT,EAAU5oB,GAAwB5f,KAqB/C4d,GAEjC,CACC3Q,KAlmF6B,SAAUk8B,GACjC7rC,OAAAA,EACN6vB,GACAQ,GACCmC,GAAyB,OA+lF1B3iB,cAAe,SAAUM,GACjBuiB,OAAAA,GAA0B1P,KAElCpT,OAAQ22B,GACR/lB,KApU6B,SAAUrQ,GACjCnR,OAAAA,EACNqoC,GACA7gC,EACAI,EACC,CACC5H,EACAqoC,GACA7gC,EACAI,EACC,CACC0gC,GAAmB,SACnBtoC,EACA8pC,GACAliC,EACC,CACCoiC,IAAkC,GAClCE,GACAlqC,EAAG8nB,GAA4B,GAAI3W,EAAM+f,SAE3C1pB,MAEF8gC,GAAmB,YACnB,WACI1jB,IAAAA,EAAMzT,EAAMJ,MACZ6T,GAAU,YAAVA,EAAI3hB,EACAqlC,OAAAA,GAAmB,IAEtB9oC,IAAAA,EAAIolB,EAAI7lB,EACLiB,OAAAA,EACNqoC,GACA7gC,EACAI,EACC,CACC5H,EACAqpC,GACA7hC,EACAI,EACC,CACC0gC,GAAmB9oC,SAhBzB,GAqBAQ,EACA8pC,GACAliC,EACC,CACCsiC,GAA+B/4B,EAAMggB,UAzDE1e,EA0DVi1B,GAzD3B1nC,EACNqqC,GACA,QACArqC,EACCyX,GACA2yB,GACApqC,EAAGyX,GAA0BhF,EAAQ63B,SAqDpC9iC,GACAxH,EACAspC,GACA1hC,EACC,CACC8gC,GAA6BjB,MAE/B7/B,EACC,CACC0gC,GAAmB,cAErB,WAEQvV,OADE5hB,EAAM6f,UACJ/tB,GACN,IAAA,OACGjD,OAAAA,EACNqoC,GACA7gC,EACAI,EACC,CACC0gC,GAAmB,+BAElB,IAAA,SACGtoC,OAAAA,EACNqoC,GACA7gC,EACAI,EACC,CACC1H,EACA0pC,GACAz4B,EAAM8f,QACNoL,GAAgClrB,EAAM4f,MACtC,IACA5f,EAAM8f,YAEV,QACQjxB,OAAAA,EACNqoC,GACA7gC,EACAI,EACC,CACC1H,EACA0pC,GACAz4B,EAAM8f,QACNoL,GAAgClrB,EAAM4f,MACtC,IACA5f,EAAM8f,SACNqX,GAAmB,4CApCxB,MAvE+B,IAAU71B,MAn2KnB+4B,GAkrLT,CAAQ,KAAA,CAAQoB,KAAAA,GAChCp1B,GAA6B9Q,GADGkmC,CACa,KAjrL7CluC,EAAK,IAMGouC,SAAAA,EAA4B5nC,EAAY+vB,EAAKuW,GAEhD,IAAA,IAAIvnC,KAAQunC,EAEfvnC,KAAQgxB,EACG,QAARhxB,EACAM,EAAa,EAAGW,GAChB4nC,EAA4B5nC,EAAa,IAAMjB,EAAMgxB,EAAIhxB,GAAOunC,EAAQvnC,IACxEgxB,EAAIhxB,GAAQunC,EAAQvnC,GAbtB6oC,CAA4B,MAAOpuC,EAAK,IAAS8sC,IACjD9sC,EAAK,IAAU8sC,GA/xElB,CA88PqD","file":"elm.c24118d3.map","sourceRoot":"..","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\nconsole.warn('Compiled in DEV mode. Follow the advice at https://elm-lang.org/0.19.0/optimize for better performance and smaller assets.');\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash_UNUSED(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.start.line === region.end.line)\n\t{\n\t\treturn 'on line ' + region.start.line;\n\t}\n\treturn 'on lines ' + region.start.line + ' through ' + region.end.line;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**_UNUSED/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**_UNUSED/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0_UNUSED = 0;\nvar _Utils_Tuple0 = { $: '#0' };\n\nfunction _Utils_Tuple2_UNUSED(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr_UNUSED(c) { return c; }\nfunction _Utils_chr(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil_UNUSED = { $: 0 };\nvar _List_Nil = { $: '[]' };\n\nfunction _List_Cons_UNUSED(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap(value) { return value.a; }\n\nfunction _Json_wrap_UNUSED(value) { return value; }\nfunction _Json_unwrap_UNUSED(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**_UNUSED/\n\tvar node = args['node'];\n\t//*/\n\t/**/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tmessage: func(record.message),\n\t\tstopPropagation: record.stopPropagation,\n\t\tpreventDefault: record.preventDefault\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.message;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.stopPropagation;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.preventDefault) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.view;\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.setup && impl.setup(sendToApp)\n\t\t\tvar view = impl.view;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.body);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.title) && (_VirtualDom_doc.title = title = doc.title);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.onUrlChange;\n\tvar onUrlRequest = impl.onUrlRequest;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tsetup: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.protocol === next.protocol\n\t\t\t\t\t\t\t&& curr.host === next.host\n\t\t\t\t\t\t\t&& curr.port_.a === next.port_.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tinit: function(flags)\n\t\t{\n\t\t\treturn A3(impl.init, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tview: impl.view,\n\t\tupdate: impl.update,\n\t\tsubscriptions: impl.subscriptions\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { hidden: 'hidden', change: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { hidden: 'mozHidden', change: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { hidden: 'msHidden', change: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { hidden: 'webkitHidden', change: 'webkitvisibilitychange' }\n\t\t: { hidden: 'hidden', change: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\tscene: _Browser_getScene(),\n\t\tviewport: {\n\t\t\tx: _Browser_window.pageXOffset,\n\t\t\ty: _Browser_window.pageYOffset,\n\t\t\twidth: _Browser_doc.documentElement.clientWidth,\n\t\t\theight: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\twidth: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\theight: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\tscene: {\n\t\t\t\twidth: node.scrollWidth,\n\t\t\t\theight: node.scrollHeight\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t\tx: node.scrollLeft,\n\t\t\t\ty: node.scrollTop,\n\t\t\t\twidth: node.clientWidth,\n\t\t\t\theight: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\tscene: _Browser_getScene(),\n\t\t\tviewport: {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\twidth: _Browser_doc.documentElement.clientWidth,\n\t\t\t\theight: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\telement: {\n\t\t\t\tx: x + rect.left,\n\t\t\t\ty: y + rect.top,\n\t\t\t\twidth: rect.width,\n\t\t\t\theight: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$Main$JsPort = function (a) {\n\treturn {$: 'JsPort', a: a};\n};\nvar author$project$Main$Init = {$: 'Init'};\nvar elm$core$Basics$False = {$: 'False'};\nvar elm$core$Maybe$Nothing = {$: 'Nothing'};\nvar elm$core$Basics$EQ = {$: 'EQ'};\nvar elm$core$Basics$LT = {$: 'LT'};\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (node.$ === 'SubTree') {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$GT = {$: 'GT'};\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0.a;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar romstad$elm_chess$Game$Game = function (a) {\n\treturn {$: 'Game', a: a};\n};\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'Array_elm_builtin', a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 'Leaf', a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 'SubTree', a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.nodeListSize) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.tail),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.tail);\n\t\t} else {\n\t\t\tvar treeLen = builder.nodeListSize * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.nodeList) : builder.nodeList;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.tail) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.tail);\n\t\t}\n\t});\nvar elm$core$Basics$True = {$: 'True'};\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _n0.a;\n\t\t\tvar remainingItems = _n0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\telm$core$Elm$JsArray$length(jsArray),\n\t\t\t\telm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{nodeList: nodeList, nodeListSize: nodeListSize, tail: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\telm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn elm$core$Array$empty;\n\t} else {\n\t\treturn A3(elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar romstad$elm_chess$Internal$Game$UnknownResult = {$: 'UnknownResult'};\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (maybe.$ === 'Just') {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$core$Array$bitMask = 4294967295 >>> (32 - elm$core$Array$shiftStep);\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;\nvar elm$core$Array$setHelp = F4(\n\tfunction (shift, index, value, tree) {\n\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\tif (_n0.$ === 'SubTree') {\n\t\t\tvar subTree = _n0.a;\n\t\t\tvar newSub = A4(elm$core$Array$setHelp, shift - elm$core$Array$shiftStep, index, value, subTree);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\ttree);\n\t\t} else {\n\t\t\tvar values = _n0.a;\n\t\t\tvar newLeaf = A3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, values);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$Leaf(newLeaf),\n\t\t\t\ttree);\n\t\t}\n\t});\nvar elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Array$set = F3(\n\tfunction (index, value, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\ttree,\n\t\t\tA3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, tail)) : A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA4(elm$core$Array$setHelp, startShift, index, value, tree),\n\t\t\ttail));\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$List$repeatHelp = F3(\n\tfunction (result, n, value) {\n\t\trepeatHelp:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tvar $temp$result = A2(elm$core$List$cons, value, result),\n\t\t\t\t\t$temp$n = n - 1,\n\t\t\t\t\t$temp$value = value;\n\t\t\t\tresult = $temp$result;\n\t\t\t\tn = $temp$n;\n\t\t\t\tvalue = $temp$value;\n\t\t\t\tcontinue repeatHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$repeat = F2(\n\tfunction (n, value) {\n\t\treturn A3(elm$core$List$repeatHelp, _List_Nil, n, value);\n\t});\nvar romstad$elm_chess$Internal$BoardDimensions$fileCount = 8;\nvar romstad$elm_chess$Internal$BoardDimensions$extendedFileCount = (2 * romstad$elm_chess$Internal$BoardDimensions$fileCount) - 1;\nvar romstad$elm_chess$Internal$BoardDimensions$rankCount = 8;\nvar romstad$elm_chess$Internal$BoardDimensions$extendedBoardSize = (((romstad$elm_chess$Internal$BoardDimensions$rankCount + 3) * romstad$elm_chess$Internal$BoardDimensions$extendedFileCount) + romstad$elm_chess$Internal$BoardDimensions$fileCount) + 2;\nvar elm$core$Bitwise$or = _Bitwise_or;\nvar romstad$elm_chess$Internal$Piece$Piece = function (a) {\n\treturn {$: 'Piece', a: a};\n};\nvar romstad$elm_chess$Internal$PieceColor$unwrap = function (color) {\n\tvar color_ = color.a;\n\treturn color_;\n};\nvar romstad$elm_chess$Internal$PieceType$unwrap = function (kind) {\n\tvar kind_ = kind.a;\n\treturn kind_;\n};\nvar romstad$elm_chess$Internal$Piece$make = F2(\n\tfunction (color_, kind_) {\n\t\treturn romstad$elm_chess$Internal$Piece$Piece(\n\t\t\t(romstad$elm_chess$Internal$PieceColor$unwrap(color_) << 3) | romstad$elm_chess$Internal$PieceType$unwrap(kind_));\n\t});\nvar romstad$elm_chess$Internal$PieceColor$PieceColor = function (a) {\n\treturn {$: 'PieceColor', a: a};\n};\nvar romstad$elm_chess$Internal$PieceColor$empty = romstad$elm_chess$Internal$PieceColor$PieceColor(2);\nvar romstad$elm_chess$Internal$PieceType$PieceType = function (a) {\n\treturn {$: 'PieceType', a: a};\n};\nvar romstad$elm_chess$Internal$PieceType$none = romstad$elm_chess$Internal$PieceType$PieceType(0);\nvar romstad$elm_chess$Internal$Piece$empty = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$empty, romstad$elm_chess$Internal$PieceType$none);\nvar romstad$elm_chess$Internal$PieceColor$outside = romstad$elm_chess$Internal$PieceColor$PieceColor(3);\nvar romstad$elm_chess$Internal$Piece$outside = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$outside, romstad$elm_chess$Internal$PieceType$none);\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn elm$core$List$concat(\n\t\t\tA2(elm$core$List$map, f, list));\n\t});\nvar romstad$elm_chess$Internal$Square$Square = function (a) {\n\treturn {$: 'Square', a: a};\n};\nvar romstad$elm_chess$Internal$SquareFile$unwrap = function (file) {\n\tvar file_ = file.a;\n\treturn file_;\n};\nvar romstad$elm_chess$Internal$SquareRank$unwrap = function (rank) {\n\tvar rank_ = rank.a;\n\treturn rank_;\n};\nvar romstad$elm_chess$Internal$Square$make = F2(\n\tfunction (file_, rank_) {\n\t\treturn romstad$elm_chess$Internal$Square$Square(\n\t\t\tromstad$elm_chess$Internal$SquareFile$unwrap(file_) + (romstad$elm_chess$Internal$SquareRank$unwrap(rank_) * romstad$elm_chess$Internal$BoardDimensions$extendedFileCount));\n\t});\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar romstad$elm_chess$Internal$BoardDimensions$fileMin = 1;\nvar romstad$elm_chess$Internal$BoardDimensions$fileMax = (romstad$elm_chess$Internal$BoardDimensions$fileMin + romstad$elm_chess$Internal$BoardDimensions$fileCount) - 1;\nvar romstad$elm_chess$Internal$SquareFile$SquareFile = function (a) {\n\treturn {$: 'SquareFile', a: a};\n};\nvar romstad$elm_chess$Internal$SquareFile$all = A2(\n\telm$core$List$map,\n\tromstad$elm_chess$Internal$SquareFile$SquareFile,\n\tA2(elm$core$List$range, romstad$elm_chess$Internal$BoardDimensions$fileMin, romstad$elm_chess$Internal$BoardDimensions$fileMax));\nvar romstad$elm_chess$Internal$BoardDimensions$rankMin = 2;\nvar romstad$elm_chess$Internal$BoardDimensions$rankMax = (romstad$elm_chess$Internal$BoardDimensions$rankMin + romstad$elm_chess$Internal$BoardDimensions$rankCount) - 1;\nvar romstad$elm_chess$Internal$SquareRank$SquareRank = function (a) {\n\treturn {$: 'SquareRank', a: a};\n};\nvar romstad$elm_chess$Internal$SquareRank$all = A2(\n\telm$core$List$map,\n\tromstad$elm_chess$Internal$SquareRank$SquareRank,\n\tA2(elm$core$List$range, romstad$elm_chess$Internal$BoardDimensions$rankMin, romstad$elm_chess$Internal$BoardDimensions$rankMax));\nvar romstad$elm_chess$Internal$Square$all = A2(\n\telm$core$List$concatMap,\n\tfunction (f) {\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tromstad$elm_chess$Internal$Square$make(f),\n\t\t\tromstad$elm_chess$Internal$SquareRank$all);\n\t},\n\tromstad$elm_chess$Internal$SquareFile$all);\nvar romstad$elm_chess$Internal$Square$unwrap = function (square) {\n\tvar square_ = square.a;\n\treturn square_;\n};\nvar romstad$elm_chess$Internal$Board$empty = A3(\n\telm$core$List$foldl,\n\tF2(\n\t\tfunction (s, b) {\n\t\t\treturn A3(\n\t\t\t\telm$core$Array$set,\n\t\t\t\tromstad$elm_chess$Internal$Square$unwrap(s),\n\t\t\t\tromstad$elm_chess$Internal$Piece$empty,\n\t\t\t\tb);\n\t\t}),\n\telm$core$Array$fromList(\n\t\tA2(elm$core$List$repeat, romstad$elm_chess$Internal$BoardDimensions$extendedBoardSize, romstad$elm_chess$Internal$Piece$outside)),\n\tromstad$elm_chess$Internal$Square$all);\nvar romstad$elm_chess$Internal$CastleRights$CastleRights = function (a) {\n\treturn {$: 'CastleRights', a: a};\n};\nvar romstad$elm_chess$Internal$CastleRights$empty = romstad$elm_chess$Internal$CastleRights$CastleRights(0);\nvar romstad$elm_chess$Internal$PieceColor$white = romstad$elm_chess$Internal$PieceColor$PieceColor(0);\nvar romstad$elm_chess$Internal$Position$Position = function (a) {\n\treturn {$: 'Position', a: a};\n};\nvar romstad$elm_chess$Internal$Position$empty = romstad$elm_chess$Internal$Position$Position(\n\t{blackKingSquare: elm$core$Maybe$Nothing, board: romstad$elm_chess$Internal$Board$empty, castleRights: romstad$elm_chess$Internal$CastleRights$empty, epSquare: elm$core$Maybe$Nothing, gamePly: 0, lastMove: elm$core$Maybe$Nothing, parent: elm$core$Maybe$Nothing, rule50Counter: 0, sideToMove: romstad$elm_chess$Internal$PieceColor$white, whiteKingSquare: elm$core$Maybe$Nothing});\nvar elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (_n0.$ === 'SubTree') {\n\t\t\t\tvar subTree = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 'Just', a: a};\n};\nvar elm$core$Array$get = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? elm$core$Maybe$Just(\n\t\t\tA2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, tail)) : elm$core$Maybe$Just(\n\t\t\tA3(elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$core$String$foldr = _String_foldr;\nvar elm$core$String$toList = function (string) {\n\treturn A3(elm$core$String$foldr, elm$core$List$cons, _List_Nil, string);\n};\nvar romstad$elm_chess$Internal$Board$ReadFenState = F3(\n\tfunction (board, fileIndex, rankIndex) {\n\t\treturn {board: board, fileIndex: fileIndex, rankIndex: rankIndex};\n\t});\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar romstad$elm_chess$Internal$Board$putPiece = F2(\n\tfunction (piece, square) {\n\t\treturn A2(\n\t\t\telm$core$Array$set,\n\t\t\tromstad$elm_chess$Internal$Square$unwrap(square),\n\t\t\tpiece);\n\t});\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$modBy = _Basics_modBy;\nvar romstad$elm_chess$Internal$Square$expand = function (i) {\n\tvar r = (i / romstad$elm_chess$Internal$BoardDimensions$fileCount) | 0;\n\tvar f = A2(elm$core$Basics$modBy, romstad$elm_chess$Internal$BoardDimensions$fileCount, i);\n\treturn romstad$elm_chess$Internal$Square$Square((f + romstad$elm_chess$Internal$BoardDimensions$fileMin) + ((r + romstad$elm_chess$Internal$BoardDimensions$rankMin) * romstad$elm_chess$Internal$BoardDimensions$extendedFileCount));\n};\nvar romstad$elm_chess$Internal$Board$readFenPiece = F2(\n\tfunction (piece, state) {\n\t\treturn A3(\n\t\t\tromstad$elm_chess$Internal$Board$putPiece,\n\t\t\tpiece,\n\t\t\tromstad$elm_chess$Internal$Square$expand(state.fileIndex + (8 * state.rankIndex)),\n\t\t\tstate.board);\n\t});\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (maybe.$ === 'Just') {\n\t\t\tvar value = maybe.a;\n\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$PieceColor$black = romstad$elm_chess$Internal$PieceColor$PieceColor(1);\nvar elm$core$Char$toUpper = _Char_toUpper;\nvar romstad$elm_chess$Internal$PieceType$bishop = romstad$elm_chess$Internal$PieceType$PieceType(3);\nvar romstad$elm_chess$Internal$PieceType$king = romstad$elm_chess$Internal$PieceType$PieceType(6);\nvar romstad$elm_chess$Internal$PieceType$knight = romstad$elm_chess$Internal$PieceType$PieceType(2);\nvar romstad$elm_chess$Internal$PieceType$pawn = romstad$elm_chess$Internal$PieceType$PieceType(1);\nvar romstad$elm_chess$Internal$PieceType$queen = romstad$elm_chess$Internal$PieceType$PieceType(5);\nvar romstad$elm_chess$Internal$PieceType$rook = romstad$elm_chess$Internal$PieceType$PieceType(4);\nvar romstad$elm_chess$Internal$PieceType$fromChar = function (_char) {\n\tvar ch = elm$core$Char$toUpper(_char);\n\treturn _Utils_eq(\n\t\tch,\n\t\t_Utils_chr('P')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$pawn) : (_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('N')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$knight) : (_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('B')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$bishop) : (_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('R')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$rook) : (_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('Q')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$queen) : (_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('K')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceType$king) : elm$core$Maybe$Nothing)))));\n};\nvar romstad$elm_chess$Internal$Piece$fromChar = function (_char) {\n\treturn A2(\n\t\telm$core$Maybe$map,\n\t\tromstad$elm_chess$Internal$Piece$make(\n\t\t\telm$core$Char$isUpper(_char) ? romstad$elm_chess$Internal$PieceColor$white : romstad$elm_chess$Internal$PieceColor$black),\n\t\tromstad$elm_chess$Internal$PieceType$fromChar(_char));\n};\nvar romstad$elm_chess$Internal$Board$processFenChar = F2(\n\tfunction (_char, state) {\n\t\tvar _n0 = romstad$elm_chess$Internal$Piece$fromChar(_char);\n\t\tif (_n0.$ === 'Just') {\n\t\t\tvar piece = _n0.a;\n\t\t\treturn _Utils_update(\n\t\t\t\tstate,\n\t\t\t\t{\n\t\t\t\t\tboard: A2(romstad$elm_chess$Internal$Board$readFenPiece, piece, state),\n\t\t\t\t\tfileIndex: state.fileIndex + 1\n\t\t\t\t});\n\t\t} else {\n\t\t\treturn elm$core$Char$isDigit(_char) ? _Utils_update(\n\t\t\t\tstate,\n\t\t\t\t{\n\t\t\t\t\tfileIndex: (state.fileIndex + elm$core$Char$toCode(_char)) - elm$core$Char$toCode(\n\t\t\t\t\t\t_Utils_chr('0'))\n\t\t\t\t}) : (_Utils_eq(\n\t\t\t\t_char,\n\t\t\t\t_Utils_chr('/')) ? _Utils_update(\n\t\t\t\tstate,\n\t\t\t\t{fileIndex: 0, rankIndex: state.rankIndex - 1}) : state);\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Board$fromFen = function (fen) {\n\treturn function ($) {\n\t\treturn $.board;\n\t}(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\tromstad$elm_chess$Internal$Board$processFenChar,\n\t\t\tA3(romstad$elm_chess$Internal$Board$ReadFenState, romstad$elm_chess$Internal$Board$empty, 0, romstad$elm_chess$Internal$BoardDimensions$rankCount - 1),\n\t\t\telm$core$String$toList(fen)));\n};\nvar romstad$elm_chess$Internal$Board$pieceOn = F2(\n\tfunction (square, board) {\n\t\treturn A2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\tromstad$elm_chess$Internal$Piece$outside,\n\t\t\tA2(\n\t\t\t\telm$core$Array$get,\n\t\t\t\tromstad$elm_chess$Internal$Square$unwrap(square),\n\t\t\t\tboard));\n\t});\nvar romstad$elm_chess$Internal$CastleRights$fromChar = function (_char) {\n\treturn _Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('K')) ? 1 : (_Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('Q')) ? 2 : (_Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('k')) ? 4 : (_Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('q')) ? 8 : 0)));\n};\nvar romstad$elm_chess$Internal$CastleRights$fromString = function (string) {\n\treturn romstad$elm_chess$Internal$CastleRights$CastleRights(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\telm$core$Bitwise$or,\n\t\t\t0,\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tromstad$elm_chess$Internal$CastleRights$fromChar,\n\t\t\t\telm$core$String$toList(string))));\n};\nvar romstad$elm_chess$Internal$Piece$blackKing = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$king);\nvar romstad$elm_chess$Internal$Piece$whiteKing = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$king);\nvar elm$core$Maybe$andThen = F2(\n\tfunction (callback, maybeValue) {\n\t\tif (maybeValue.$ === 'Just') {\n\t\t\tvar value = maybeValue.a;\n\t\t\treturn callback(value);\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$PieceColor$fromChar = function (_char) {\n\treturn _Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('w')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceColor$white) : (_Utils_eq(\n\t\t_char,\n\t\t_Utils_chr('b')) ? elm$core$Maybe$Just(romstad$elm_chess$Internal$PieceColor$black) : elm$core$Maybe$Nothing);\n};\nvar romstad$elm_chess$Internal$PieceColor$fromString = function (string) {\n\treturn A2(\n\t\telm$core$Maybe$andThen,\n\t\tromstad$elm_chess$Internal$PieceColor$fromChar,\n\t\telm$core$List$head(\n\t\t\telm$core$String$toList(string)));\n};\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar romstad$elm_chess$Internal$SquareFile$fromChar = function (_char) {\n\tvar f_ = elm$core$Char$toCode(_char) - elm$core$Char$toCode(\n\t\t_Utils_chr('a'));\n\treturn ((f_ >= 0) && (_Utils_cmp(f_, romstad$elm_chess$Internal$BoardDimensions$fileCount) < 0)) ? elm$core$Maybe$Just(\n\t\tromstad$elm_chess$Internal$SquareFile$SquareFile(f_ + romstad$elm_chess$Internal$BoardDimensions$fileMin)) : elm$core$Maybe$Nothing;\n};\nvar romstad$elm_chess$Internal$SquareFile$fromString = function (string) {\n\treturn A2(\n\t\telm$core$Maybe$andThen,\n\t\tromstad$elm_chess$Internal$SquareFile$fromChar,\n\t\telm$core$List$head(\n\t\t\telm$core$String$toList(string)));\n};\nvar romstad$elm_chess$Internal$SquareRank$fromChar = function (_char) {\n\tvar r = elm$core$Char$toCode(_char) - elm$core$Char$toCode(\n\t\t_Utils_chr('1'));\n\treturn ((r >= 0) && (_Utils_cmp(r, romstad$elm_chess$Internal$BoardDimensions$rankCount) < 0)) ? elm$core$Maybe$Just(\n\t\tromstad$elm_chess$Internal$SquareRank$SquareRank(r + romstad$elm_chess$Internal$BoardDimensions$rankMin)) : elm$core$Maybe$Nothing;\n};\nvar romstad$elm_chess$Internal$SquareRank$fromString = function (string) {\n\treturn A2(\n\t\telm$core$Maybe$andThen,\n\t\tromstad$elm_chess$Internal$SquareRank$fromChar,\n\t\telm$core$List$head(\n\t\t\telm$core$String$toList(string)));\n};\nvar romstad$elm_chess$Internal$Square$fromString = function (string) {\n\tvar r = romstad$elm_chess$Internal$SquareRank$fromString(\n\t\tA2(elm$core$String$dropLeft, 1, string));\n\tvar f = romstad$elm_chess$Internal$SquareFile$fromString(string);\n\tif (f.$ === 'Just') {\n\t\tvar f_ = f.a;\n\t\treturn A2(\n\t\t\telm$core$Maybe$map,\n\t\t\tromstad$elm_chess$Internal$Square$make(f_),\n\t\t\tr);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar romstad$elm_chess$Internal$Position$fromFen = function (fen) {\n\tvar components = elm$core$Array$fromList(\n\t\tA2(elm$core$String$split, ' ', fen));\n\tvar epSquare_ = romstad$elm_chess$Internal$Square$fromString(\n\t\tA2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\t'-',\n\t\t\tA2(elm$core$Array$get, 3, components)));\n\tvar sideToMove_ = romstad$elm_chess$Internal$PieceColor$fromString(\n\t\tA2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\t'w',\n\t\t\tA2(elm$core$Array$get, 1, components)));\n\tvar castleRights = romstad$elm_chess$Internal$CastleRights$fromString(\n\t\tA2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\t'-',\n\t\t\tA2(elm$core$Array$get, 2, components)));\n\tvar board = romstad$elm_chess$Internal$Board$fromFen(\n\t\tA2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\t'',\n\t\t\tA2(elm$core$Array$get, 0, components)));\n\tvar whiteKingSquare = elm$core$List$head(\n\t\tA2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (s) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, s, board),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$whiteKing);\n\t\t\t},\n\t\t\tromstad$elm_chess$Internal$Square$all));\n\tvar blackKingSquare = elm$core$List$head(\n\t\tA2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (s) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, s, board),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$blackKing);\n\t\t\t},\n\t\t\tromstad$elm_chess$Internal$Square$all));\n\treturn elm$core$Maybe$Just(\n\t\tromstad$elm_chess$Internal$Position$Position(\n\t\t\t{\n\t\t\t\tblackKingSquare: blackKingSquare,\n\t\t\t\tboard: board,\n\t\t\t\tcastleRights: castleRights,\n\t\t\t\tepSquare: epSquare_,\n\t\t\t\tgamePly: 0,\n\t\t\t\tlastMove: elm$core$Maybe$Nothing,\n\t\t\t\tparent: elm$core$Maybe$Nothing,\n\t\t\t\trule50Counter: 0,\n\t\t\t\tsideToMove: A2(elm$core$Maybe$withDefault, romstad$elm_chess$Internal$PieceColor$white, sideToMove_),\n\t\t\t\twhiteKingSquare: whiteKingSquare\n\t\t\t}));\n};\nvar romstad$elm_chess$Internal$Position$initial = A2(\n\telm$core$Maybe$withDefault,\n\tromstad$elm_chess$Internal$Position$empty,\n\tromstad$elm_chess$Internal$Position$fromFen('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1'));\nvar romstad$elm_chess$Internal$Game$empty = {\n\tcurrentMoveIndex: 0,\n\tcurrentPosition: romstad$elm_chess$Internal$Position$initial,\n\tpositions: elm$core$Array$fromList(\n\t\t_List_fromArray(\n\t\t\t[romstad$elm_chess$Internal$Position$initial])),\n\tresult: romstad$elm_chess$Internal$Game$UnknownResult,\n\ttags: _List_Nil\n};\nvar romstad$elm_chess$Game$empty = romstad$elm_chess$Game$Game(romstad$elm_chess$Internal$Game$empty);\nvar author$project$Main$initModel = {candidateMoves: _List_Nil, error: elm$core$Maybe$Nothing, game: romstad$elm_chess$Game$empty, gameState: author$project$Main$Init, isBlack: false, myId: elm$core$Maybe$Nothing, otherId: '', selectedSquare: elm$core$Maybe$Nothing};\nvar author$project$Main$output = _Platform_outgoingPort('output', elm$core$Basics$identity);\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{nodeList: nodeList, nodeListSize: (len / elm$core$Array$branchFactor) | 0, tail: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 'Err', a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 'Ok', a: a};\n};\nvar elm$core$Result$isOk = function (result) {\n\tif (result.$ === 'Ok') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Failure', a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Field', a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Index', a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 'OneOf', a: a};\n};\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 'Field':\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 'Nothing') {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 'Index':\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 'OneOf':\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$json$Json$Encode$int = _Json_wrap;\nvar author$project$Main$init = function (flags) {\n\treturn _Utils_Tuple2(\n\t\tauthor$project$Main$initModel,\n\t\tauthor$project$Main$output(\n\t\t\telm$json$Json$Encode$int(57)));\n};\nvar elm$json$Json$Decode$value = _Json_decodeValue;\nvar author$project$Main$input = _Platform_incomingPort('input', elm$json$Json$Decode$value);\nvar author$project$Main$MyTurn = {$: 'MyTurn'};\nvar author$project$Main$OtherTurn = {$: 'OtherTurn'};\nvar author$project$Main$GotId = function (a) {\n\treturn {$: 'GotId', a: a};\n};\nvar author$project$Main$GotMove = function (a) {\n\treturn {$: 'GotMove', a: a};\n};\nvar author$project$Main$GotRematch = {$: 'GotRematch'};\nvar author$project$Main$Ready = {$: 'Ready'};\nvar author$project$Main$Ready2 = {$: 'Ready2'};\nvar elm$json$Json$Decode$andThen = _Json_andThen;\nvar elm$json$Json$Decode$fail = _Json_fail;\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar author$project$Main$msgDecoder = A2(\n\telm$json$Json$Decode$andThen,\n\tfunction (t) {\n\t\tswitch (t) {\n\t\t\tcase 'Ready':\n\t\t\t\treturn elm$json$Json$Decode$succeed(author$project$Main$Ready);\n\t\t\tcase 'Ready2':\n\t\t\t\treturn elm$json$Json$Decode$succeed(author$project$Main$Ready2);\n\t\t\tcase 'GotMove':\n\t\t\t\treturn A2(\n\t\t\t\t\telm$json$Json$Decode$map,\n\t\t\t\t\tauthor$project$Main$GotMove,\n\t\t\t\t\tA2(elm$json$Json$Decode$field, 'move', elm$json$Json$Decode$string));\n\t\t\tcase 'Rematch':\n\t\t\t\treturn elm$json$Json$Decode$succeed(author$project$Main$GotRematch);\n\t\t\tdefault:\n\t\t\t\treturn elm$json$Json$Decode$fail('Unknown object');\n\t\t}\n\t},\n\tA2(elm$json$Json$Decode$field, 'type', elm$json$Json$Decode$string));\nvar author$project$Main$portDecoder = A2(\n\telm$json$Json$Decode$andThen,\n\tfunction (t) {\n\t\tswitch (t) {\n\t\t\tcase 'GotId':\n\t\t\t\treturn A2(\n\t\t\t\t\telm$json$Json$Decode$map,\n\t\t\t\t\tauthor$project$Main$GotId,\n\t\t\t\t\tA2(elm$json$Json$Decode$field, 'id', elm$json$Json$Decode$string));\n\t\t\tcase 'GotMsg':\n\t\t\t\treturn A2(elm$json$Json$Decode$field, 'data', author$project$Main$msgDecoder);\n\t\t\tdefault:\n\t\t\t\treturn elm$json$Json$Decode$fail('Unknown object');\n\t\t}\n\t},\n\tA2(elm$json$Json$Decode$field, 'type', elm$json$Json$Decode$string));\nvar elm$core$Basics$not = _Basics_not;\nvar author$project$Main$rematch = function (model) {\n\treturn _Utils_update(\n\t\tmodel,\n\t\t{\n\t\t\tcandidateMoves: _List_Nil,\n\t\t\tgame: romstad$elm_chess$Game$empty,\n\t\t\tgameState: model.isBlack ? author$project$Main$MyTurn : author$project$Main$OtherTurn,\n\t\t\tisBlack: !model.isBlack,\n\t\t\tselectedSquare: elm$core$Maybe$Nothing\n\t\t});\n};\nvar elm$json$Json$Encode$object = function (pairs) {\n\treturn _Json_wrap(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n0, obj) {\n\t\t\t\t\tvar k = _n0.a;\n\t\t\t\t\tvar v = _n0.b;\n\t\t\t\t\treturn A3(_Json_addField, k, v, obj);\n\t\t\t\t}),\n\t\t\t_Json_emptyObject(_Utils_Tuple0),\n\t\t\tpairs));\n};\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar author$project$Main$send = function (msg) {\n\treturn author$project$Main$output(\n\t\telm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'type',\n\t\t\t\t\telm$json$Json$Encode$string('Send')),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'data',\n\t\t\t\t\telm$json$Json$Encode$object(msg))\n\t\t\t\t])));\n};\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar elm$core$Elm$JsArray$push = _JsArray_push;\nvar elm$core$Elm$JsArray$singleton = _JsArray_singleton;\nvar elm$core$Array$insertTailInTree = F4(\n\tfunction (shift, index, tail, tree) {\n\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\tif (_Utils_cmp(\n\t\t\tpos,\n\t\t\telm$core$Elm$JsArray$length(tree)) > -1) {\n\t\t\tif (shift === 5) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Elm$JsArray$push,\n\t\t\t\t\telm$core$Array$Leaf(tail),\n\t\t\t\t\ttree);\n\t\t\t} else {\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, shift - elm$core$Array$shiftStep, index, tail, elm$core$Elm$JsArray$empty));\n\t\t\t\treturn A2(elm$core$Elm$JsArray$push, newSub, tree);\n\t\t\t}\n\t\t} else {\n\t\t\tvar value = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (value.$ === 'SubTree') {\n\t\t\t\tvar subTree = value.a;\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, shift - elm$core$Array$shiftStep, index, tail, subTree));\n\t\t\t\treturn A3(elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);\n\t\t\t} else {\n\t\t\t\tvar newSub = elm$core$Array$SubTree(\n\t\t\t\t\tA4(\n\t\t\t\t\t\telm$core$Array$insertTailInTree,\n\t\t\t\t\t\tshift - elm$core$Array$shiftStep,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\ttail,\n\t\t\t\t\t\telm$core$Elm$JsArray$singleton(value)));\n\t\t\t\treturn A3(elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$unsafeReplaceTail = F2(\n\tfunction (newTail, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar originalTailLen = elm$core$Elm$JsArray$length(tail);\n\t\tvar newTailLen = elm$core$Elm$JsArray$length(newTail);\n\t\tvar newArrayLen = len + (newTailLen - originalTailLen);\n\t\tif (_Utils_eq(newTailLen, elm$core$Array$branchFactor)) {\n\t\t\tvar overflow = _Utils_cmp(newArrayLen >>> elm$core$Array$shiftStep, 1 << startShift) > 0;\n\t\t\tif (overflow) {\n\t\t\t\tvar newShift = startShift + elm$core$Array$shiftStep;\n\t\t\t\tvar newTree = A4(\n\t\t\t\t\telm$core$Array$insertTailInTree,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tlen,\n\t\t\t\t\tnewTail,\n\t\t\t\t\telm$core$Elm$JsArray$singleton(\n\t\t\t\t\t\telm$core$Array$SubTree(tree)));\n\t\t\t\treturn A4(elm$core$Array$Array_elm_builtin, newArrayLen, newShift, newTree, elm$core$Elm$JsArray$empty);\n\t\t\t} else {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tnewArrayLen,\n\t\t\t\t\tstartShift,\n\t\t\t\t\tA4(elm$core$Array$insertTailInTree, startShift, len, newTail, tree),\n\t\t\t\t\telm$core$Elm$JsArray$empty);\n\t\t\t}\n\t\t} else {\n\t\t\treturn A4(elm$core$Array$Array_elm_builtin, newArrayLen, startShift, tree, newTail);\n\t\t}\n\t});\nvar elm$core$Array$push = F2(\n\tfunction (a, array) {\n\t\tvar tail = array.d;\n\t\treturn A2(\n\t\t\telm$core$Array$unsafeReplaceTail,\n\t\t\tA2(elm$core$Elm$JsArray$push, a, tail),\n\t\t\tarray);\n\t});\nvar elm$core$Elm$JsArray$appendN = _JsArray_appendN;\nvar elm$core$Elm$JsArray$slice = _JsArray_slice;\nvar elm$core$Array$appendHelpBuilder = F2(\n\tfunction (tail, builder) {\n\t\tvar tailLen = elm$core$Elm$JsArray$length(tail);\n\t\tvar notAppended = (elm$core$Array$branchFactor - elm$core$Elm$JsArray$length(builder.tail)) - tailLen;\n\t\tvar appended = A3(elm$core$Elm$JsArray$appendN, elm$core$Array$branchFactor, builder.tail, tail);\n\t\treturn (notAppended < 0) ? {\n\t\t\tnodeList: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.nodeList),\n\t\t\tnodeListSize: builder.nodeListSize + 1,\n\t\t\ttail: A3(elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)\n\t\t} : ((!notAppended) ? {\n\t\t\tnodeList: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.nodeList),\n\t\t\tnodeListSize: builder.nodeListSize + 1,\n\t\t\ttail: elm$core$Elm$JsArray$empty\n\t\t} : {nodeList: builder.nodeList, nodeListSize: builder.nodeListSize, tail: appended});\n\t});\nvar elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceLeft = F2(\n\tfunction (from, array) {\n\t\tvar len = array.a;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (!from) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tfrom,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tlen - from,\n\t\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\tfrom - elm$core$Array$tailIndex(len),\n\t\t\t\t\t\telm$core$Elm$JsArray$length(tail),\n\t\t\t\t\t\ttail));\n\t\t\t} else {\n\t\t\t\tvar skipNodes = (from / elm$core$Array$branchFactor) | 0;\n\t\t\t\tvar helper = F2(\n\t\t\t\t\tfunction (node, acc) {\n\t\t\t\t\t\tif (node.$ === 'SubTree') {\n\t\t\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\t\treturn A2(elm$core$List$cons, leaf, acc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar leafNodes = A3(\n\t\t\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\t\t\thelper,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[tail]),\n\t\t\t\t\ttree);\n\t\t\t\tvar nodesToInsert = A2(elm$core$List$drop, skipNodes, leafNodes);\n\t\t\t\tif (!nodesToInsert.b) {\n\t\t\t\t\treturn elm$core$Array$empty;\n\t\t\t\t} else {\n\t\t\t\t\tvar head = nodesToInsert.a;\n\t\t\t\t\tvar rest = nodesToInsert.b;\n\t\t\t\t\tvar firstSlice = from - (skipNodes * elm$core$Array$branchFactor);\n\t\t\t\t\tvar initialBuilder = {\n\t\t\t\t\t\tnodeList: _List_Nil,\n\t\t\t\t\t\tnodeListSize: 0,\n\t\t\t\t\t\ttail: A3(\n\t\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\t\tfirstSlice,\n\t\t\t\t\t\t\telm$core$Elm$JsArray$length(head),\n\t\t\t\t\t\t\thead)\n\t\t\t\t\t};\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tA3(elm$core$List$foldl, elm$core$Array$appendHelpBuilder, initialBuilder, rest));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fetchNewTail = F4(\n\tfunction (shift, end, treeEnd, tree) {\n\t\tfetchNewTail:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (treeEnd >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (_n0.$ === 'SubTree') {\n\t\t\t\tvar sub = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$end = end,\n\t\t\t\t\t$temp$treeEnd = treeEnd,\n\t\t\t\t\t$temp$tree = sub;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tend = $temp$end;\n\t\t\t\ttreeEnd = $temp$treeEnd;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue fetchNewTail;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$hoistTree = F3(\n\tfunction (oldShift, newShift, tree) {\n\t\thoistTree:\n\t\twhile (true) {\n\t\t\tif ((_Utils_cmp(oldShift, newShift) < 1) || (!elm$core$Elm$JsArray$length(tree))) {\n\t\t\t\treturn tree;\n\t\t\t} else {\n\t\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, 0, tree);\n\t\t\t\tif (_n0.$ === 'SubTree') {\n\t\t\t\t\tvar sub = _n0.a;\n\t\t\t\t\tvar $temp$oldShift = oldShift - elm$core$Array$shiftStep,\n\t\t\t\t\t\t$temp$newShift = newShift,\n\t\t\t\t\t\t$temp$tree = sub;\n\t\t\t\t\toldShift = $temp$oldShift;\n\t\t\t\t\tnewShift = $temp$newShift;\n\t\t\t\t\ttree = $temp$tree;\n\t\t\t\t\tcontinue hoistTree;\n\t\t\t\t} else {\n\t\t\t\t\treturn tree;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceTree = F3(\n\tfunction (shift, endIdx, tree) {\n\t\tvar lastPos = elm$core$Array$bitMask & (endIdx >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, lastPos, tree);\n\t\tif (_n0.$ === 'SubTree') {\n\t\t\tvar sub = _n0.a;\n\t\t\tvar newSub = A3(elm$core$Array$sliceTree, shift - elm$core$Array$shiftStep, endIdx, sub);\n\t\t\treturn (!elm$core$Elm$JsArray$length(newSub)) ? A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree) : A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tlastPos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, lastPos + 1, tree));\n\t\t} else {\n\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree);\n\t\t}\n\t});\nvar elm$core$Array$sliceRight = F2(\n\tfunction (end, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (_Utils_eq(end, len)) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tend,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tstartShift,\n\t\t\t\t\ttree,\n\t\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, tail));\n\t\t\t} else {\n\t\t\t\tvar endIdx = elm$core$Array$tailIndex(end);\n\t\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Basics$logBase,\n\t\t\t\t\t\telm$core$Array$branchFactor,\n\t\t\t\t\t\tA2(elm$core$Basics$max, 1, endIdx - 1)));\n\t\t\t\tvar newShift = A2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep);\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Array$hoistTree,\n\t\t\t\t\t\tstartShift,\n\t\t\t\t\t\tnewShift,\n\t\t\t\t\t\tA3(elm$core$Array$sliceTree, startShift, endIdx, tree)),\n\t\t\t\t\tA4(elm$core$Array$fetchNewTail, startShift, end, endIdx, tree));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$translateIndex = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar posIndex = (index < 0) ? (len + index) : index;\n\t\treturn (posIndex < 0) ? 0 : ((_Utils_cmp(posIndex, len) > 0) ? len : posIndex);\n\t});\nvar elm$core$Array$slice = F3(\n\tfunction (from, to, array) {\n\t\tvar correctTo = A2(elm$core$Array$translateIndex, to, array);\n\t\tvar correctFrom = A2(elm$core$Array$translateIndex, from, array);\n\t\treturn (_Utils_cmp(correctFrom, correctTo) > 0) ? elm$core$Array$empty : A2(\n\t\t\telm$core$Array$sliceLeft,\n\t\t\tcorrectFrom,\n\t\t\tA2(elm$core$Array$sliceRight, correctTo, array));\n\t});\nvar romstad$elm_chess$Internal$Game$position = function (game) {\n\treturn game.currentPosition;\n};\nvar elm$core$Basics$neq = _Utils_notEqual;\nvar romstad$elm_chess$Internal$Board$removePiece = function (square) {\n\treturn A2(\n\t\telm$core$Array$set,\n\t\tromstad$elm_chess$Internal$Square$unwrap(square),\n\t\tromstad$elm_chess$Internal$Piece$empty);\n};\nvar romstad$elm_chess$Internal$Board$movePiece = F3(\n\tfunction (from, to, board) {\n\t\tvar piece = A2(romstad$elm_chess$Internal$Board$pieceOn, from, board);\n\t\treturn A3(\n\t\t\tromstad$elm_chess$Internal$Board$putPiece,\n\t\t\tpiece,\n\t\t\tto,\n\t\t\tA2(romstad$elm_chess$Internal$Board$removePiece, from, board));\n\t});\nvar elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;\nvar romstad$elm_chess$Internal$Move$unwrap = function (move) {\n\tvar move_ = move.a;\n\treturn move_;\n};\nvar romstad$elm_chess$Internal$Move$from = function (move) {\n\treturn romstad$elm_chess$Internal$Square$expand(\n\t\t(romstad$elm_chess$Internal$Move$unwrap(move) >> 6) & 63);\n};\nvar romstad$elm_chess$Internal$Move$isEp = function (move) {\n\treturn (1 << 16) & romstad$elm_chess$Internal$Move$unwrap(move);\n};\nvar romstad$elm_chess$Internal$Move$isCastle = function (move) {\n\treturn (1 << 15) & romstad$elm_chess$Internal$Move$unwrap(move);\n};\nvar romstad$elm_chess$Internal$Move$to = function (move) {\n\treturn romstad$elm_chess$Internal$Square$expand(\n\t\tromstad$elm_chess$Internal$Move$unwrap(move) & 63);\n};\nvar romstad$elm_chess$Internal$Move$isKingsideCastle = function (move) {\n\treturn romstad$elm_chess$Internal$Move$isCastle(move) && (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$Square$unwrap(\n\t\t\tromstad$elm_chess$Internal$Move$from(move)),\n\t\tromstad$elm_chess$Internal$Square$unwrap(\n\t\t\tromstad$elm_chess$Internal$Move$to(move))) < 0);\n};\nvar romstad$elm_chess$Internal$Move$isQueensideCastle = function (move) {\n\treturn romstad$elm_chess$Internal$Move$isCastle(move) && (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$Square$unwrap(\n\t\t\tromstad$elm_chess$Internal$Move$from(move)),\n\t\tromstad$elm_chess$Internal$Square$unwrap(\n\t\t\tromstad$elm_chess$Internal$Move$to(move))) > 0);\n};\nvar romstad$elm_chess$Internal$Move$promotion = function (move) {\n\tvar p = romstad$elm_chess$Internal$PieceType$PieceType(\n\t\t(romstad$elm_chess$Internal$Move$unwrap(move) >> 12) & 7);\n\treturn _Utils_eq(p, romstad$elm_chess$Internal$PieceType$none) ? elm$core$Maybe$Nothing : elm$core$Maybe$Just(p);\n};\nvar romstad$elm_chess$Internal$Piece$unwrap = function (piece) {\n\tvar piece_ = piece.a;\n\treturn piece_;\n};\nvar romstad$elm_chess$Internal$Piece$color = function (piece) {\n\treturn romstad$elm_chess$Internal$PieceColor$PieceColor(\n\t\tromstad$elm_chess$Internal$Piece$unwrap(piece) >> 3);\n};\nvar romstad$elm_chess$Internal$SquareDelta$unwrap = function (delta) {\n\tvar delta_ = delta.a;\n\treturn delta_;\n};\nvar romstad$elm_chess$Internal$Square$add = F2(\n\tfunction (square, delta_) {\n\t\treturn romstad$elm_chess$Internal$Square$Square(\n\t\t\tromstad$elm_chess$Internal$Square$unwrap(square) + romstad$elm_chess$Internal$SquareDelta$unwrap(delta_));\n\t});\nvar romstad$elm_chess$Internal$Square$file = function (square) {\n\treturn romstad$elm_chess$Internal$SquareFile$SquareFile(\n\t\tA2(\n\t\t\telm$core$Basics$modBy,\n\t\t\tromstad$elm_chess$Internal$BoardDimensions$extendedFileCount,\n\t\t\tromstad$elm_chess$Internal$Square$unwrap(square)));\n};\nvar romstad$elm_chess$Internal$Square$rank = function (square) {\n\treturn romstad$elm_chess$Internal$SquareRank$SquareRank(\n\t\t(romstad$elm_chess$Internal$Square$unwrap(square) / romstad$elm_chess$Internal$BoardDimensions$extendedFileCount) | 0);\n};\nvar romstad$elm_chess$Internal$SquareDelta$SquareDelta = function (a) {\n\treturn {$: 'SquareDelta', a: a};\n};\nvar romstad$elm_chess$Internal$SquareDelta$e = romstad$elm_chess$Internal$SquareDelta$SquareDelta(1);\nvar romstad$elm_chess$Internal$SquareDelta$multiply = F2(\n\tfunction (i, delta) {\n\t\treturn romstad$elm_chess$Internal$SquareDelta$SquareDelta(\n\t\t\ti * romstad$elm_chess$Internal$SquareDelta$unwrap(delta));\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar romstad$elm_chess$Internal$SquareDelta$negate = function (delta) {\n\treturn A2(romstad$elm_chess$Internal$SquareDelta$multiply, -1, delta);\n};\nvar romstad$elm_chess$Internal$SquareDelta$w = romstad$elm_chess$Internal$SquareDelta$negate(romstad$elm_chess$Internal$SquareDelta$e);\nvar romstad$elm_chess$Internal$Board$doMove = F2(\n\tfunction (move, board) {\n\t\tvar us = romstad$elm_chess$Internal$Piece$color(\n\t\t\tA2(\n\t\t\t\tromstad$elm_chess$Internal$Board$pieceOn,\n\t\t\t\tromstad$elm_chess$Internal$Move$from(move),\n\t\t\t\tboard));\n\t\tvar to = romstad$elm_chess$Internal$Move$to(move);\n\t\tvar from = romstad$elm_chess$Internal$Move$from(move);\n\t\tvar _n0 = romstad$elm_chess$Internal$Move$promotion(move);\n\t\tif (_n0.$ === 'Nothing') {\n\t\t\tif (romstad$elm_chess$Internal$Move$isKingsideCastle(move)) {\n\t\t\t\treturn A3(\n\t\t\t\t\tromstad$elm_chess$Internal$Board$movePiece,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, to, romstad$elm_chess$Internal$SquareDelta$e),\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, from, romstad$elm_chess$Internal$SquareDelta$e),\n\t\t\t\t\tA3(romstad$elm_chess$Internal$Board$movePiece, from, to, board));\n\t\t\t} else {\n\t\t\t\tif (romstad$elm_chess$Internal$Move$isQueensideCastle(move)) {\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Board$movePiece,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Square$add,\n\t\t\t\t\t\t\tto,\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$w)),\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, from, romstad$elm_chess$Internal$SquareDelta$w),\n\t\t\t\t\t\tA3(romstad$elm_chess$Internal$Board$movePiece, from, to, board));\n\t\t\t\t} else {\n\t\t\t\t\tif (romstad$elm_chess$Internal$Move$isEp(move)) {\n\t\t\t\t\t\tvar toFile = romstad$elm_chess$Internal$Square$file(to);\n\t\t\t\t\t\tvar fromRank = romstad$elm_chess$Internal$Square$rank(from);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Board$removePiece,\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$make, toFile, fromRank),\n\t\t\t\t\t\t\tA3(romstad$elm_chess$Internal$Board$movePiece, from, to, board));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn A3(romstad$elm_chess$Internal$Board$movePiece, from, to, board);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar kind = _n0.a;\n\t\t\treturn A3(\n\t\t\t\tromstad$elm_chess$Internal$Board$putPiece,\n\t\t\t\tA2(romstad$elm_chess$Internal$Piece$make, us, kind),\n\t\t\t\tto,\n\t\t\t\tA2(romstad$elm_chess$Internal$Board$removePiece, from, board));\n\t\t}\n\t});\nvar elm$core$Bitwise$complement = _Bitwise_complement;\nvar romstad$elm_chess$Internal$CastleRights$unwrap = function (rights) {\n\tvar rights_ = rights.a;\n\treturn rights_;\n};\nvar romstad$elm_chess$Internal$CastleRights$disableKingsideCastling = F2(\n\tfunction (color, rights) {\n\t\treturn romstad$elm_chess$Internal$CastleRights$CastleRights(\n\t\t\tromstad$elm_chess$Internal$CastleRights$unwrap(rights) & (~(1 << (2 * romstad$elm_chess$Internal$PieceColor$unwrap(color)))));\n\t});\nvar romstad$elm_chess$Internal$CastleRights$disableQueensideCastling = F2(\n\tfunction (color, rights) {\n\t\treturn romstad$elm_chess$Internal$CastleRights$CastleRights(\n\t\t\tromstad$elm_chess$Internal$CastleRights$unwrap(rights) & (~(1 << ((2 * romstad$elm_chess$Internal$PieceColor$unwrap(color)) + 1))));\n\t});\nvar romstad$elm_chess$Internal$CastleRights$disableAllCastling = F2(\n\tfunction (color, rights) {\n\t\treturn A2(\n\t\t\tromstad$elm_chess$Internal$CastleRights$disableQueensideCastling,\n\t\t\tcolor,\n\t\t\tA2(romstad$elm_chess$Internal$CastleRights$disableKingsideCastling, color, rights));\n\t});\nvar romstad$elm_chess$Internal$SquareFile$a = romstad$elm_chess$Internal$SquareFile$SquareFile(romstad$elm_chess$Internal$BoardDimensions$fileMin);\nvar romstad$elm_chess$Internal$SquareRank$one = romstad$elm_chess$Internal$SquareRank$SquareRank(romstad$elm_chess$Internal$BoardDimensions$rankMin);\nvar romstad$elm_chess$Internal$Square$a1 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$a, romstad$elm_chess$Internal$SquareRank$one);\nvar romstad$elm_chess$Internal$SquareRank$eight = romstad$elm_chess$Internal$SquareRank$SquareRank(romstad$elm_chess$Internal$BoardDimensions$rankMin + 7);\nvar romstad$elm_chess$Internal$Square$a8 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$a, romstad$elm_chess$Internal$SquareRank$eight);\nvar romstad$elm_chess$Internal$SquareFile$e = romstad$elm_chess$Internal$SquareFile$SquareFile(romstad$elm_chess$Internal$BoardDimensions$fileMin + 4);\nvar romstad$elm_chess$Internal$Square$e1 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$e, romstad$elm_chess$Internal$SquareRank$one);\nvar romstad$elm_chess$Internal$Square$e8 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$e, romstad$elm_chess$Internal$SquareRank$eight);\nvar romstad$elm_chess$Internal$SquareFile$h = romstad$elm_chess$Internal$SquareFile$SquareFile(romstad$elm_chess$Internal$BoardDimensions$fileMin + 7);\nvar romstad$elm_chess$Internal$Square$h1 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$h, romstad$elm_chess$Internal$SquareRank$one);\nvar romstad$elm_chess$Internal$Square$h8 = A2(romstad$elm_chess$Internal$Square$make, romstad$elm_chess$Internal$SquareFile$h, romstad$elm_chess$Internal$SquareRank$eight);\nvar romstad$elm_chess$Internal$CastleRights$doMove = F2(\n\tfunction (move, rights) {\n\t\tvar to = romstad$elm_chess$Internal$Move$to(move);\n\t\tvar from = romstad$elm_chess$Internal$Move$from(move);\n\t\treturn (_Utils_eq(from, romstad$elm_chess$Internal$Square$e8) ? romstad$elm_chess$Internal$CastleRights$disableAllCastling(romstad$elm_chess$Internal$PieceColor$black) : elm$core$Basics$identity)(\n\t\t\t(_Utils_eq(from, romstad$elm_chess$Internal$Square$e1) ? romstad$elm_chess$Internal$CastleRights$disableAllCastling(romstad$elm_chess$Internal$PieceColor$white) : elm$core$Basics$identity)(\n\t\t\t\t((_Utils_eq(from, romstad$elm_chess$Internal$Square$h8) || _Utils_eq(to, romstad$elm_chess$Internal$Square$h8)) ? romstad$elm_chess$Internal$CastleRights$disableKingsideCastling(romstad$elm_chess$Internal$PieceColor$black) : elm$core$Basics$identity)(\n\t\t\t\t\t((_Utils_eq(from, romstad$elm_chess$Internal$Square$h1) || _Utils_eq(to, romstad$elm_chess$Internal$Square$h1)) ? romstad$elm_chess$Internal$CastleRights$disableKingsideCastling(romstad$elm_chess$Internal$PieceColor$white) : elm$core$Basics$identity)(\n\t\t\t\t\t\t((_Utils_eq(from, romstad$elm_chess$Internal$Square$a8) || _Utils_eq(to, romstad$elm_chess$Internal$Square$a8)) ? romstad$elm_chess$Internal$CastleRights$disableQueensideCastling(romstad$elm_chess$Internal$PieceColor$black) : elm$core$Basics$identity)(\n\t\t\t\t\t\t\t((_Utils_eq(from, romstad$elm_chess$Internal$Square$a1) || _Utils_eq(to, romstad$elm_chess$Internal$Square$a1)) ? romstad$elm_chess$Internal$CastleRights$disableQueensideCastling(romstad$elm_chess$Internal$PieceColor$white) : elm$core$Basics$identity)(rights))))));\n\t});\nvar romstad$elm_chess$Internal$Piece$blackPawn = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$pawn);\nvar romstad$elm_chess$Internal$Piece$kind = function (piece) {\n\treturn romstad$elm_chess$Internal$PieceType$PieceType(\n\t\tromstad$elm_chess$Internal$Piece$unwrap(piece) & 7);\n};\nvar romstad$elm_chess$Internal$Piece$whitePawn = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$pawn);\nvar elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$core$Bitwise$xor = _Bitwise_xor;\nvar romstad$elm_chess$Internal$PieceColor$opposite = A2(\n\telm$core$Basics$composeR,\n\tromstad$elm_chess$Internal$PieceColor$unwrap,\n\tA2(\n\t\telm$core$Basics$composeR,\n\t\telm$core$Bitwise$xor(1),\n\t\tromstad$elm_chess$Internal$PieceColor$PieceColor));\nvar romstad$elm_chess$Internal$Position$unwrap = function (pos) {\n\tvar pos_ = pos.a;\n\treturn pos_;\n};\nvar romstad$elm_chess$Internal$Position$pieceOn = F2(\n\tfunction (square, pos) {\n\t\treturn A2(\n\t\t\tromstad$elm_chess$Internal$Board$pieceOn,\n\t\t\tsquare,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(pos).board);\n\t});\nvar romstad$elm_chess$Internal$Square$subtract = F2(\n\tfunction (square0, square1) {\n\t\treturn romstad$elm_chess$Internal$SquareDelta$SquareDelta(\n\t\t\tromstad$elm_chess$Internal$Square$unwrap(square0) - romstad$elm_chess$Internal$Square$unwrap(square1));\n\t});\nvar romstad$elm_chess$Internal$SquareDelta$n = romstad$elm_chess$Internal$SquareDelta$SquareDelta(romstad$elm_chess$Internal$BoardDimensions$extendedFileCount);\nvar romstad$elm_chess$Internal$SquareDelta$add = F2(\n\tfunction (delta0, delta1) {\n\t\treturn romstad$elm_chess$Internal$SquareDelta$SquareDelta(\n\t\t\tromstad$elm_chess$Internal$SquareDelta$unwrap(delta0) + romstad$elm_chess$Internal$SquareDelta$unwrap(delta1));\n\t});\nvar romstad$elm_chess$Internal$SquareDelta$nn = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$n);\nvar romstad$elm_chess$Internal$SquareDelta$s = romstad$elm_chess$Internal$SquareDelta$negate(romstad$elm_chess$Internal$SquareDelta$n);\nvar romstad$elm_chess$Internal$SquareDelta$ss = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$s);\nvar romstad$elm_chess$Internal$Position$doMove = F2(\n\tfunction (move, position) {\n\t\tvar to = romstad$elm_chess$Internal$Move$to(move);\n\t\tvar from = romstad$elm_chess$Internal$Move$from(move);\n\t\tvar piece = A2(romstad$elm_chess$Internal$Position$pieceOn, from, position);\n\t\tvar pos = position.a;\n\t\treturn romstad$elm_chess$Internal$Position$Position(\n\t\t\t{\n\t\t\t\tblackKingSquare: _Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackKing) ? elm$core$Maybe$Just(to) : pos.blackKingSquare,\n\t\t\t\tboard: A2(romstad$elm_chess$Internal$Board$doMove, move, pos.board),\n\t\t\t\tcastleRights: A2(romstad$elm_chess$Internal$CastleRights$doMove, move, pos.castleRights),\n\t\t\t\tepSquare: (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whitePawn) && _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$subtract, to, from),\n\t\t\t\t\tromstad$elm_chess$Internal$SquareDelta$nn)) ? elm$core$Maybe$Just(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, from, romstad$elm_chess$Internal$SquareDelta$n)) : ((_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackPawn) && _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$subtract, to, from),\n\t\t\t\t\tromstad$elm_chess$Internal$SquareDelta$ss)) ? elm$core$Maybe$Just(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, from, romstad$elm_chess$Internal$SquareDelta$s)) : elm$core$Maybe$Nothing),\n\t\t\t\tgamePly: pos.gamePly + 1,\n\t\t\t\tlastMove: elm$core$Maybe$Just(move),\n\t\t\t\tparent: elm$core$Maybe$Just(position),\n\t\t\t\trule50Counter: (_Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\t\t\tromstad$elm_chess$Internal$PieceType$pawn) || (!_Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, to, position),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$empty))) ? 0 : (pos.rule50Counter + 1),\n\t\t\t\tsideToMove: romstad$elm_chess$Internal$PieceColor$opposite(pos.sideToMove),\n\t\t\t\twhiteKingSquare: _Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteKing) ? elm$core$Maybe$Just(to) : pos.whiteKingSquare\n\t\t\t});\n\t});\nvar romstad$elm_chess$Internal$Game$addMove = F2(\n\tfunction (move, game) {\n\t\tvar pos = A2(\n\t\t\tromstad$elm_chess$Internal$Position$doMove,\n\t\t\tmove,\n\t\t\tromstad$elm_chess$Internal$Game$position(game));\n\t\treturn _Utils_update(\n\t\t\tgame,\n\t\t\t{\n\t\t\t\tcurrentMoveIndex: game.currentMoveIndex + 1,\n\t\t\t\tcurrentPosition: pos,\n\t\t\t\tpositions: A2(\n\t\t\t\t\telm$core$Array$push,\n\t\t\t\t\tpos,\n\t\t\t\t\tA3(elm$core$Array$slice, 0, 1 + game.currentMoveIndex, game.positions))\n\t\t\t});\n\t});\nvar romstad$elm_chess$Game$addMove = F2(\n\tfunction (move, game) {\n\t\tvar g = game.a;\n\t\treturn romstad$elm_chess$Game$Game(\n\t\t\tA2(romstad$elm_chess$Internal$Game$addMove, move, g));\n\t});\nvar romstad$elm_chess$Game$position = function (game) {\n\tvar g = game.a;\n\treturn romstad$elm_chess$Internal$Game$position(g);\n};\nvar elm$core$String$toUpper = _String_toUpper;\nvar elm$core$String$cons = _String_cons;\nvar elm$core$String$fromChar = function (_char) {\n\treturn A2(elm$core$String$cons, _char, '');\n};\nvar romstad$elm_chess$Internal$PieceType$toChar = function (kind) {\n\treturn _Utils_eq(kind, romstad$elm_chess$Internal$PieceType$pawn) ? _Utils_chr('P') : (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$knight) ? _Utils_chr('N') : (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$bishop) ? _Utils_chr('B') : (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$rook) ? _Utils_chr('R') : (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$queen) ? _Utils_chr('Q') : (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$king) ? _Utils_chr('K') : _Utils_chr('?'))))));\n};\nvar romstad$elm_chess$Internal$PieceType$toString = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$PieceType$toChar, elm$core$String$fromChar);\nvar elm$core$Char$fromCode = _Char_fromCode;\nvar romstad$elm_chess$Internal$SquareFile$toChar = function (file) {\n\treturn elm$core$Char$fromCode(\n\t\t(romstad$elm_chess$Internal$SquareFile$unwrap(file) - romstad$elm_chess$Internal$BoardDimensions$fileMin) + elm$core$Char$toCode(\n\t\t\t_Utils_chr('a')));\n};\nvar romstad$elm_chess$Internal$SquareFile$toString = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$SquareFile$toChar, elm$core$String$fromChar);\nvar romstad$elm_chess$Internal$SquareRank$toChar = function (rank) {\n\treturn elm$core$Char$fromCode(\n\t\t(romstad$elm_chess$Internal$SquareRank$unwrap(rank) - romstad$elm_chess$Internal$BoardDimensions$rankMin) + elm$core$Char$toCode(\n\t\t\t_Utils_chr('1')));\n};\nvar romstad$elm_chess$Internal$SquareRank$toString = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$SquareRank$toChar, elm$core$String$fromChar);\nvar romstad$elm_chess$Internal$Square$toString = function (square) {\n\treturn _Utils_ap(\n\t\tromstad$elm_chess$Internal$SquareFile$toString(\n\t\t\tromstad$elm_chess$Internal$Square$file(square)),\n\t\tromstad$elm_chess$Internal$SquareRank$toString(\n\t\t\tromstad$elm_chess$Internal$Square$rank(square)));\n};\nvar romstad$elm_chess$Internal$Notation$pawnMoveToSan = F2(\n\tfunction (move, position) {\n\t\tvar to = romstad$elm_chess$Internal$Move$to(move);\n\t\tvar promotion = romstad$elm_chess$Internal$Move$promotion(move);\n\t\tvar from = romstad$elm_chess$Internal$Move$from(move);\n\t\treturn _Utils_ap(\n\t\t\t(!_Utils_eq(\n\t\t\t\tromstad$elm_chess$Internal$Square$file(from),\n\t\t\t\tromstad$elm_chess$Internal$Square$file(to))) ? (romstad$elm_chess$Internal$SquareFile$toString(\n\t\t\t\tromstad$elm_chess$Internal$Square$file(from)) + 'x') : '',\n\t\t\t_Utils_ap(\n\t\t\t\tromstad$elm_chess$Internal$Square$toString(to),\n\t\t\t\tfunction () {\n\t\t\t\t\tif (promotion.$ === 'Nothing') {\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar promotion_ = promotion.a;\n\t\t\t\t\t\treturn '=' + elm$core$String$toUpper(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$PieceType$toString(promotion_));\n\t\t\t\t\t}\n\t\t\t\t}()));\n\t});\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$all = F2(\n\tfunction (isOkay, list) {\n\t\treturn !A2(\n\t\t\telm$core$List$any,\n\t\t\tA2(elm$core$Basics$composeL, elm$core$Basics$not, isOkay),\n\t\t\tlist);\n\t});\nvar romstad$elm_chess$Internal$Notation$differentFileFrom = F2(\n\tfunction (m1, m2) {\n\t\treturn _Utils_eq(m1, m2) || (!_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(m1)),\n\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(m2))));\n\t});\nvar romstad$elm_chess$Internal$Notation$differentRankFrom = F2(\n\tfunction (m1, m2) {\n\t\treturn _Utils_eq(m1, m2) || (!_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Square$rank(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(m1)),\n\t\t\tromstad$elm_chess$Internal$Square$rank(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(m2))));\n\t});\nvar romstad$elm_chess$Internal$Position$kingSquare = F2(\n\tfunction (color, position) {\n\t\treturn _Utils_eq(color, romstad$elm_chess$Internal$PieceColor$white) ? romstad$elm_chess$Internal$Position$unwrap(position).whiteKingSquare : romstad$elm_chess$Internal$Position$unwrap(position).blackKingSquare;\n\t});\nvar romstad$elm_chess$Internal$Board$lineIsClear = F4(\n\tfunction (board, square0, square1, delta) {\n\t\tvar lineIsClearInternal = F2(\n\t\t\tfunction (s0, s1) {\n\t\t\t\treturn _Utils_eq(s0, square1) || (_Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, s0, board),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$empty) && A2(\n\t\t\t\t\tlineIsClearInternal,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, s0, delta),\n\t\t\t\t\ts1));\n\t\t\t});\n\t\treturn A2(\n\t\t\tlineIsClearInternal,\n\t\t\tA2(romstad$elm_chess$Internal$Square$add, square0, delta),\n\t\t\tsquare1);\n\t});\nvar elm$core$Array$repeat = F2(\n\tfunction (n, e) {\n\t\treturn A2(\n\t\t\telm$core$Array$initialize,\n\t\t\tn,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn e;\n\t\t\t});\n\t});\nvar romstad$elm_chess$Internal$Piece$blackBishop = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$bishop);\nvar romstad$elm_chess$Internal$Piece$blackKnight = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$knight);\nvar romstad$elm_chess$Internal$Piece$blackQueen = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$queen);\nvar romstad$elm_chess$Internal$Piece$blackRook = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$black, romstad$elm_chess$Internal$PieceType$rook);\nvar romstad$elm_chess$Internal$Piece$whiteBishop = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$bishop);\nvar romstad$elm_chess$Internal$Piece$whiteKnight = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$knight);\nvar romstad$elm_chess$Internal$Piece$whiteQueen = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$queen);\nvar romstad$elm_chess$Internal$Piece$whiteRook = A2(romstad$elm_chess$Internal$Piece$make, romstad$elm_chess$Internal$PieceColor$white, romstad$elm_chess$Internal$PieceType$rook);\nvar romstad$elm_chess$Internal$SquareDelta$ne = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$e);\nvar romstad$elm_chess$Internal$SquareDelta$nee = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tromstad$elm_chess$Internal$SquareDelta$n,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$e));\nvar romstad$elm_chess$Internal$SquareDelta$nne = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$n),\n\tromstad$elm_chess$Internal$SquareDelta$e);\nvar romstad$elm_chess$Internal$SquareDelta$nnw = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$n),\n\tromstad$elm_chess$Internal$SquareDelta$w);\nvar romstad$elm_chess$Internal$SquareDelta$nw = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$w);\nvar romstad$elm_chess$Internal$SquareDelta$nww = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tromstad$elm_chess$Internal$SquareDelta$n,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$w));\nvar romstad$elm_chess$Internal$SquareDelta$se = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$e);\nvar romstad$elm_chess$Internal$SquareDelta$see = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tromstad$elm_chess$Internal$SquareDelta$s,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$e));\nvar romstad$elm_chess$Internal$SquareDelta$sse = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$s),\n\tromstad$elm_chess$Internal$SquareDelta$e);\nvar romstad$elm_chess$Internal$SquareDelta$ssw = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$s),\n\tromstad$elm_chess$Internal$SquareDelta$w);\nvar romstad$elm_chess$Internal$SquareDelta$sw = A2(romstad$elm_chess$Internal$SquareDelta$add, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w);\nvar romstad$elm_chess$Internal$SquareDelta$sww = A2(\n\tromstad$elm_chess$Internal$SquareDelta$add,\n\tromstad$elm_chess$Internal$SquareDelta$s,\n\tA2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, romstad$elm_chess$Internal$SquareDelta$w));\nvar romstad$elm_chess$Internal$Piece$attackDirections = function (piece) {\n\treturn _Utils_eq(piece, romstad$elm_chess$Internal$Piece$whitePawn) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteKnight) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nnw, romstad$elm_chess$Internal$SquareDelta$nne, romstad$elm_chess$Internal$SquareDelta$nww, romstad$elm_chess$Internal$SquareDelta$nee, romstad$elm_chess$Internal$SquareDelta$ssw, romstad$elm_chess$Internal$SquareDelta$sse, romstad$elm_chess$Internal$SquareDelta$sww, romstad$elm_chess$Internal$SquareDelta$see]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteBishop) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteRook) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteQueen) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$whiteKing) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackPawn) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackKnight) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nnw, romstad$elm_chess$Internal$SquareDelta$nne, romstad$elm_chess$Internal$SquareDelta$nww, romstad$elm_chess$Internal$SquareDelta$nee, romstad$elm_chess$Internal$SquareDelta$ssw, romstad$elm_chess$Internal$SquareDelta$sse, romstad$elm_chess$Internal$SquareDelta$sww, romstad$elm_chess$Internal$SquareDelta$see]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackBishop) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackRook) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackQueen) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : (_Utils_eq(piece, romstad$elm_chess$Internal$Piece$blackKing) ? _List_fromArray(\n\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne, romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se, romstad$elm_chess$Internal$SquareDelta$n, romstad$elm_chess$Internal$SquareDelta$s, romstad$elm_chess$Internal$SquareDelta$w, romstad$elm_chess$Internal$SquareDelta$e]) : _List_Nil)))))))))));\n};\nvar romstad$elm_chess$Internal$PieceType$isSlider = function (kind) {\n\treturn _Utils_eq(kind, romstad$elm_chess$Internal$PieceType$bishop) || (_Utils_eq(kind, romstad$elm_chess$Internal$PieceType$rook) || _Utils_eq(kind, romstad$elm_chess$Internal$PieceType$queen));\n};\nvar romstad$elm_chess$Internal$Piece$isSlider = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$Piece$kind, romstad$elm_chess$Internal$PieceType$isSlider);\nvar romstad$elm_chess$Internal$SquareFile$isOutside = function (file) {\n\treturn (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$SquareFile$unwrap(file),\n\t\tromstad$elm_chess$Internal$BoardDimensions$fileMin) < 0) || (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$SquareFile$unwrap(file),\n\t\tromstad$elm_chess$Internal$BoardDimensions$fileMax) > 0);\n};\nvar romstad$elm_chess$Internal$SquareRank$isOutside = function (rank) {\n\treturn (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$SquareRank$unwrap(rank),\n\t\tromstad$elm_chess$Internal$BoardDimensions$rankMin) < 0) || (_Utils_cmp(\n\t\tromstad$elm_chess$Internal$SquareRank$unwrap(rank),\n\t\tromstad$elm_chess$Internal$BoardDimensions$rankMax) > 0);\n};\nvar romstad$elm_chess$Internal$Square$isOutside = function (square) {\n\treturn romstad$elm_chess$Internal$SquareFile$isOutside(\n\t\tromstad$elm_chess$Internal$Square$file(square)) || romstad$elm_chess$Internal$SquareRank$isOutside(\n\t\tromstad$elm_chess$Internal$Square$rank(square));\n};\nvar romstad$elm_chess$Internal$Square$squaresInDirection = F2(\n\tfunction (startSquare, delta_) {\n\t\tvar squaresInDirectionInternal = F2(\n\t\t\tfunction (square, acc) {\n\t\t\t\tsquaresInDirectionInternal:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (romstad$elm_chess$Internal$Square$isOutside(square)) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$square = A2(romstad$elm_chess$Internal$Square$add, square, delta_),\n\t\t\t\t\t\t\t$temp$acc = A2(elm$core$List$cons, square, acc);\n\t\t\t\t\t\tsquare = $temp$square;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tcontinue squaresInDirectionInternal;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\treturn elm$core$List$reverse(\n\t\t\tA2(\n\t\t\t\tsquaresInDirectionInternal,\n\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, startSquare, delta_),\n\t\t\t\t_List_Nil));\n\t});\nvar romstad$elm_chess$Internal$Square$deltasInDirection = F2(\n\tfunction (startSquare, delta_) {\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (s) {\n\t\t\t\treturn A2(romstad$elm_chess$Internal$Square$subtract, s, startSquare);\n\t\t\t},\n\t\t\tA2(romstad$elm_chess$Internal$Square$squaresInDirection, startSquare, delta_));\n\t});\nvar romstad$elm_chess$Internal$Square$possibleDeltasInDirection = function (delta_) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (sq, result) {\n\t\t\t\tvar deltas = A2(romstad$elm_chess$Internal$Square$deltasInDirection, sq, delta_);\n\t\t\t\treturn (_Utils_cmp(\n\t\t\t\t\telm$core$List$length(deltas),\n\t\t\t\t\telm$core$List$length(result)) > 0) ? deltas : result;\n\t\t\t}),\n\t\t_List_Nil,\n\t\tromstad$elm_chess$Internal$Square$all);\n};\nvar romstad$elm_chess$Internal$BoardDimensions$squareMax = romstad$elm_chess$Internal$BoardDimensions$fileMax + (romstad$elm_chess$Internal$BoardDimensions$rankMax * romstad$elm_chess$Internal$BoardDimensions$extendedFileCount);\nvar romstad$elm_chess$Internal$BoardDimensions$squareMin = romstad$elm_chess$Internal$BoardDimensions$fileMin + (romstad$elm_chess$Internal$BoardDimensions$rankMin * romstad$elm_chess$Internal$BoardDimensions$extendedFileCount);\nvar romstad$elm_chess$Internal$SquareDelta$max = romstad$elm_chess$Internal$SquareDelta$SquareDelta(romstad$elm_chess$Internal$BoardDimensions$squareMax - romstad$elm_chess$Internal$BoardDimensions$squareMin);\nvar romstad$elm_chess$Internal$Piece$computeAttackDeltas = function (piece) {\n\tvar deltasByDirection = A2(\n\t\telm$core$List$concatMap,\n\t\tfunction (d) {\n\t\t\treturn romstad$elm_chess$Internal$Piece$isSlider(piece) ? A2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (d2) {\n\t\t\t\t\treturn _Utils_Tuple2(d, d2);\n\t\t\t\t},\n\t\t\t\tromstad$elm_chess$Internal$Square$possibleDeltasInDirection(d)) : _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(d, d)\n\t\t\t\t]);\n\t\t},\n\t\tromstad$elm_chess$Internal$Piece$attackDirections(piece));\n\tvar deltaMax = romstad$elm_chess$Internal$SquareDelta$unwrap(romstad$elm_chess$Internal$SquareDelta$max);\n\treturn elm$core$Array$toList(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n0, result) {\n\t\t\t\t\tvar d0 = _n0.a;\n\t\t\t\t\tvar d = _n0.b;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\telm$core$Array$set,\n\t\t\t\t\t\tdeltaMax + romstad$elm_chess$Internal$SquareDelta$unwrap(d),\n\t\t\t\t\t\telm$core$Maybe$Just(d0),\n\t\t\t\t\t\tresult);\n\t\t\t\t}),\n\t\t\tA2(elm$core$Array$repeat, (2 * deltaMax) + 1, elm$core$Maybe$Nothing),\n\t\t\tdeltasByDirection));\n};\nvar romstad$elm_chess$Internal$Piece$attackDeltas = elm$core$Array$fromList(\n\tA2(\n\t\telm$core$List$concatMap,\n\t\tromstad$elm_chess$Internal$Piece$computeAttackDeltas,\n\t\tA2(\n\t\t\telm$core$List$map,\n\t\t\tromstad$elm_chess$Internal$Piece$Piece,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\tromstad$elm_chess$Internal$Piece$unwrap(romstad$elm_chess$Internal$Piece$blackKing)))));\nvar romstad$elm_chess$Internal$Piece$attackDelta = F3(\n\tfunction (piece, from, to) {\n\t\tvar deltaMax = romstad$elm_chess$Internal$SquareDelta$unwrap(romstad$elm_chess$Internal$SquareDelta$max);\n\t\treturn A2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\telm$core$Maybe$Nothing,\n\t\t\tA2(\n\t\t\t\telm$core$Array$get,\n\t\t\t\t(((romstad$elm_chess$Internal$Piece$unwrap(piece) * ((2 * deltaMax) + 1)) + romstad$elm_chess$Internal$Square$unwrap(to)) - romstad$elm_chess$Internal$Square$unwrap(from)) + deltaMax,\n\t\t\t\tromstad$elm_chess$Internal$Piece$attackDeltas));\n\t});\nvar romstad$elm_chess$Internal$Board$pieceAttacksSquare = F3(\n\tfunction (from, to, board) {\n\t\tvar piece = A2(romstad$elm_chess$Internal$Board$pieceOn, from, board);\n\t\tvar _n0 = A3(romstad$elm_chess$Internal$Piece$attackDelta, piece, from, to);\n\t\tif (_n0.$ === 'Nothing') {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tvar delta = _n0.a;\n\t\t\treturn romstad$elm_chess$Internal$Piece$isSlider(piece) ? A4(romstad$elm_chess$Internal$Board$lineIsClear, board, from, to, delta) : true;\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Board$sideAttacksSquare = F3(\n\tfunction (side, square, board) {\n\t\treturn A2(\n\t\t\telm$core$List$any,\n\t\t\tfunction (s) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$color(\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, s, board)),\n\t\t\t\t\tside) && A3(romstad$elm_chess$Internal$Board$pieceAttacksSquare, s, square, board);\n\t\t\t},\n\t\t\tromstad$elm_chess$Internal$Square$all);\n\t});\nvar romstad$elm_chess$Internal$Position$sideAttacksSquare = F3(\n\tfunction (side, square, position) {\n\t\treturn A3(\n\t\t\tromstad$elm_chess$Internal$Board$sideAttacksSquare,\n\t\t\tside,\n\t\t\tsquare,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(position).board);\n\t});\nvar romstad$elm_chess$Internal$Position$isInCheck = F2(\n\tfunction (side, position) {\n\t\tvar _n0 = A2(romstad$elm_chess$Internal$Position$kingSquare, side, position);\n\t\tif (_n0.$ === 'Nothing') {\n\t\t\treturn false;\n\t\t} else {\n\t\t\tvar kingSquare_ = _n0.a;\n\t\t\treturn A3(\n\t\t\t\tromstad$elm_chess$Internal$Position$sideAttacksSquare,\n\t\t\t\tromstad$elm_chess$Internal$PieceColor$opposite(side),\n\t\t\t\tkingSquare_,\n\t\t\t\tposition);\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Position$sideToMove = function (position) {\n\treturn romstad$elm_chess$Internal$Position$unwrap(position).sideToMove;\n};\nvar romstad$elm_chess$Internal$Position$pseudoMoveIsLegal = F2(\n\tfunction (position, move) {\n\t\treturn !A2(\n\t\t\tromstad$elm_chess$Internal$Position$isInCheck,\n\t\t\tromstad$elm_chess$Internal$Position$sideToMove(position),\n\t\t\tA2(romstad$elm_chess$Internal$Position$doMove, move, position));\n\t});\nvar romstad$elm_chess$Internal$Board$isEmpty = F2(\n\tfunction (square, board) {\n\t\treturn _Utils_eq(\n\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, square, board),\n\t\t\tromstad$elm_chess$Internal$Piece$empty);\n\t});\nvar romstad$elm_chess$Internal$Position$isEmpty = F2(\n\tfunction (square, pos) {\n\t\treturn A2(\n\t\t\tromstad$elm_chess$Internal$Board$isEmpty,\n\t\t\tsquare,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(pos).board);\n\t});\nvar romstad$elm_chess$Internal$Move$Move = function (a) {\n\treturn {$: 'Move', a: a};\n};\nvar romstad$elm_chess$Internal$Square$compress = function (square) {\n\tvar r = (romstad$elm_chess$Internal$Square$unwrap(square) / romstad$elm_chess$Internal$BoardDimensions$extendedFileCount) | 0;\n\tvar f = A2(\n\t\telm$core$Basics$modBy,\n\t\tromstad$elm_chess$Internal$BoardDimensions$extendedFileCount,\n\t\tromstad$elm_chess$Internal$Square$unwrap(square));\n\treturn (f - romstad$elm_chess$Internal$BoardDimensions$fileMin) + (romstad$elm_chess$Internal$BoardDimensions$fileCount * (r - romstad$elm_chess$Internal$BoardDimensions$rankMin));\n};\nvar romstad$elm_chess$Internal$Move$make = F2(\n\tfunction (from_, to_) {\n\t\treturn romstad$elm_chess$Internal$Move$Move(\n\t\t\tromstad$elm_chess$Internal$Square$compress(to_) | (romstad$elm_chess$Internal$Square$compress(from_) << 6));\n\t});\nvar romstad$elm_chess$Internal$Move$makePromotion = F3(\n\tfunction (from_, to_, promotion_) {\n\t\treturn romstad$elm_chess$Internal$Move$Move(\n\t\t\t(romstad$elm_chess$Internal$Square$compress(to_) | (romstad$elm_chess$Internal$Square$compress(from_) << 6)) | (romstad$elm_chess$Internal$PieceType$unwrap(promotion_) << 12));\n\t});\nvar romstad$elm_chess$Internal$Square$isRankTwo = F2(\n\tfunction (square, color) {\n\t\treturn _Utils_eq(color, romstad$elm_chess$Internal$PieceColor$white) ? _Utils_eq(\n\t\t\tromstad$elm_chess$Internal$SquareRank$unwrap(\n\t\t\t\tromstad$elm_chess$Internal$Square$rank(square)),\n\t\t\tromstad$elm_chess$Internal$BoardDimensions$rankMin + 1) : _Utils_eq(\n\t\t\tromstad$elm_chess$Internal$SquareRank$unwrap(\n\t\t\t\tromstad$elm_chess$Internal$Square$rank(square)),\n\t\t\tromstad$elm_chess$Internal$BoardDimensions$rankMax - 1);\n\t});\nvar romstad$elm_chess$Internal$Position$pawnCapturePseudoMovesTo = F3(\n\tfunction (us, to, position) {\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\tvar ourPawn = A2(romstad$elm_chess$Internal$Piece$make, us, romstad$elm_chess$Internal$PieceType$pawn);\n\t\tvar ds = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? _List_fromArray(\n\t\t\t[romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]) : _List_fromArray(\n\t\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne]);\n\t\treturn A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tfunction (from) {\n\t\t\t\treturn A2(romstad$elm_chess$Internal$Square$isRankTwo, from, them) ? A2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$makePromotion, from, to),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[romstad$elm_chess$Internal$PieceType$queen, romstad$elm_chess$Internal$PieceType$rook, romstad$elm_chess$Internal$PieceType$bishop, romstad$elm_chess$Internal$PieceType$knight])) : _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$make, from, to)\n\t\t\t\t\t]);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, s, position),\n\t\t\t\t\t\tourPawn);\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$add(to),\n\t\t\t\t\tds)));\n\t});\nvar romstad$elm_chess$Internal$Move$makeEp = F2(\n\tfunction (from_, to_) {\n\t\treturn romstad$elm_chess$Internal$Move$Move(\n\t\t\t(romstad$elm_chess$Internal$Square$compress(to_) | (romstad$elm_chess$Internal$Square$compress(from_) << 6)) | (1 << 16));\n\t});\nvar romstad$elm_chess$Internal$Position$epSquare = function (position) {\n\treturn romstad$elm_chess$Internal$Position$unwrap(position).epSquare;\n};\nvar romstad$elm_chess$Internal$Position$pawnEpCapturePseudoMoves = F3(\n\tfunction (us, to, position) {\n\t\tvar _n0 = romstad$elm_chess$Internal$Position$epSquare(position);\n\t\tif (_n0.$ === 'Nothing') {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar epSquare_ = _n0.a;\n\t\t\tif (!_Utils_eq(epSquare_, to)) {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tvar ourPawn = A2(romstad$elm_chess$Internal$Piece$make, us, romstad$elm_chess$Internal$PieceType$pawn);\n\t\t\t\tvar ds = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? _List_fromArray(\n\t\t\t\t\t[romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]) : _List_fromArray(\n\t\t\t\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne]);\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tfunction (from) {\n\t\t\t\t\t\treturn A2(romstad$elm_chess$Internal$Move$makeEp, from, to);\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, s, position),\n\t\t\t\t\t\t\t\tourPawn);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Square$add(to),\n\t\t\t\t\t\t\tds)));\n\t\t\t}\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Position$pawnPushPseudoMovesTo = F3(\n\tfunction (us, to, position) {\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\tvar push = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? romstad$elm_chess$Internal$SquareDelta$s : romstad$elm_chess$Internal$SquareDelta$n;\n\t\tvar ourPawn = A2(romstad$elm_chess$Internal$Piece$make, us, romstad$elm_chess$Internal$PieceType$pawn);\n\t\tvar from = A2(romstad$elm_chess$Internal$Square$add, to, push);\n\t\tif (_Utils_eq(\n\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, from, position),\n\t\t\tourPawn)) {\n\t\t\treturn A2(romstad$elm_chess$Internal$Square$isRankTwo, from, them) ? A2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tA2(romstad$elm_chess$Internal$Move$makePromotion, from, to),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[romstad$elm_chess$Internal$PieceType$queen, romstad$elm_chess$Internal$PieceType$rook, romstad$elm_chess$Internal$PieceType$bishop, romstad$elm_chess$Internal$PieceType$knight])) : _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$make, from, to)\n\t\t\t\t]);\n\t\t} else {\n\t\t\tif (A2(romstad$elm_chess$Internal$Position$isEmpty, from, position)) {\n\t\t\t\tvar from2 = A2(romstad$elm_chess$Internal$Square$add, from, push);\n\t\t\t\treturn (A2(romstad$elm_chess$Internal$Square$isRankTwo, from2, us) && _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, from2, position),\n\t\t\t\t\tourPawn)) ? _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$make, from2, to)\n\t\t\t\t\t]) : _List_Nil;\n\t\t\t} else {\n\t\t\t\treturn _List_Nil;\n\t\t\t}\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Position$pawnPseudoMovesTo = F3(\n\tfunction (us, to, position) {\n\t\treturn _Utils_ap(\n\t\t\tA3(romstad$elm_chess$Internal$Position$pawnEpCapturePseudoMoves, us, to, position),\n\t\t\tA2(romstad$elm_chess$Internal$Position$isEmpty, to, position) ? A3(romstad$elm_chess$Internal$Position$pawnPushPseudoMovesTo, us, to, position) : A3(romstad$elm_chess$Internal$Position$pawnCapturePseudoMovesTo, us, to, position));\n\t});\nvar romstad$elm_chess$Internal$Board$scan = F3(\n\tfunction (board, square, delta) {\n\t\tvar scanInternal = function (s) {\n\t\t\tscanInternal:\n\t\t\twhile (true) {\n\t\t\t\tif (!_Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Board$pieceOn, s, board),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$empty)) {\n\t\t\t\t\treturn s;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$s = A2(romstad$elm_chess$Internal$Square$add, s, delta);\n\t\t\t\t\ts = $temp$s;\n\t\t\t\t\tcontinue scanInternal;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn scanInternal(\n\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, delta));\n\t});\nvar romstad$elm_chess$Internal$Position$scan = F3(\n\tfunction (position, square, delta) {\n\t\treturn A3(\n\t\t\tromstad$elm_chess$Internal$Board$scan,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(position).board,\n\t\t\tsquare,\n\t\t\tdelta);\n\t});\nvar romstad$elm_chess$Internal$Position$piecePseudoMovesTo = F4(\n\tfunction (us, pieceType, to, position) {\n\t\tvar ourPiece = A2(romstad$elm_chess$Internal$Piece$make, us, pieceType);\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (from) {\n\t\t\t\treturn A2(romstad$elm_chess$Internal$Move$make, from, to);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, s, position),\n\t\t\t\t\t\tourPiece);\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$isSlider(ourPiece) ? A2(romstad$elm_chess$Internal$Position$scan, position, to) : romstad$elm_chess$Internal$Square$add(to),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(ourPiece))));\n\t});\nvar romstad$elm_chess$Internal$Position$pseudoMovesTo = F3(\n\tfunction (piece, square, position) {\n\t\tvar us = romstad$elm_chess$Internal$Position$sideToMove(position);\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\tvar capturedPiece = A2(romstad$elm_chess$Internal$Position$pieceOn, square, position);\n\t\treturn (!(_Utils_eq(capturedPiece, romstad$elm_chess$Internal$Piece$empty) || _Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$color(capturedPiece),\n\t\t\tthem))) ? _List_Nil : (_Utils_eq(piece, romstad$elm_chess$Internal$PieceType$pawn) ? A3(romstad$elm_chess$Internal$Position$pawnPseudoMovesTo, us, square, position) : A4(romstad$elm_chess$Internal$Position$piecePseudoMovesTo, us, piece, square, position));\n\t});\nvar romstad$elm_chess$Internal$Position$movesTo = F3(\n\tfunction (piece, square, position) {\n\t\treturn A2(\n\t\t\telm$core$List$filter,\n\t\t\tromstad$elm_chess$Internal$Position$pseudoMoveIsLegal(position),\n\t\t\tA3(romstad$elm_chess$Internal$Position$pseudoMovesTo, piece, square, position));\n\t});\nvar romstad$elm_chess$Internal$Notation$disambiguation = F3(\n\tfunction (piece, move, position) {\n\t\tvar moves = A3(\n\t\t\tromstad$elm_chess$Internal$Position$movesTo,\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$Move$to(move),\n\t\t\tposition);\n\t\treturn (elm$core$List$length(moves) <= 1) ? '' : (A2(\n\t\t\telm$core$List$all,\n\t\t\tromstad$elm_chess$Internal$Notation$differentFileFrom(move),\n\t\t\tmoves) ? romstad$elm_chess$Internal$SquareFile$toString(\n\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(move))) : (A2(\n\t\t\telm$core$List$all,\n\t\t\tromstad$elm_chess$Internal$Notation$differentRankFrom(move),\n\t\t\tmoves) ? romstad$elm_chess$Internal$SquareRank$toString(\n\t\t\tromstad$elm_chess$Internal$Square$rank(\n\t\t\t\tromstad$elm_chess$Internal$Move$from(move))) : romstad$elm_chess$Internal$Square$toString(\n\t\t\tromstad$elm_chess$Internal$Move$from(move))));\n\t});\nvar elm$core$Char$toLower = _Char_toLower;\nvar romstad$elm_chess$Internal$Piece$toChar = function (piece) {\n\treturn _Utils_eq(\n\t\tromstad$elm_chess$Internal$Piece$color(piece),\n\t\tromstad$elm_chess$Internal$PieceColor$white) ? elm$core$Char$toUpper(\n\t\tromstad$elm_chess$Internal$PieceType$toChar(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece))) : elm$core$Char$toLower(\n\t\tromstad$elm_chess$Internal$PieceType$toChar(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece)));\n};\nvar romstad$elm_chess$Internal$Piece$toString = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$Piece$toChar, elm$core$String$fromChar);\nvar romstad$elm_chess$Internal$Notation$pieceMoveToSan = F2(\n\tfunction (move, position) {\n\t\tvar piece = A2(\n\t\t\tromstad$elm_chess$Internal$Position$pieceOn,\n\t\t\tromstad$elm_chess$Internal$Move$from(move),\n\t\t\tposition);\n\t\treturn _Utils_ap(\n\t\t\telm$core$String$toUpper(\n\t\t\t\tromstad$elm_chess$Internal$Piece$toString(piece)),\n\t\t\t_Utils_ap(\n\t\t\t\tA3(romstad$elm_chess$Internal$Notation$disambiguation, piece, move, position),\n\t\t\t\t_Utils_ap(\n\t\t\t\t\tA2(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Position$isEmpty,\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$to(move),\n\t\t\t\t\t\tposition) ? '' : 'x',\n\t\t\t\t\tromstad$elm_chess$Internal$Square$toString(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$to(move)))));\n\t});\nvar romstad$elm_chess$Internal$Position$isCheck = function (position) {\n\treturn A2(\n\t\tromstad$elm_chess$Internal$Position$isInCheck,\n\t\tromstad$elm_chess$Internal$Position$sideToMove(position),\n\t\tposition);\n};\nvar romstad$elm_chess$Internal$Position$moveGivesCheck = F2(\n\tfunction (move, position) {\n\t\treturn romstad$elm_chess$Internal$Position$isCheck(\n\t\t\tA2(romstad$elm_chess$Internal$Position$doMove, move, position));\n\t});\nvar romstad$elm_chess$Internal$Position$slidePseudoMovesFrom = F3(\n\tfunction (from, position, delta) {\n\t\tvar us = romstad$elm_chess$Internal$Position$sideToMove(position);\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\tvar slidePseudoMovesFromInternal = F2(\n\t\t\tfunction (to, result) {\n\t\t\t\tslidePseudoMovesFromInternal:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (A2(romstad$elm_chess$Internal$Position$isEmpty, to, position)) {\n\t\t\t\t\t\tvar $temp$to = A2(romstad$elm_chess$Internal$Square$add, to, delta),\n\t\t\t\t\t\t\t$temp$result = A2(\n\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$make, from, to),\n\t\t\t\t\t\t\tresult);\n\t\t\t\t\t\tto = $temp$to;\n\t\t\t\t\t\tresult = $temp$result;\n\t\t\t\t\t\tcontinue slidePseudoMovesFromInternal;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_Utils_eq(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Piece$color(\n\t\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, to, position)),\n\t\t\t\t\t\t\tthem)) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$make, from, to),\n\t\t\t\t\t\t\t\tresult);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(\n\t\t\tslidePseudoMovesFromInternal,\n\t\t\tA2(romstad$elm_chess$Internal$Square$add, from, delta),\n\t\t\t_List_Nil);\n\t});\nvar romstad$elm_chess$Internal$Position$bishopPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\treturn A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tA2(romstad$elm_chess$Internal$Position$slidePseudoMovesFrom, square, position),\n\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(romstad$elm_chess$Internal$Piece$whiteBishop));\n\t});\nvar romstad$elm_chess$Internal$Move$makeCastle = F2(\n\tfunction (from_, to_) {\n\t\treturn romstad$elm_chess$Internal$Move$Move(\n\t\t\t(romstad$elm_chess$Internal$Square$compress(to_) | (romstad$elm_chess$Internal$Square$compress(from_) << 6)) | (1 << 15));\n\t});\nvar romstad$elm_chess$Internal$CastleRights$canCastleKingside = F2(\n\tfunction (color, rights) {\n\t\treturn romstad$elm_chess$Internal$CastleRights$unwrap(rights) & (1 << (2 * romstad$elm_chess$Internal$PieceColor$unwrap(color)));\n\t});\nvar romstad$elm_chess$Internal$Position$canCastleKingside = F2(\n\tfunction (side, position) {\n\t\treturn A2(\n\t\t\tromstad$elm_chess$Internal$CastleRights$canCastleKingside,\n\t\t\tside,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(position).castleRights);\n\t});\nvar romstad$elm_chess$Internal$CastleRights$canCastleQueenside = F2(\n\tfunction (color, rights) {\n\t\treturn romstad$elm_chess$Internal$CastleRights$unwrap(rights) & (1 << ((2 * romstad$elm_chess$Internal$PieceColor$unwrap(color)) + 1));\n\t});\nvar romstad$elm_chess$Internal$Position$canCastleQueenside = F2(\n\tfunction (side, position) {\n\t\treturn A2(\n\t\t\tromstad$elm_chess$Internal$CastleRights$canCastleQueenside,\n\t\t\tside,\n\t\t\tromstad$elm_chess$Internal$Position$unwrap(position).castleRights);\n\t});\nvar romstad$elm_chess$Internal$Position$kingCastlePseudoMovesFrom = F4(\n\tfunction (us, them, square, position) {\n\t\treturn _Utils_ap(\n\t\t\tfunction () {\n\t\t\t\tif (A2(romstad$elm_chess$Internal$Position$canCastleKingside, us, position)) {\n\t\t\t\t\tvar f1 = A2(romstad$elm_chess$Internal$Square$add, square, romstad$elm_chess$Internal$SquareDelta$e);\n\t\t\t\t\tvar g1 = A2(romstad$elm_chess$Internal$Square$add, f1, romstad$elm_chess$Internal$SquareDelta$e);\n\t\t\t\t\treturn (A2(romstad$elm_chess$Internal$Position$isEmpty, f1, position) && (A2(romstad$elm_chess$Internal$Position$isEmpty, g1, position) && ((!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, square, position)) && ((!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, f1, position)) && (!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, g1, position)))))) ? _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$makeCastle, square, g1)\n\t\t\t\t\t\t]) : _List_Nil;\n\t\t\t\t} else {\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t}\n\t\t\t}(),\n\t\t\tfunction () {\n\t\t\t\tif (A2(romstad$elm_chess$Internal$Position$canCastleQueenside, us, position)) {\n\t\t\t\t\tvar d1 = A2(romstad$elm_chess$Internal$Square$add, square, romstad$elm_chess$Internal$SquareDelta$w);\n\t\t\t\t\tvar c1 = A2(romstad$elm_chess$Internal$Square$add, d1, romstad$elm_chess$Internal$SquareDelta$w);\n\t\t\t\t\tvar b1 = A2(romstad$elm_chess$Internal$Square$add, c1, romstad$elm_chess$Internal$SquareDelta$w);\n\t\t\t\t\treturn (A2(romstad$elm_chess$Internal$Position$isEmpty, d1, position) && (A2(romstad$elm_chess$Internal$Position$isEmpty, c1, position) && (A2(romstad$elm_chess$Internal$Position$isEmpty, b1, position) && ((!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, square, position)) && ((!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, d1, position)) && (!A3(romstad$elm_chess$Internal$Position$sideAttacksSquare, them, c1, position))))))) ? _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$makeCastle, square, c1)\n\t\t\t\t\t\t]) : _List_Nil;\n\t\t\t\t} else {\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t}\n\t\t\t}());\n\t});\nvar romstad$elm_chess$Internal$Position$kingPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\tvar us = romstad$elm_chess$Internal$Position$sideToMove(position);\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\treturn _Utils_ap(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (to) {\n\t\t\t\t\treturn A2(romstad$elm_chess$Internal$Move$make, square, to);\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\treturn A2(romstad$elm_chess$Internal$Position$isEmpty, s, position) || _Utils_eq(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Piece$color(\n\t\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, s, position)),\n\t\t\t\t\t\t\tthem);\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tromstad$elm_chess$Internal$Square$add(square),\n\t\t\t\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(romstad$elm_chess$Internal$Piece$whiteKing)))),\n\t\t\tA4(romstad$elm_chess$Internal$Position$kingCastlePseudoMovesFrom, us, them, square, position));\n\t});\nvar romstad$elm_chess$Internal$Position$knightPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(\n\t\t\tromstad$elm_chess$Internal$Position$sideToMove(position));\n\t\treturn A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (to) {\n\t\t\t\treturn A2(romstad$elm_chess$Internal$Move$make, square, to);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (s) {\n\t\t\t\t\treturn A2(romstad$elm_chess$Internal$Position$isEmpty, s, position) || _Utils_eq(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Piece$color(\n\t\t\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, s, position)),\n\t\t\t\t\t\tthem);\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$add(square),\n\t\t\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(romstad$elm_chess$Internal$Piece$whiteKnight))));\n\t});\nvar romstad$elm_chess$Internal$Position$colorOn = F2(\n\tfunction (square, pos) {\n\t\treturn romstad$elm_chess$Internal$Piece$color(\n\t\t\tA2(romstad$elm_chess$Internal$Position$pieceOn, square, pos));\n\t});\nvar romstad$elm_chess$Internal$Position$pawnCaptures = F4(\n\tfunction (us, them, square, position) {\n\t\tvar ds = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? _List_fromArray(\n\t\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne]) : _List_fromArray(\n\t\t\t[romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]);\n\t\tvar toSqs = A2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (s) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Position$colorOn, s, position),\n\t\t\t\t\tthem);\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tromstad$elm_chess$Internal$Square$add(square),\n\t\t\t\tds));\n\t\treturn A2(romstad$elm_chess$Internal$Square$isRankTwo, square, them) ? A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tfunction (to) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Move$makePromotion, square, to),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[romstad$elm_chess$Internal$PieceType$queen, romstad$elm_chess$Internal$PieceType$rook, romstad$elm_chess$Internal$PieceType$bishop, romstad$elm_chess$Internal$PieceType$knight]));\n\t\t\t},\n\t\t\ttoSqs) : A2(\n\t\t\telm$core$List$map,\n\t\t\tromstad$elm_chess$Internal$Move$make(square),\n\t\t\ttoSqs);\n\t});\nvar romstad$elm_chess$Internal$Position$pawnEpCaptures = F4(\n\tfunction (us, them, square, position) {\n\t\tvar _n0 = romstad$elm_chess$Internal$Position$epSquare(position);\n\t\tif (_n0.$ === 'Nothing') {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar epSquare_ = _n0.a;\n\t\t\tvar ds = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? _List_fromArray(\n\t\t\t\t[romstad$elm_chess$Internal$SquareDelta$nw, romstad$elm_chess$Internal$SquareDelta$ne]) : _List_fromArray(\n\t\t\t\t[romstad$elm_chess$Internal$SquareDelta$sw, romstad$elm_chess$Internal$SquareDelta$se]);\n\t\t\treturn A2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tromstad$elm_chess$Internal$Move$makeEp(square),\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\telm$core$Basics$eq(epSquare_),\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tromstad$elm_chess$Internal$Square$add(square),\n\t\t\t\t\t\tds)));\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Position$pawnPushes = F4(\n\tfunction (us, them, square, position) {\n\t\tvar push = _Utils_eq(us, romstad$elm_chess$Internal$PieceColor$white) ? romstad$elm_chess$Internal$SquareDelta$n : romstad$elm_chess$Internal$SquareDelta$s;\n\t\tvar doublePush = A2(romstad$elm_chess$Internal$SquareDelta$multiply, 2, push);\n\t\treturn (!A2(\n\t\t\tromstad$elm_chess$Internal$Position$isEmpty,\n\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, push),\n\t\t\tposition)) ? _List_Nil : (A2(romstad$elm_chess$Internal$Square$isRankTwo, square, them) ? A2(\n\t\t\telm$core$List$map,\n\t\t\tA2(\n\t\t\t\tromstad$elm_chess$Internal$Move$makePromotion,\n\t\t\t\tsquare,\n\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, push)),\n\t\t\t_List_fromArray(\n\t\t\t\t[romstad$elm_chess$Internal$PieceType$queen, romstad$elm_chess$Internal$PieceType$rook, romstad$elm_chess$Internal$PieceType$bishop, romstad$elm_chess$Internal$PieceType$knight])) : (A2(romstad$elm_chess$Internal$Square$isRankTwo, square, us) ? _Utils_ap(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\tromstad$elm_chess$Internal$Move$make,\n\t\t\t\t\tsquare,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, push))\n\t\t\t\t]),\n\t\t\t(!A2(\n\t\t\t\tromstad$elm_chess$Internal$Position$isEmpty,\n\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, doublePush),\n\t\t\t\tposition)) ? _List_Nil : _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\tromstad$elm_chess$Internal$Move$make,\n\t\t\t\t\tsquare,\n\t\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, doublePush))\n\t\t\t\t])) : _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\tromstad$elm_chess$Internal$Move$make,\n\t\t\t\tsquare,\n\t\t\t\tA2(romstad$elm_chess$Internal$Square$add, square, push))\n\t\t\t])));\n\t});\nvar romstad$elm_chess$Internal$Position$pawnPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\tvar us = romstad$elm_chess$Internal$Position$sideToMove(position);\n\t\tvar them = romstad$elm_chess$Internal$PieceColor$opposite(us);\n\t\treturn _Utils_ap(\n\t\t\tA4(romstad$elm_chess$Internal$Position$pawnPushes, us, them, square, position),\n\t\t\t_Utils_ap(\n\t\t\t\tA4(romstad$elm_chess$Internal$Position$pawnCaptures, us, them, square, position),\n\t\t\t\tA4(romstad$elm_chess$Internal$Position$pawnEpCaptures, us, them, square, position)));\n\t});\nvar romstad$elm_chess$Internal$Position$queenPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\treturn A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tA2(romstad$elm_chess$Internal$Position$slidePseudoMovesFrom, square, position),\n\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(romstad$elm_chess$Internal$Piece$whiteQueen));\n\t});\nvar romstad$elm_chess$Internal$Position$rookPseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\treturn A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tA2(romstad$elm_chess$Internal$Position$slidePseudoMovesFrom, square, position),\n\t\t\tromstad$elm_chess$Internal$Piece$attackDirections(romstad$elm_chess$Internal$Piece$whiteRook));\n\t});\nvar romstad$elm_chess$Internal$Position$pseudoMovesFrom = F2(\n\tfunction (square, position) {\n\t\tvar piece = A2(romstad$elm_chess$Internal$Position$pieceOn, square, position);\n\t\treturn (!_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$color(piece),\n\t\t\tromstad$elm_chess$Internal$Position$sideToMove(position))) ? _List_Nil : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$pawn) ? A2(romstad$elm_chess$Internal$Position$pawnPseudoMovesFrom, square, position) : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$knight) ? A2(romstad$elm_chess$Internal$Position$knightPseudoMovesFrom, square, position) : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$bishop) ? A2(romstad$elm_chess$Internal$Position$bishopPseudoMovesFrom, square, position) : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$rook) ? A2(romstad$elm_chess$Internal$Position$rookPseudoMovesFrom, square, position) : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$queen) ? A2(romstad$elm_chess$Internal$Position$queenPseudoMovesFrom, square, position) : (_Utils_eq(\n\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\tromstad$elm_chess$Internal$PieceType$king) ? A2(romstad$elm_chess$Internal$Position$kingPseudoMovesFrom, square, position) : _List_Nil))))));\n\t});\nvar romstad$elm_chess$Internal$Position$movesFrom = F2(\n\tfunction (square, position) {\n\t\treturn A2(\n\t\t\telm$core$List$filter,\n\t\t\tromstad$elm_chess$Internal$Position$pseudoMoveIsLegal(position),\n\t\t\tA2(romstad$elm_chess$Internal$Position$pseudoMovesFrom, square, position));\n\t});\nvar romstad$elm_chess$Internal$Position$moves = function (position) {\n\treturn A2(\n\t\telm$core$List$concatMap,\n\t\tfunction (s) {\n\t\t\treturn A2(romstad$elm_chess$Internal$Position$movesFrom, s, position);\n\t\t},\n\t\tromstad$elm_chess$Internal$Square$all);\n};\nvar romstad$elm_chess$Internal$Position$isCheckmate = function (position) {\n\treturn romstad$elm_chess$Internal$Position$isCheck(position) && (!elm$core$List$length(\n\t\tromstad$elm_chess$Internal$Position$moves(position)));\n};\nvar romstad$elm_chess$Internal$Position$moveGivesCheckmate = F2(\n\tfunction (move, position) {\n\t\treturn romstad$elm_chess$Internal$Position$isCheckmate(\n\t\t\tA2(romstad$elm_chess$Internal$Position$doMove, move, position));\n\t});\nvar romstad$elm_chess$Internal$Notation$toSan = F2(\n\tfunction (move, position) {\n\t\treturn _Utils_ap(\n\t\t\tfunction () {\n\t\t\t\tif (romstad$elm_chess$Internal$Move$isKingsideCastle(move)) {\n\t\t\t\t\treturn 'O-O';\n\t\t\t\t} else {\n\t\t\t\t\tif (romstad$elm_chess$Internal$Move$isQueensideCastle(move)) {\n\t\t\t\t\t\treturn 'O-O-O';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar piece = A2(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Position$pieceOn,\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move),\n\t\t\t\t\t\t\tposition);\n\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$Piece$kind(piece),\n\t\t\t\t\t\t\tromstad$elm_chess$Internal$PieceType$pawn) ? A2(romstad$elm_chess$Internal$Notation$pawnMoveToSan, move, position) : A2(romstad$elm_chess$Internal$Notation$pieceMoveToSan, move, position);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}(),\n\t\t\tA2(romstad$elm_chess$Internal$Position$moveGivesCheckmate, move, position) ? '#' : (A2(romstad$elm_chess$Internal$Position$moveGivesCheck, move, position) ? '+' : ''));\n\t});\nvar romstad$elm_chess$Notation$toSan = romstad$elm_chess$Internal$Notation$toSan;\nvar author$project$Main$doMove = F2(\n\tfunction (move, model) {\n\t\tvar _n0 = function () {\n\t\t\tvar _n1 = model.gameState;\n\t\t\tif (_n1.$ === 'MyTurn') {\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(romstad$elm_chess$Game$addMove, move, model.game),\n\t\t\t\t\tauthor$project$Main$OtherTurn,\n\t\t\t\t\tauthor$project$Main$send(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t'type',\n\t\t\t\t\t\t\t\telm$json$Json$Encode$string('GotMove')),\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t'move',\n\t\t\t\t\t\t\t\telm$json$Json$Encode$string(\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\tromstad$elm_chess$Notation$toSan,\n\t\t\t\t\t\t\t\t\t\tmove,\n\t\t\t\t\t\t\t\t\t\tromstad$elm_chess$Game$position(model.game))))\n\t\t\t\t\t\t\t])));\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple3(model.game, model.gameState, elm$core$Platform$Cmd$none);\n\t\t\t}\n\t\t}();\n\t\tvar newGame = _n0.a;\n\t\tvar newState = _n0.b;\n\t\tvar cmd = _n0.c;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{candidateMoves: _List_Nil, game: newGame, gameState: newState, selectedSquare: elm$core$Maybe$Nothing}),\n\t\t\tcmd);\n\t});\nvar romstad$elm_chess$Move$to = romstad$elm_chess$Internal$Move$to;\nvar romstad$elm_chess$Position$movesFrom = romstad$elm_chess$Internal$Position$movesFrom;\nvar author$project$Main$squarePressed = F2(\n\tfunction (s, model) {\n\t\tvar moves = A2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (m) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Move$to(m),\n\t\t\t\t\ts);\n\t\t\t},\n\t\t\tmodel.candidateMoves);\n\t\tvar _n0 = elm$core$List$head(moves);\n\t\tif (_n0.$ === 'Just') {\n\t\t\tvar m = _n0.a;\n\t\t\treturn A2(author$project$Main$doMove, m, model);\n\t\t} else {\n\t\t\tvar newMoves = A2(\n\t\t\t\tromstad$elm_chess$Position$movesFrom,\n\t\t\t\ts,\n\t\t\t\tromstad$elm_chess$Game$position(model.game));\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{\n\t\t\t\t\t\tcandidateMoves: newMoves,\n\t\t\t\t\t\tselectedSquare: (!elm$core$List$length(newMoves)) ? elm$core$Maybe$Nothing : elm$core$Maybe$Just(s)\n\t\t\t\t\t}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar elm$json$Json$Decode$decodeValue = _Json_run;\nvar elm$core$String$filter = _String_filter;\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar romstad$elm_chess$Internal$Notation$isImportantCharacter = function (ch) {\n\treturn (!_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('x'))) && ((!_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('='))) && ((!_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('+'))) && (!_Utils_eq(\n\t\tch,\n\t\t_Utils_chr('#')))));\n};\nvar romstad$elm_chess$Internal$Notation$isPieceCharacter = function (ch) {\n\treturn (ch === 'N') || ((ch === 'B') || ((ch === 'R') || ((ch === 'Q') || (ch === 'K'))));\n};\nvar romstad$elm_chess$Internal$Notation$kingsideCastlingFromSan = function (position) {\n\treturn elm$core$List$head(\n\t\tA2(\n\t\t\telm$core$List$filter,\n\t\t\tromstad$elm_chess$Internal$Move$isKingsideCastle,\n\t\t\tromstad$elm_chess$Internal$Position$moves(position)));\n};\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (_n0.$ === 'Just') {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$String$dropRight = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(elm$core$String$slice, 0, -n, string);\n\t});\nvar elm$core$String$right = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(\n\t\t\telm$core$String$slice,\n\t\t\t-n,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar romstad$elm_chess$Internal$Notation$pawnMatch = F3(\n\tfunction (promotion, fromFile, move) {\n\t\tif (promotion.$ === 'Nothing') {\n\t\t\tif (fromFile.$ === 'Nothing') {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tvar file = fromFile.a;\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move)),\n\t\t\t\t\tfile);\n\t\t\t}\n\t\t} else {\n\t\t\tvar promotion_ = promotion.a;\n\t\t\tif (fromFile.$ === 'Nothing') {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Move$promotion(move),\n\t\t\t\t\telm$core$Maybe$Just(promotion_));\n\t\t\t} else {\n\t\t\t\tvar file = fromFile.a;\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Move$promotion(move),\n\t\t\t\t\telm$core$Maybe$Just(promotion_)) && _Utils_eq(\n\t\t\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move)),\n\t\t\t\t\tfile);\n\t\t\t}\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Notation$findPawnMove = F4(\n\tfunction (to, promotion, fromFile, position) {\n\t\tvar candidates = A2(\n\t\t\telm$core$List$filter,\n\t\t\tA2(romstad$elm_chess$Internal$Notation$pawnMatch, promotion, fromFile),\n\t\t\tA3(romstad$elm_chess$Internal$Position$movesTo, romstad$elm_chess$Internal$PieceType$pawn, to, position));\n\t\treturn (elm$core$List$length(candidates) === 1) ? elm$core$List$head(candidates) : elm$core$Maybe$Nothing;\n\t});\nvar romstad$elm_chess$Internal$PieceType$fromString = function (string) {\n\treturn A2(\n\t\telm$core$Maybe$andThen,\n\t\tromstad$elm_chess$Internal$PieceType$fromChar,\n\t\telm$core$List$head(\n\t\t\telm$core$String$toList(string)));\n};\nvar romstad$elm_chess$Internal$Notation$pawnMoveFromSan = F2(\n\tfunction (string, position) {\n\t\tvar promotion = romstad$elm_chess$Internal$PieceType$fromString(\n\t\t\tA2(elm$core$String$right, 1, string));\n\t\tvar str = _Utils_eq(promotion, elm$core$Maybe$Nothing) ? string : A2(elm$core$String$dropRight, 1, string);\n\t\tvar to = romstad$elm_chess$Internal$Square$fromString(\n\t\t\tA2(elm$core$String$right, 2, str));\n\t\tvar file = elm$core$List$head(\n\t\t\tA2(\n\t\t\t\telm$core$List$filterMap,\n\t\t\t\tromstad$elm_chess$Internal$SquareFile$fromChar,\n\t\t\t\telm$core$String$toList(\n\t\t\t\t\tA2(elm$core$String$dropRight, 2, str))));\n\t\tif (to.$ === 'Nothing') {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar to_ = to.a;\n\t\t\treturn A4(romstad$elm_chess$Internal$Notation$findPawnMove, to_, promotion, file, position);\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Notation$match = F5(\n\tfunction (kind, to, fromFile, fromRank, move) {\n\t\tif (fromFile.$ === 'Nothing') {\n\t\t\tif (fromRank.$ === 'Nothing') {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tvar rank = fromRank.a;\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\trank,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$rank(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move)));\n\t\t\t}\n\t\t} else {\n\t\t\tvar file = fromFile.a;\n\t\t\tif (fromRank.$ === 'Nothing') {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tfile,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move)));\n\t\t\t} else {\n\t\t\t\tvar rank = fromRank.a;\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tfile,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$file(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$from(move))) && _Utils_eq(\n\t\t\t\t\trank,\n\t\t\t\t\tromstad$elm_chess$Internal$Square$rank(\n\t\t\t\t\t\tromstad$elm_chess$Internal$Move$to(move)));\n\t\t\t}\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Notation$findPieceMove = F4(\n\tfunction (kind, to, disambig, position) {\n\t\tvar dis = elm$core$String$toList(disambig);\n\t\tvar files = A2(elm$core$List$filterMap, romstad$elm_chess$Internal$SquareFile$fromChar, dis);\n\t\tvar ranks = A2(elm$core$List$filterMap, romstad$elm_chess$Internal$SquareRank$fromChar, dis);\n\t\tif ((elm$core$List$length(files) > 1) || (elm$core$List$length(ranks) > 1)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar rank = elm$core$List$head(ranks);\n\t\t\tvar file = elm$core$List$head(files);\n\t\t\tvar candidates = A2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tA4(romstad$elm_chess$Internal$Notation$match, kind, to, file, rank),\n\t\t\t\tA3(romstad$elm_chess$Internal$Position$movesTo, kind, to, position));\n\t\t\treturn (elm$core$List$length(candidates) === 1) ? elm$core$List$head(candidates) : elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Notation$pieceMoveFromSan = F2(\n\tfunction (str, position) {\n\t\tvar to = romstad$elm_chess$Internal$Square$fromString(\n\t\t\tA2(elm$core$String$right, 2, str));\n\t\tvar kind = romstad$elm_chess$Internal$PieceType$fromString(str);\n\t\tvar disambig = A2(\n\t\t\telm$core$String$dropRight,\n\t\t\t2,\n\t\t\tA2(elm$core$String$dropLeft, 1, str));\n\t\tif (kind.$ === 'Nothing') {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar kind_ = kind.a;\n\t\t\tif (to.$ === 'Nothing') {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar to_ = to.a;\n\t\t\t\treturn A4(romstad$elm_chess$Internal$Notation$findPieceMove, kind_, to_, disambig, position);\n\t\t\t}\n\t\t}\n\t});\nvar romstad$elm_chess$Internal$Notation$queensideCastlingFromSan = function (position) {\n\treturn elm$core$List$head(\n\t\tA2(\n\t\t\telm$core$List$filter,\n\t\t\tromstad$elm_chess$Internal$Move$isQueensideCastle,\n\t\t\tromstad$elm_chess$Internal$Position$moves(position)));\n};\nvar romstad$elm_chess$Internal$Notation$fromSan = F2(\n\tfunction (string, position) {\n\t\tvar str = A2(elm$core$String$filter, romstad$elm_chess$Internal$Notation$isImportantCharacter, string);\n\t\treturn (str === 'O-O') ? romstad$elm_chess$Internal$Notation$kingsideCastlingFromSan(position) : ((str === 'O-O-O') ? romstad$elm_chess$Internal$Notation$queensideCastlingFromSan(position) : (romstad$elm_chess$Internal$Notation$isPieceCharacter(\n\t\t\tA2(elm$core$String$left, 1, str)) ? A2(romstad$elm_chess$Internal$Notation$pieceMoveFromSan, str, position) : A2(romstad$elm_chess$Internal$Notation$pawnMoveFromSan, str, position)));\n\t});\nvar romstad$elm_chess$Notation$fromSan = romstad$elm_chess$Internal$Notation$fromSan;\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tupdate:\n\t\twhile (true) {\n\t\t\tswitch (msg.$) {\n\t\t\t\tcase 'JsPort':\n\t\t\t\t\tvar val = msg.a;\n\t\t\t\t\tvar _n1 = A2(elm$json$Json$Decode$decodeValue, author$project$Main$portDecoder, val);\n\t\t\t\t\tif (_n1.$ === 'Ok') {\n\t\t\t\t\t\tvar msg_ = _n1.a;\n\t\t\t\t\t\tvar $temp$msg = msg_,\n\t\t\t\t\t\t\t$temp$model = model;\n\t\t\t\t\t\tmsg = $temp$msg;\n\t\t\t\t\t\tmodel = $temp$model;\n\t\t\t\t\t\tcontinue update;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar err = _n1.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\terror: elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\telm$json$Json$Decode$errorToString(err))\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\t\t}\n\t\t\t\tcase 'SetOtherId':\n\t\t\t\t\tvar s = msg.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{otherId: s}),\n\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\tcase 'Connect':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tauthor$project$Main$output(\n\t\t\t\t\t\t\telm$json$Json$Encode$object(\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t'type',\n\t\t\t\t\t\t\t\t\t\telm$json$Json$Encode$string('Connect')),\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t'otherId',\n\t\t\t\t\t\t\t\t\t\telm$json$Json$Encode$string(model.otherId))\n\t\t\t\t\t\t\t\t\t]))));\n\t\t\t\tcase 'SquarePressed':\n\t\t\t\t\tvar sq = msg.a;\n\t\t\t\t\treturn A2(author$project$Main$squarePressed, sq, model);\n\t\t\t\tcase 'GotId':\n\t\t\t\t\tvar id = msg.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmyId: elm$core$Maybe$Just(id)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\tcase 'Ready':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{gameState: author$project$Main$MyTurn}),\n\t\t\t\t\t\tauthor$project$Main$send(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t'type',\n\t\t\t\t\t\t\t\t\telm$json$Json$Encode$string('Ready2'))\n\t\t\t\t\t\t\t\t])));\n\t\t\t\tcase 'Ready2':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{gameState: author$project$Main$OtherTurn, isBlack: true}),\n\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\tcase 'GotMove':\n\t\t\t\t\tvar m = msg.a;\n\t\t\t\t\tvar _n2 = A2(\n\t\t\t\t\t\tromstad$elm_chess$Notation$fromSan,\n\t\t\t\t\t\tm,\n\t\t\t\t\t\tromstad$elm_chess$Game$position(model.game));\n\t\t\t\t\tif (_n2.$ === 'Just') {\n\t\t\t\t\t\tvar move = _n2.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcandidateMoves: _List_Nil,\n\t\t\t\t\t\t\t\t\tgame: A2(romstad$elm_chess$Game$addMove, move, model.game),\n\t\t\t\t\t\t\t\t\tgameState: author$project$Main$MyTurn,\n\t\t\t\t\t\t\t\t\tselectedSquare: elm$core$Maybe$Nothing\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t\t\t\t}\n\t\t\t\tcase 'Rematch':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tauthor$project$Main$rematch(model),\n\t\t\t\t\t\tauthor$project$Main$send(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t'type',\n\t\t\t\t\t\t\t\t\telm$json$Json$Encode$string('Rematch'))\n\t\t\t\t\t\t\t\t])));\n\t\t\t\tdefault:\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tauthor$project$Main$rematch(model),\n\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t}\n\t\t}\n\t});\nvar author$project$Main$Connect = {$: 'Connect'};\nvar author$project$Main$SetOtherId = function (a) {\n\treturn {$: 'SetOtherId', a: a};\n};\nvar author$project$Main$Rematch = {$: 'Rematch'};\nvar author$project$Main$SquarePressed = function (a) {\n\treturn {$: 'SquarePressed', a: a};\n};\nvar elm$core$String$fromFloat = _String_fromNumber;\nvar author$project$Main$px = function (f) {\n\treturn elm$core$String$fromFloat(f) + 'px';\n};\nvar elm$core$String$toLower = _String_toLower;\nvar romstad$elm_chess$Piece$color = romstad$elm_chess$Internal$Piece$color;\nvar romstad$elm_chess$Piece$kind = romstad$elm_chess$Internal$Piece$kind;\nvar romstad$elm_chess$Internal$PieceColor$toChar = function (color) {\n\treturn _Utils_eq(color, romstad$elm_chess$Internal$PieceColor$white) ? _Utils_chr('w') : (_Utils_eq(color, romstad$elm_chess$Internal$PieceColor$black) ? _Utils_chr('b') : _Utils_chr('-'));\n};\nvar romstad$elm_chess$Internal$PieceColor$toString = A2(elm$core$Basics$composeR, romstad$elm_chess$Internal$PieceColor$toChar, elm$core$String$fromChar);\nvar romstad$elm_chess$PieceColor$toString = romstad$elm_chess$Internal$PieceColor$toString;\nvar romstad$elm_chess$PieceType$toString = romstad$elm_chess$Internal$PieceType$toString;\nvar author$project$Main$pieceImgUrl = function (piece) {\n\treturn 'http://res.cloudinary.com/ds1kquy7j/image/upload/' + (romstad$elm_chess$PieceColor$toString(\n\t\tromstad$elm_chess$Piece$color(piece)) + (elm$core$String$toLower(\n\t\tromstad$elm_chess$PieceType$toString(\n\t\t\tromstad$elm_chess$Piece$kind(piece))) + '.png'));\n};\nvar author$project$Main$url = function (u) {\n\treturn 'url(' + (u + ')');\n};\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 'Normal':\n\t\t\treturn 0;\n\t\tcase 'MayStopPropagation':\n\t\t\treturn 1;\n\t\tcase 'MayPreventDefault':\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar elm$html$Html$Attributes$style = elm$virtual_dom$VirtualDom$style;\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 'Normal', a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar author$project$Main$square = F4(\n\tfunction (_n0, piece, sqSize, msg) {\n\t\tvar col = _n0.a;\n\t\tvar row = _n0.b;\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Events$onClick(msg),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t'backgroundColor',\n\t\t\t\t\t(!A2(elm$core$Basics$modBy, 2, col + row)) ? 'rgb(200, 200, 200)' : 'rgb(140, 140, 140)'),\n\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'position', 'absolute'),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t'top',\n\t\t\t\t\tauthor$project$Main$px(row * sqSize)),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t'left',\n\t\t\t\t\tauthor$project$Main$px(col * sqSize)),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t'width',\n\t\t\t\t\tauthor$project$Main$px(sqSize)),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t'height',\n\t\t\t\t\tauthor$project$Main$px(sqSize))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tfunction () {\n\t\t\t\t\tif (piece.$ === 'Nothing') {\n\t\t\t\t\t\treturn elm$html$Html$text('');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar piece_ = piece.a;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\t\tauthor$project$Main$px(sqSize)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\t\t\tauthor$project$Main$px(sqSize)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'backgroundImage',\n\t\t\t\t\t\t\t\t\tauthor$project$Main$url(\n\t\t\t\t\t\t\t\t\t\tauthor$project$Main$pieceImgUrl(piece_))),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'backgroundSize',\n\t\t\t\t\t\t\t\t\tauthor$project$Main$px(sqSize) + (' ' + author$project$Main$px(sqSize)))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_Nil);\n\t\t\t\t\t}\n\t\t\t\t}()\n\t\t\t\t]));\n\t});\nvar romstad$elm_chess$Square$file = romstad$elm_chess$Internal$Square$file;\nvar romstad$elm_chess$Square$rank = romstad$elm_chess$Internal$Square$rank;\nvar romstad$elm_chess$Internal$SquareFile$toIndex = function (file) {\n\treturn romstad$elm_chess$Internal$SquareFile$unwrap(file) - romstad$elm_chess$Internal$BoardDimensions$fileMin;\n};\nvar romstad$elm_chess$SquareFile$toIndex = romstad$elm_chess$Internal$SquareFile$toIndex;\nvar romstad$elm_chess$Internal$SquareRank$toIndex = function (rank) {\n\treturn romstad$elm_chess$Internal$SquareRank$unwrap(rank) - romstad$elm_chess$Internal$BoardDimensions$rankMin;\n};\nvar romstad$elm_chess$SquareRank$toIndex = romstad$elm_chess$Internal$SquareRank$toIndex;\nvar author$project$Main$squareToCoordinates = F2(\n\tfunction (square_, isRotated) {\n\t\treturn _Utils_Tuple2(\n\t\t\tisRotated ? (7 - romstad$elm_chess$SquareFile$toIndex(\n\t\t\t\tromstad$elm_chess$Square$file(square_))) : romstad$elm_chess$SquareFile$toIndex(\n\t\t\t\tromstad$elm_chess$Square$file(square_)),\n\t\t\tisRotated ? romstad$elm_chess$SquareRank$toIndex(\n\t\t\t\tromstad$elm_chess$Square$rank(square_)) : (7 - romstad$elm_chess$SquareRank$toIndex(\n\t\t\t\tromstad$elm_chess$Square$rank(square_))));\n\t});\nvar elm$html$Html$b = _VirtualDom_node('b');\nvar elm$html$Html$button = _VirtualDom_node('button');\nvar romstad$elm_chess$PieceColor$black = romstad$elm_chess$Internal$PieceColor$black;\nvar romstad$elm_chess$Position$isCheckmate = romstad$elm_chess$Internal$Position$isCheckmate;\nvar romstad$elm_chess$Position$pieceOn = F2(\n\tfunction (square, pos) {\n\t\tvar p = A2(romstad$elm_chess$Internal$Position$pieceOn, square, pos);\n\t\treturn (_Utils_eq(p, romstad$elm_chess$Internal$Piece$empty) || _Utils_eq(p, romstad$elm_chess$Internal$Piece$outside)) ? elm$core$Maybe$Nothing : elm$core$Maybe$Just(p);\n\t});\nvar romstad$elm_chess$Position$sideToMove = romstad$elm_chess$Internal$Position$sideToMove;\nvar romstad$elm_chess$Square$all = romstad$elm_chess$Internal$Square$all;\nvar author$project$Main$board = F4(\n\tfunction (isBlack, position, size, isRotated) {\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\tauthor$project$Main$px(size)),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\tauthor$project$Main$px(size)),\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'position', 'relative'),\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'marginLeft', 'auto'),\n\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'marginRight', 'auto')\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t\tauthor$project$Main$square,\n\t\t\t\t\t\t\t\tA2(author$project$Main$squareToCoordinates, s, isRotated),\n\t\t\t\t\t\t\t\tA2(romstad$elm_chess$Position$pieceOn, s, position),\n\t\t\t\t\t\t\t\tsize / 8,\n\t\t\t\t\t\t\t\tauthor$project$Main$SquarePressed(s));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tromstad$elm_chess$Square$all)),\n\t\t\t\t\tfunction () {\n\t\t\t\t\tif (romstad$elm_chess$Position$isCheckmate(position)) {\n\t\t\t\t\t\tvar txt = (_Utils_eq(\n\t\t\t\t\t\t\tromstad$elm_chess$Position$sideToMove(position),\n\t\t\t\t\t\t\tromstad$elm_chess$PieceColor$black) && isBlack) ? 'You lose!' : 'You win!';\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$b,\n\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Checkmate! ' + txt)\n\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$Rematch)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\telm$html$Html$text('Rematch')\n\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elm$html$Html$text('');\n\t\t\t\t\t}\n\t\t\t\t}()\n\t\t\t\t]));\n\t});\nvar elm$html$Html$input = _VirtualDom_node('input');\nvar elm$json$Json$Encode$bool = _Json_wrap;\nvar elm$html$Html$Attributes$boolProperty = F2(\n\tfunction (key, bool) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$bool(bool));\n\t});\nvar elm$html$Html$Attributes$readonly = elm$html$Html$Attributes$boolProperty('readOnly');\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$value = elm$html$Html$Attributes$stringProperty('value');\nvar elm$html$Html$Events$alwaysStop = function (x) {\n\treturn _Utils_Tuple2(x, true);\n};\nvar elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {\n\treturn {$: 'MayStopPropagation', a: a};\n};\nvar elm$html$Html$Events$stopPropagationOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$MayStopPropagation(decoder));\n\t});\nvar elm$json$Json$Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3(elm$core$List$foldr, elm$json$Json$Decode$field, decoder, fields);\n\t});\nvar elm$html$Html$Events$targetValue = A2(\n\telm$json$Json$Decode$at,\n\t_List_fromArray(\n\t\t['target', 'value']),\n\telm$json$Json$Decode$string);\nvar elm$html$Html$Events$onInput = function (tagger) {\n\treturn A2(\n\t\telm$html$Html$Events$stopPropagationOn,\n\t\t'input',\n\t\tA2(\n\t\t\telm$json$Json$Decode$map,\n\t\t\telm$html$Html$Events$alwaysStop,\n\t\t\tA2(elm$json$Json$Decode$map, tagger, elm$html$Html$Events$targetValue)));\n};\nvar author$project$Main$view = function (model) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('my id'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$input,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$readonly(true),\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$value(\n\t\t\t\t\t\t\t\tA2(elm$core$Maybe$withDefault, '', model.myId))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t])),\n\t\t\t\telm$html$Html$text('other id'),\n\t\t\t\tfunction () {\n\t\t\t\tvar _n0 = model.error;\n\t\t\t\tif (_n0.$ === 'Nothing') {\n\t\t\t\t\treturn elm$html$Html$text('');\n\t\t\t\t} else {\n\t\t\t\t\tvar e = _n0.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$b,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$text(e)\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]));\n\t\t\t\t}\n\t\t\t}(),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$input,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$value(model.otherId),\n\t\t\t\t\t\telm$html$Html$Events$onInput(author$project$Main$SetOtherId)\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$button,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Main$Connect)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('Connect')\n\t\t\t\t\t])),\n\t\t\t\tfunction () {\n\t\t\t\tvar _n1 = model.gameState;\n\t\t\t\tswitch (_n1.$) {\n\t\t\t\t\tcase 'Init':\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$text('Waiting for other player')\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t\tcase 'MyTurn':\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t\tauthor$project$Main$board,\n\t\t\t\t\t\t\t\t\tmodel.isBlack,\n\t\t\t\t\t\t\t\t\tromstad$elm_chess$Game$position(model.game),\n\t\t\t\t\t\t\t\t\t400.0,\n\t\t\t\t\t\t\t\t\tmodel.isBlack)\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t\tauthor$project$Main$board,\n\t\t\t\t\t\t\t\t\tmodel.isBlack,\n\t\t\t\t\t\t\t\t\tromstad$elm_chess$Game$position(model.game),\n\t\t\t\t\t\t\t\t\t400.0,\n\t\t\t\t\t\t\t\t\tmodel.isBlack),\n\t\t\t\t\t\t\t\t\telm$html$Html$text('Wait for other player to make a move')\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t}\n\t\t\t}()\n\t\t\t]));\n};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 'External', a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 'Internal', a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = function (a) {\n\treturn {$: 'NotFound', a: a};\n};\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0.a;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = function (a) {\n\treturn {$: 'Perform', a: a};\n};\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$core$Task$init = elm$core$Task$succeed(_Utils_Tuple0);\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0.a;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(_Utils_Tuple0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0.a;\n\t\treturn elm$core$Task$Perform(\n\t\t\tA2(elm$core$Task$map, tagger, task));\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\telm$core$Task$Perform(\n\t\t\t\tA2(elm$core$Task$map, toMessage, task)));\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = {$: 'Http'};\nvar elm$url$Url$Https = {$: 'Https'};\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {fragment: fragment, host: host, path: path, port_: port_, protocol: protocol, query: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 'Nothing') {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\telm$url$Url$Http,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\telm$url$Url$Https,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{\n\t\tinit: author$project$Main$init,\n\t\tsubscriptions: function (model) {\n\t\t\treturn author$project$Main$input(author$project$Main$JsPort);\n\t\t},\n\t\tupdate: author$project$Main$update,\n\t\tview: author$project$Main$view\n\t});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(_Utils_Tuple0))(0)}});}(this));"]}